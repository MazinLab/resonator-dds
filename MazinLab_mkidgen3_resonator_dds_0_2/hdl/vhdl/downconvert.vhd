-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity downconvert is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    res_out_TREADY : IN STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read8 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read9 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read11 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read12 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read13 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read14 : IN STD_LOGIC_VECTOR (15 downto 0);
    p_read15 : IN STD_LOGIC_VECTOR (15 downto 0);
    resdat_last_V : IN STD_LOGIC_VECTOR (0 downto 0);
    sincosines_0_i_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    sincosines_1_i_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    sincosines_2_i_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    sincosines_3_i_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    sincosines_4_i_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    sincosines_5_i_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    sincosines_6_i_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    sincosines_7_i_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    sincosines_0_q_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    sincosines_1_q_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    sincosines_2_q_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    sincosines_3_q_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    sincosines_4_q_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    sincosines_5_q_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    sincosines_6_q_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    sincosines_7_q_V_re : IN STD_LOGIC_VECTOR (15 downto 0);
    res_out_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    res_out_TVALID : OUT STD_LOGIC;
    res_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    res_out_TDATA_blk_n : OUT STD_LOGIC );
end;


architecture behav of downconvert is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal resdat_last_V_read_reg_579 : STD_LOGIC_VECTOR (0 downto 0);
    signal resdat_last_V_read_reg_579_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal resdat_last_V_read_reg_579_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal resdat_last_V_read_reg_579_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal resdat_last_V_read_reg_579_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal resdat_last_V_read_reg_579_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal resdat_last_V_read_reg_579_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal resdat_last_V_read_reg_579_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal resdat_last_V_read_reg_579_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal resdat_last_V_read_reg_579_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_cmpy_fu_302_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_302_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_302_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call35 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call35 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call35 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call35 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call35 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call35 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call35 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call35 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call35 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call35 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call35 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp45 : BOOLEAN;
    signal grp_cmpy_fu_314_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_314_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_314_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call38 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call38 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call38 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call38 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call38 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call38 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call38 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call38 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call38 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call38 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call38 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp46 : BOOLEAN;
    signal grp_cmpy_fu_326_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_326_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_326_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call41 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call41 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call41 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call41 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call41 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call41 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call41 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call41 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call41 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call41 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call41 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp47 : BOOLEAN;
    signal grp_cmpy_fu_338_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_338_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_338_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call44 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call44 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call44 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call44 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call44 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call44 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call44 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call44 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call44 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call44 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call44 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp48 : BOOLEAN;
    signal grp_cmpy_fu_350_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_350_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_350_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call47 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call47 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call47 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call47 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call47 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call47 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call47 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call47 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call47 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call47 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call47 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp49 : BOOLEAN;
    signal grp_cmpy_fu_362_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_362_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_362_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call50 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call50 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call50 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call50 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call50 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call50 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call50 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call50 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call50 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call50 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call50 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp50 : BOOLEAN;
    signal grp_cmpy_fu_374_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_374_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_374_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call53 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call53 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call53 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call53 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call53 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call53 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call53 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call53 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call53 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call53 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call53 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp51 : BOOLEAN;
    signal grp_cmpy_fu_386_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_386_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_cmpy_fu_386_ap_ce : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0_ignore_call56 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call56 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call56 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call56 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call56 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call56 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call56 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call56 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call56 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call56 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call56 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp52 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to9 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component cmpy IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ar_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ai_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        br_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        bi_V_read : IN STD_LOGIC_VECTOR (15 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;



begin
    grp_cmpy_fu_302 : component cmpy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ar_V_read => p_read,
        ai_V_read => p_read8,
        br_V_read => sincosines_0_i_V_re,
        bi_V_read => sincosines_0_q_V_re,
        ap_return_0 => grp_cmpy_fu_302_ap_return_0,
        ap_return_1 => grp_cmpy_fu_302_ap_return_1,
        ap_ce => grp_cmpy_fu_302_ap_ce);

    grp_cmpy_fu_314 : component cmpy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ar_V_read => p_read1,
        ai_V_read => p_read9,
        br_V_read => sincosines_1_i_V_re,
        bi_V_read => sincosines_1_q_V_re,
        ap_return_0 => grp_cmpy_fu_314_ap_return_0,
        ap_return_1 => grp_cmpy_fu_314_ap_return_1,
        ap_ce => grp_cmpy_fu_314_ap_ce);

    grp_cmpy_fu_326 : component cmpy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ar_V_read => p_read2,
        ai_V_read => p_read10,
        br_V_read => sincosines_2_i_V_re,
        bi_V_read => sincosines_2_q_V_re,
        ap_return_0 => grp_cmpy_fu_326_ap_return_0,
        ap_return_1 => grp_cmpy_fu_326_ap_return_1,
        ap_ce => grp_cmpy_fu_326_ap_ce);

    grp_cmpy_fu_338 : component cmpy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ar_V_read => p_read3,
        ai_V_read => p_read11,
        br_V_read => sincosines_3_i_V_re,
        bi_V_read => sincosines_3_q_V_re,
        ap_return_0 => grp_cmpy_fu_338_ap_return_0,
        ap_return_1 => grp_cmpy_fu_338_ap_return_1,
        ap_ce => grp_cmpy_fu_338_ap_ce);

    grp_cmpy_fu_350 : component cmpy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ar_V_read => p_read4,
        ai_V_read => p_read12,
        br_V_read => sincosines_4_i_V_re,
        bi_V_read => sincosines_4_q_V_re,
        ap_return_0 => grp_cmpy_fu_350_ap_return_0,
        ap_return_1 => grp_cmpy_fu_350_ap_return_1,
        ap_ce => grp_cmpy_fu_350_ap_ce);

    grp_cmpy_fu_362 : component cmpy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ar_V_read => p_read5,
        ai_V_read => p_read13,
        br_V_read => sincosines_5_i_V_re,
        bi_V_read => sincosines_5_q_V_re,
        ap_return_0 => grp_cmpy_fu_362_ap_return_0,
        ap_return_1 => grp_cmpy_fu_362_ap_return_1,
        ap_ce => grp_cmpy_fu_362_ap_ce);

    grp_cmpy_fu_374 : component cmpy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ar_V_read => p_read6,
        ai_V_read => p_read14,
        br_V_read => sincosines_6_i_V_re,
        bi_V_read => sincosines_6_q_V_re,
        ap_return_0 => grp_cmpy_fu_374_ap_return_0,
        ap_return_1 => grp_cmpy_fu_374_ap_return_1,
        ap_ce => grp_cmpy_fu_374_ap_ce);

    grp_cmpy_fu_386 : component cmpy
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ar_V_read => p_read7,
        ai_V_read => p_read15,
        br_V_read => sincosines_7_i_V_re,
        bi_V_read => sincosines_7_q_V_re,
        ap_return_0 => grp_cmpy_fu_386_ap_return_0,
        ap_return_1 => grp_cmpy_fu_386_ap_return_1,
        ap_ce => grp_cmpy_fu_386_ap_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                resdat_last_V_read_reg_579 <= resdat_last_V;
                resdat_last_V_read_reg_579_pp0_iter1_reg <= resdat_last_V_read_reg_579;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                resdat_last_V_read_reg_579_pp0_iter2_reg <= resdat_last_V_read_reg_579_pp0_iter1_reg;
                resdat_last_V_read_reg_579_pp0_iter3_reg <= resdat_last_V_read_reg_579_pp0_iter2_reg;
                resdat_last_V_read_reg_579_pp0_iter4_reg <= resdat_last_V_read_reg_579_pp0_iter3_reg;
                resdat_last_V_read_reg_579_pp0_iter5_reg <= resdat_last_V_read_reg_579_pp0_iter4_reg;
                resdat_last_V_read_reg_579_pp0_iter6_reg <= resdat_last_V_read_reg_579_pp0_iter5_reg;
                resdat_last_V_read_reg_579_pp0_iter7_reg <= resdat_last_V_read_reg_579_pp0_iter6_reg;
                resdat_last_V_read_reg_579_pp0_iter8_reg <= resdat_last_V_read_reg_579_pp0_iter7_reg;
                resdat_last_V_read_reg_579_pp0_iter9_reg <= resdat_last_V_read_reg_579_pp0_iter8_reg;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter10, res_out_TREADY)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((res_out_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp45_assign_proc : process(ap_start, ap_enable_reg_pp0_iter10, res_out_TREADY)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp45 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((res_out_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp46_assign_proc : process(ap_start, ap_enable_reg_pp0_iter10, res_out_TREADY)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp46 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((res_out_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp47_assign_proc : process(ap_start, ap_enable_reg_pp0_iter10, res_out_TREADY)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp47 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((res_out_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp48_assign_proc : process(ap_start, ap_enable_reg_pp0_iter10, res_out_TREADY)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp48 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((res_out_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp49_assign_proc : process(ap_start, ap_enable_reg_pp0_iter10, res_out_TREADY)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp49 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((res_out_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp50_assign_proc : process(ap_start, ap_enable_reg_pp0_iter10, res_out_TREADY)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp50 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((res_out_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp51_assign_proc : process(ap_start, ap_enable_reg_pp0_iter10, res_out_TREADY)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp51 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((res_out_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp52_assign_proc : process(ap_start, ap_enable_reg_pp0_iter10, res_out_TREADY)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp52 <= (((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((res_out_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter10, res_out_TREADY, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)) or ((res_out_TREADY = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call56 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call35_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call35 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call38_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call38 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call41_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call41 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call44_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call44 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call47_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call47 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call50_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call50 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call53_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call53 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call56_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call56 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call38 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call56 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to9_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to9 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to9)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to9 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_cmpy_fu_302_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp45)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp45) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cmpy_fu_302_ap_ce <= ap_const_logic_1;
        else 
            grp_cmpy_fu_302_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cmpy_fu_314_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp46)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp46) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cmpy_fu_314_ap_ce <= ap_const_logic_1;
        else 
            grp_cmpy_fu_314_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cmpy_fu_326_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp47)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp47) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cmpy_fu_326_ap_ce <= ap_const_logic_1;
        else 
            grp_cmpy_fu_326_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cmpy_fu_338_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp48)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp48) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cmpy_fu_338_ap_ce <= ap_const_logic_1;
        else 
            grp_cmpy_fu_338_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cmpy_fu_350_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp49)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp49) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cmpy_fu_350_ap_ce <= ap_const_logic_1;
        else 
            grp_cmpy_fu_350_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cmpy_fu_362_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp50)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp50) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cmpy_fu_362_ap_ce <= ap_const_logic_1;
        else 
            grp_cmpy_fu_362_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cmpy_fu_374_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp51)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp51) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cmpy_fu_374_ap_ce <= ap_const_logic_1;
        else 
            grp_cmpy_fu_374_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_cmpy_fu_386_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp52)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp52) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_cmpy_fu_386_ap_ce <= ap_const_logic_1;
        else 
            grp_cmpy_fu_386_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    res_out_TDATA <= (((((((((((((((grp_cmpy_fu_386_ap_return_1 & grp_cmpy_fu_374_ap_return_1) & grp_cmpy_fu_362_ap_return_1) & grp_cmpy_fu_350_ap_return_1) & grp_cmpy_fu_338_ap_return_1) & grp_cmpy_fu_326_ap_return_1) & grp_cmpy_fu_314_ap_return_1) & grp_cmpy_fu_302_ap_return_1) & grp_cmpy_fu_386_ap_return_0) & grp_cmpy_fu_374_ap_return_0) & grp_cmpy_fu_362_ap_return_0) & grp_cmpy_fu_350_ap_return_0) & grp_cmpy_fu_338_ap_return_0) & grp_cmpy_fu_326_ap_return_0) & grp_cmpy_fu_314_ap_return_0) & grp_cmpy_fu_302_ap_return_0);

    res_out_TDATA_blk_n_assign_proc : process(ap_block_pp0_stage0, ap_enable_reg_pp0_iter10, res_out_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            res_out_TDATA_blk_n <= res_out_TREADY;
        else 
            res_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_out_TLAST <= resdat_last_V_read_reg_579_pp0_iter9_reg;

    res_out_TVALID_assign_proc : process(ap_enable_reg_pp0_iter10, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1))) then 
            res_out_TVALID <= ap_const_logic_1;
        else 
            res_out_TVALID <= ap_const_logic_0;
        end if; 
    end process;

end behav;

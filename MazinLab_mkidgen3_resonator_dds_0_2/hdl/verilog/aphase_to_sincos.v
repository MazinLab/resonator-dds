// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module aphase_to_sincos (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        phases_0_V_read,
        phases_1_V_read,
        phases_2_V_read,
        phases_3_V_read,
        phases_4_V_read,
        phases_5_V_read,
        phases_6_V_read,
        phases_7_V_read,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9,
        ap_return_10,
        ap_return_11,
        ap_return_12,
        ap_return_13,
        ap_return_14,
        ap_return_15
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [21:0] phases_0_V_read;
input  [21:0] phases_1_V_read;
input  [21:0] phases_2_V_read;
input  [21:0] phases_3_V_read;
input  [21:0] phases_4_V_read;
input  [21:0] phases_5_V_read;
input  [21:0] phases_6_V_read;
input  [21:0] phases_7_V_read;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;
output  [15:0] ap_return_10;
output  [15:0] ap_return_11;
output  [15:0] ap_return_12;
output  [15:0] ap_return_13;
output  [15:0] ap_return_14;
output  [15:0] ap_return_15;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
reg    ap_block_pp0_stage0_11001;
reg    ap_block_pp0_stage0_subdone;
reg    grp_phase_to_sincos_fu_82_ap_start;
wire    grp_phase_to_sincos_fu_82_ap_done;
wire    grp_phase_to_sincos_fu_82_ap_idle;
wire    grp_phase_to_sincos_fu_82_ap_ready;
reg    grp_phase_to_sincos_fu_82_ap_ce;
wire   [15:0] grp_phase_to_sincos_fu_82_ap_return_0;
wire   [15:0] grp_phase_to_sincos_fu_82_ap_return_1;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call9;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call9;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call9;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call9;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call9;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call9;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call9;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call9;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call9;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call9;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call9;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call9;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call9;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call9;
reg    ap_block_pp0_stage0_11001_ignoreCallOp23;
reg    grp_phase_to_sincos_fu_92_ap_start;
wire    grp_phase_to_sincos_fu_92_ap_done;
wire    grp_phase_to_sincos_fu_92_ap_idle;
wire    grp_phase_to_sincos_fu_92_ap_ready;
reg    grp_phase_to_sincos_fu_92_ap_ce;
wire   [15:0] grp_phase_to_sincos_fu_92_ap_return_0;
wire   [15:0] grp_phase_to_sincos_fu_92_ap_return_1;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call12;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call12;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call12;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call12;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call12;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call12;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call12;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call12;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call12;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call12;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call12;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call12;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call12;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call12;
reg    ap_block_pp0_stage0_11001_ignoreCallOp24;
reg    grp_phase_to_sincos_fu_102_ap_start;
wire    grp_phase_to_sincos_fu_102_ap_done;
wire    grp_phase_to_sincos_fu_102_ap_idle;
wire    grp_phase_to_sincos_fu_102_ap_ready;
reg    grp_phase_to_sincos_fu_102_ap_ce;
wire   [15:0] grp_phase_to_sincos_fu_102_ap_return_0;
wire   [15:0] grp_phase_to_sincos_fu_102_ap_return_1;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call15;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call15;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call15;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call15;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call15;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call15;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call15;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call15;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call15;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call15;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call15;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call15;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call15;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call15;
reg    ap_block_pp0_stage0_11001_ignoreCallOp25;
reg    grp_phase_to_sincos_fu_112_ap_start;
wire    grp_phase_to_sincos_fu_112_ap_done;
wire    grp_phase_to_sincos_fu_112_ap_idle;
wire    grp_phase_to_sincos_fu_112_ap_ready;
reg    grp_phase_to_sincos_fu_112_ap_ce;
wire   [15:0] grp_phase_to_sincos_fu_112_ap_return_0;
wire   [15:0] grp_phase_to_sincos_fu_112_ap_return_1;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call18;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call18;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call18;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call18;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call18;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call18;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call18;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call18;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call18;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call18;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call18;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call18;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call18;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call18;
reg    ap_block_pp0_stage0_11001_ignoreCallOp26;
reg    grp_phase_to_sincos_fu_122_ap_start;
wire    grp_phase_to_sincos_fu_122_ap_done;
wire    grp_phase_to_sincos_fu_122_ap_idle;
wire    grp_phase_to_sincos_fu_122_ap_ready;
reg    grp_phase_to_sincos_fu_122_ap_ce;
wire   [15:0] grp_phase_to_sincos_fu_122_ap_return_0;
wire   [15:0] grp_phase_to_sincos_fu_122_ap_return_1;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call21;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call21;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call21;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call21;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call21;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call21;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call21;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call21;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call21;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call21;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call21;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call21;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call21;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call21;
reg    ap_block_pp0_stage0_11001_ignoreCallOp27;
reg    grp_phase_to_sincos_fu_132_ap_start;
wire    grp_phase_to_sincos_fu_132_ap_done;
wire    grp_phase_to_sincos_fu_132_ap_idle;
wire    grp_phase_to_sincos_fu_132_ap_ready;
reg    grp_phase_to_sincos_fu_132_ap_ce;
wire   [15:0] grp_phase_to_sincos_fu_132_ap_return_0;
wire   [15:0] grp_phase_to_sincos_fu_132_ap_return_1;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call24;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call24;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call24;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call24;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call24;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call24;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call24;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call24;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call24;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call24;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call24;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call24;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call24;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call24;
reg    ap_block_pp0_stage0_11001_ignoreCallOp28;
reg    grp_phase_to_sincos_fu_142_ap_start;
wire    grp_phase_to_sincos_fu_142_ap_done;
wire    grp_phase_to_sincos_fu_142_ap_idle;
wire    grp_phase_to_sincos_fu_142_ap_ready;
reg    grp_phase_to_sincos_fu_142_ap_ce;
wire   [15:0] grp_phase_to_sincos_fu_142_ap_return_0;
wire   [15:0] grp_phase_to_sincos_fu_142_ap_return_1;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call27;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call27;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call27;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call27;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call27;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call27;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call27;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call27;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call27;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call27;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call27;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call27;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call27;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call27;
reg    ap_block_pp0_stage0_11001_ignoreCallOp29;
reg    grp_phase_to_sincos_fu_152_ap_start;
wire    grp_phase_to_sincos_fu_152_ap_done;
wire    grp_phase_to_sincos_fu_152_ap_idle;
wire    grp_phase_to_sincos_fu_152_ap_ready;
reg    grp_phase_to_sincos_fu_152_ap_ce;
wire   [15:0] grp_phase_to_sincos_fu_152_ap_return_0;
wire   [15:0] grp_phase_to_sincos_fu_152_ap_return_1;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call30;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call30;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call30;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call30;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call30;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call30;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call30;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call30;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call30;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call30;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call30;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call30;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call30;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call30;
reg    ap_block_pp0_stage0_11001_ignoreCallOp30;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to12;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
end

phase_to_sincos grp_phase_to_sincos_fu_82(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_phase_to_sincos_fu_82_ap_start),
    .ap_done(grp_phase_to_sincos_fu_82_ap_done),
    .ap_idle(grp_phase_to_sincos_fu_82_ap_idle),
    .ap_ready(grp_phase_to_sincos_fu_82_ap_ready),
    .ap_ce(grp_phase_to_sincos_fu_82_ap_ce),
    .acc_V(phases_0_V_read),
    .ap_return_0(grp_phase_to_sincos_fu_82_ap_return_0),
    .ap_return_1(grp_phase_to_sincos_fu_82_ap_return_1)
);

phase_to_sincos grp_phase_to_sincos_fu_92(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_phase_to_sincos_fu_92_ap_start),
    .ap_done(grp_phase_to_sincos_fu_92_ap_done),
    .ap_idle(grp_phase_to_sincos_fu_92_ap_idle),
    .ap_ready(grp_phase_to_sincos_fu_92_ap_ready),
    .ap_ce(grp_phase_to_sincos_fu_92_ap_ce),
    .acc_V(phases_1_V_read),
    .ap_return_0(grp_phase_to_sincos_fu_92_ap_return_0),
    .ap_return_1(grp_phase_to_sincos_fu_92_ap_return_1)
);

phase_to_sincos grp_phase_to_sincos_fu_102(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_phase_to_sincos_fu_102_ap_start),
    .ap_done(grp_phase_to_sincos_fu_102_ap_done),
    .ap_idle(grp_phase_to_sincos_fu_102_ap_idle),
    .ap_ready(grp_phase_to_sincos_fu_102_ap_ready),
    .ap_ce(grp_phase_to_sincos_fu_102_ap_ce),
    .acc_V(phases_2_V_read),
    .ap_return_0(grp_phase_to_sincos_fu_102_ap_return_0),
    .ap_return_1(grp_phase_to_sincos_fu_102_ap_return_1)
);

phase_to_sincos grp_phase_to_sincos_fu_112(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_phase_to_sincos_fu_112_ap_start),
    .ap_done(grp_phase_to_sincos_fu_112_ap_done),
    .ap_idle(grp_phase_to_sincos_fu_112_ap_idle),
    .ap_ready(grp_phase_to_sincos_fu_112_ap_ready),
    .ap_ce(grp_phase_to_sincos_fu_112_ap_ce),
    .acc_V(phases_3_V_read),
    .ap_return_0(grp_phase_to_sincos_fu_112_ap_return_0),
    .ap_return_1(grp_phase_to_sincos_fu_112_ap_return_1)
);

phase_to_sincos grp_phase_to_sincos_fu_122(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_phase_to_sincos_fu_122_ap_start),
    .ap_done(grp_phase_to_sincos_fu_122_ap_done),
    .ap_idle(grp_phase_to_sincos_fu_122_ap_idle),
    .ap_ready(grp_phase_to_sincos_fu_122_ap_ready),
    .ap_ce(grp_phase_to_sincos_fu_122_ap_ce),
    .acc_V(phases_4_V_read),
    .ap_return_0(grp_phase_to_sincos_fu_122_ap_return_0),
    .ap_return_1(grp_phase_to_sincos_fu_122_ap_return_1)
);

phase_to_sincos grp_phase_to_sincos_fu_132(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_phase_to_sincos_fu_132_ap_start),
    .ap_done(grp_phase_to_sincos_fu_132_ap_done),
    .ap_idle(grp_phase_to_sincos_fu_132_ap_idle),
    .ap_ready(grp_phase_to_sincos_fu_132_ap_ready),
    .ap_ce(grp_phase_to_sincos_fu_132_ap_ce),
    .acc_V(phases_5_V_read),
    .ap_return_0(grp_phase_to_sincos_fu_132_ap_return_0),
    .ap_return_1(grp_phase_to_sincos_fu_132_ap_return_1)
);

phase_to_sincos grp_phase_to_sincos_fu_142(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_phase_to_sincos_fu_142_ap_start),
    .ap_done(grp_phase_to_sincos_fu_142_ap_done),
    .ap_idle(grp_phase_to_sincos_fu_142_ap_idle),
    .ap_ready(grp_phase_to_sincos_fu_142_ap_ready),
    .ap_ce(grp_phase_to_sincos_fu_142_ap_ce),
    .acc_V(phases_6_V_read),
    .ap_return_0(grp_phase_to_sincos_fu_142_ap_return_0),
    .ap_return_1(grp_phase_to_sincos_fu_142_ap_return_1)
);

phase_to_sincos grp_phase_to_sincos_fu_152(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_phase_to_sincos_fu_152_ap_start),
    .ap_done(grp_phase_to_sincos_fu_152_ap_done),
    .ap_idle(grp_phase_to_sincos_fu_152_ap_idle),
    .ap_ready(grp_phase_to_sincos_fu_152_ap_ready),
    .ap_ce(grp_phase_to_sincos_fu_152_ap_ce),
    .acc_V(phases_7_V_read),
    .ap_return_0(grp_phase_to_sincos_fu_152_ap_return_0),
    .ap_return_1(grp_phase_to_sincos_fu_152_ap_return_1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (*) begin
    if ((((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter13 == 1'b1)) | ((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to12 = 1'b1;
    end else begin
        ap_idle_pp0_0to12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to12 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp25) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_phase_to_sincos_fu_102_ap_ce = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_102_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_phase_to_sincos_fu_102_ap_start = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_102_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp26) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_phase_to_sincos_fu_112_ap_ce = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_112_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_phase_to_sincos_fu_112_ap_start = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_112_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp27) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_phase_to_sincos_fu_122_ap_ce = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_122_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_phase_to_sincos_fu_122_ap_start = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_122_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp28) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_phase_to_sincos_fu_132_ap_ce = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_132_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_phase_to_sincos_fu_132_ap_start = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_132_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp29) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_phase_to_sincos_fu_142_ap_ce = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_142_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_phase_to_sincos_fu_142_ap_start = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_142_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp30) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_phase_to_sincos_fu_152_ap_ce = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_152_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_phase_to_sincos_fu_152_ap_start = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_152_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp23))) begin
        grp_phase_to_sincos_fu_82_ap_ce = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_82_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_phase_to_sincos_fu_82_ap_start = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_82_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp24))) begin
        grp_phase_to_sincos_fu_92_ap_ce = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_92_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_phase_to_sincos_fu_92_ap_start = 1'b1;
    end else begin
        grp_phase_to_sincos_fu_92_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp23 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp24 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp25 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp26 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp27 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp28 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp29 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp30 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call12 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call12 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call12 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call12 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call12 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call15 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call18 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call21 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call24 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call27 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call30 = (ap_start == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call9 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call12 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call12 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call12 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call12 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call12 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call12 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call12 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call12 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call15 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call18 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call24 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call27 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call30 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = grp_phase_to_sincos_fu_82_ap_return_0;

assign ap_return_1 = grp_phase_to_sincos_fu_92_ap_return_0;

assign ap_return_10 = grp_phase_to_sincos_fu_102_ap_return_1;

assign ap_return_11 = grp_phase_to_sincos_fu_112_ap_return_1;

assign ap_return_12 = grp_phase_to_sincos_fu_122_ap_return_1;

assign ap_return_13 = grp_phase_to_sincos_fu_132_ap_return_1;

assign ap_return_14 = grp_phase_to_sincos_fu_142_ap_return_1;

assign ap_return_15 = grp_phase_to_sincos_fu_152_ap_return_1;

assign ap_return_2 = grp_phase_to_sincos_fu_102_ap_return_0;

assign ap_return_3 = grp_phase_to_sincos_fu_112_ap_return_0;

assign ap_return_4 = grp_phase_to_sincos_fu_122_ap_return_0;

assign ap_return_5 = grp_phase_to_sincos_fu_132_ap_return_0;

assign ap_return_6 = grp_phase_to_sincos_fu_142_ap_return_0;

assign ap_return_7 = grp_phase_to_sincos_fu_152_ap_return_0;

assign ap_return_8 = grp_phase_to_sincos_fu_82_ap_return_1;

assign ap_return_9 = grp_phase_to_sincos_fu_92_ap_return_1;

endmodule //aphase_to_sincos

// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="resonator_dds_resonator_dds,hls_ip_2020_1_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.288000,HLS_SYN_LAT=30,HLS_SYN_TPT=1,HLS_SYN_MEM=36,HLS_SYN_DSP=0,HLS_SYN_FF=19970,HLS_SYN_LUT=13076,HLS_VERSION=2020_1_1}" *)

module resonator_dds (
        ap_clk,
        ap_rst_n,
        res_in_TDATA,
        res_in_TVALID,
        res_in_TREADY,
        res_in_TUSER,
        res_in_TLAST,
        res_out_TDATA,
        res_out_TVALID,
        res_out_TREADY,
        res_out_TUSER,
        res_out_TLAST,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 14;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [255:0] res_in_TDATA;
input   res_in_TVALID;
output   res_in_TREADY;
input  [7:0] res_in_TUSER;
input  [0:0] res_in_TLAST;
output  [255:0] res_out_TDATA;
output   res_out_TVALID;
input   res_out_TREADY;
output  [7:0] res_out_TUSER;
output  [0:0] res_out_TLAST;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;

 reg    ap_rst_n_inv;
wire   [7:0] tones_address0;
reg    tones_ce0;
wire   [255:0] tones_q0;
reg   [7:0] cycle;
reg    res_in_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
reg    res_out_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg   [255:0] data_in_data_V_reg_171;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    regslice_both_res_out_V_data_V_U_apdone_blk;
reg    ap_block_state31_pp0_stage0_iter30;
reg    ap_block_pp0_stage0_11001;
reg   [255:0] data_in_data_V_reg_171_pp0_iter1_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter2_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter3_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter4_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter5_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter6_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter7_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter8_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter9_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter10_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter11_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter12_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter13_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter14_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter15_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter16_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter17_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter18_reg;
reg   [255:0] data_in_data_V_reg_171_pp0_iter19_reg;
reg   [7:0] tmp_user_V_reg_176;
reg   [7:0] tmp_user_V_reg_176_pp0_iter1_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter2_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter3_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter4_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter5_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter6_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter7_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter8_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter9_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter10_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter11_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter12_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter13_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter14_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter15_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter16_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter17_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter18_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter19_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter20_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter21_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter22_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter23_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter24_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter25_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter26_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter27_reg;
reg   [7:0] tmp_user_V_reg_176_pp0_iter28_reg;
reg   [255:0] tones_load_reg_188;
wire   [175:0] grp_accumulate_fu_130_ap_return;
reg   [175:0] accg_reg_193;
wire   [255:0] grp_get_dds_fu_114_ap_return;
reg   [255:0] ddsg_reg_198;
wire   [255:0] grp_ddc_fu_123_ap_return;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
wire    grp_get_dds_fu_114_ap_start;
wire    grp_get_dds_fu_114_ap_done;
wire    grp_get_dds_fu_114_ap_idle;
wire    grp_get_dds_fu_114_ap_ready;
reg    grp_get_dds_fu_114_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call22;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call22;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call22;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call22;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call22;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call22;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call22;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call22;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call22;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call22;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call22;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call22;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call22;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call22;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call22;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call22;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call22;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call22;
wire    ap_block_state19_pp0_stage0_iter18_ignore_call22;
wire    ap_block_state20_pp0_stage0_iter19_ignore_call22;
wire    ap_block_state21_pp0_stage0_iter20_ignore_call22;
wire    ap_block_state22_pp0_stage0_iter21_ignore_call22;
wire    ap_block_state23_pp0_stage0_iter22_ignore_call22;
wire    ap_block_state24_pp0_stage0_iter23_ignore_call22;
wire    ap_block_state25_pp0_stage0_iter24_ignore_call22;
wire    ap_block_state26_pp0_stage0_iter25_ignore_call22;
wire    ap_block_state27_pp0_stage0_iter26_ignore_call22;
wire    ap_block_state28_pp0_stage0_iter27_ignore_call22;
wire    ap_block_state29_pp0_stage0_iter28_ignore_call22;
wire    ap_block_state30_pp0_stage0_iter29_ignore_call22;
reg    ap_block_state31_pp0_stage0_iter30_ignore_call22;
reg    ap_block_pp0_stage0_11001_ignoreCallOp44;
reg    grp_ddc_fu_123_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call23;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call23;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call23;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call23;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call23;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call23;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call23;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call23;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call23;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call23;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call23;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call23;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call23;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call23;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call23;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call23;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call23;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call23;
wire    ap_block_state19_pp0_stage0_iter18_ignore_call23;
wire    ap_block_state20_pp0_stage0_iter19_ignore_call23;
wire    ap_block_state21_pp0_stage0_iter20_ignore_call23;
wire    ap_block_state22_pp0_stage0_iter21_ignore_call23;
wire    ap_block_state23_pp0_stage0_iter22_ignore_call23;
wire    ap_block_state24_pp0_stage0_iter23_ignore_call23;
wire    ap_block_state25_pp0_stage0_iter24_ignore_call23;
wire    ap_block_state26_pp0_stage0_iter25_ignore_call23;
wire    ap_block_state27_pp0_stage0_iter26_ignore_call23;
wire    ap_block_state28_pp0_stage0_iter27_ignore_call23;
wire    ap_block_state29_pp0_stage0_iter28_ignore_call23;
wire    ap_block_state30_pp0_stage0_iter29_ignore_call23;
reg    ap_block_state31_pp0_stage0_iter30_ignore_call23;
reg    ap_block_pp0_stage0_11001_ignoreCallOp59;
wire    grp_accumulate_fu_130_ap_start;
wire    grp_accumulate_fu_130_ap_done;
wire    grp_accumulate_fu_130_ap_idle;
wire    grp_accumulate_fu_130_ap_ready;
reg    grp_accumulate_fu_130_ap_ce;
reg    ap_block_state1_pp0_stage0_iter0_ignore_call21;
wire    ap_block_state2_pp0_stage0_iter1_ignore_call21;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call21;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call21;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call21;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call21;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call21;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call21;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call21;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call21;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call21;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call21;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call21;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call21;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call21;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call21;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call21;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call21;
wire    ap_block_state19_pp0_stage0_iter18_ignore_call21;
wire    ap_block_state20_pp0_stage0_iter19_ignore_call21;
wire    ap_block_state21_pp0_stage0_iter20_ignore_call21;
wire    ap_block_state22_pp0_stage0_iter21_ignore_call21;
wire    ap_block_state23_pp0_stage0_iter22_ignore_call21;
wire    ap_block_state24_pp0_stage0_iter23_ignore_call21;
wire    ap_block_state25_pp0_stage0_iter24_ignore_call21;
wire    ap_block_state26_pp0_stage0_iter25_ignore_call21;
wire    ap_block_state27_pp0_stage0_iter26_ignore_call21;
wire    ap_block_state28_pp0_stage0_iter27_ignore_call21;
wire    ap_block_state29_pp0_stage0_iter28_ignore_call21;
wire    ap_block_state30_pp0_stage0_iter29_ignore_call21;
reg    ap_block_state31_pp0_stage0_iter30_ignore_call21;
reg    ap_block_pp0_stage0_11001_ignoreCallOp41;
reg    grp_get_dds_fu_114_ap_start_reg;
reg    grp_accumulate_fu_130_ap_start_reg;
wire   [63:0] zext_ln538_fu_148_p1;
wire   [7:0] add_ln695_fu_153_p2;
reg    ap_block_pp0_stage0_01001;
reg   [0:0] ap_NS_fsm;
wire    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_res_in_V_data_V_U_apdone_blk;
wire   [255:0] res_in_TDATA_int_regslice;
wire    res_in_TVALID_int_regslice;
reg    res_in_TREADY_int_regslice;
wire    regslice_both_res_in_V_data_V_U_ack_in;
wire    regslice_both_res_in_V_user_V_U_apdone_blk;
wire   [7:0] res_in_TUSER_int_regslice;
wire    regslice_both_res_in_V_user_V_U_vld_out;
wire    regslice_both_res_in_V_user_V_U_ack_in;
wire    regslice_both_res_in_V_last_V_U_apdone_blk;
wire   [0:0] res_in_TLAST_int_regslice;
wire    regslice_both_res_in_V_last_V_U_vld_out;
wire    regslice_both_res_in_V_last_V_U_ack_in;
reg    res_out_TVALID_int_regslice;
wire    res_out_TREADY_int_regslice;
wire    regslice_both_res_out_V_data_V_U_vld_out;
wire    regslice_both_res_out_V_user_V_U_apdone_blk;
wire    regslice_both_res_out_V_user_V_U_ack_in_dummy;
wire    regslice_both_res_out_V_user_V_U_vld_out;
wire    regslice_both_res_out_V_last_V_U_apdone_blk;
wire   [0:0] res_out_TLAST_int_regslice;
wire    regslice_both_res_out_V_last_V_U_ack_in_dummy;
wire    regslice_both_res_out_V_last_V_U_vld_out;

// power-on initialization
initial begin
#0 cycle = 8'd0;
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 grp_get_dds_fu_114_ap_start_reg = 1'b0;
#0 grp_accumulate_fu_130_ap_start_reg = 1'b0;
end

resonator_dds_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .tones_address0(tones_address0),
    .tones_ce0(tones_ce0),
    .tones_q0(tones_q0)
);

resonator_dds_get_dds grp_get_dds_fu_114(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_get_dds_fu_114_ap_start),
    .ap_done(grp_get_dds_fu_114_ap_done),
    .ap_idle(grp_get_dds_fu_114_ap_idle),
    .ap_ready(grp_get_dds_fu_114_ap_ready),
    .ap_ce(grp_get_dds_fu_114_ap_ce),
    .accg(accg_reg_193),
    .ap_return(grp_get_dds_fu_114_ap_return)
);

resonator_dds_ddc grp_ddc_fu_123(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .in_r(data_in_data_V_reg_171_pp0_iter19_reg),
    .ddsgroup(ddsg_reg_198),
    .ap_return(grp_ddc_fu_123_ap_return),
    .ap_ce(grp_ddc_fu_123_ap_ce)
);

resonator_dds_accumulate grp_accumulate_fu_130(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_accumulate_fu_130_ap_start),
    .ap_done(grp_accumulate_fu_130_ap_done),
    .ap_idle(grp_accumulate_fu_130_ap_idle),
    .ap_ready(grp_accumulate_fu_130_ap_ready),
    .ap_ce(grp_accumulate_fu_130_ap_ce),
    .group_r(tmp_user_V_reg_176_pp0_iter1_reg),
    .tonesgroup(tones_load_reg_188),
    .ap_return(grp_accumulate_fu_130_ap_return)
);

regslice_both #(
    .DataWidth( 256 ))
regslice_both_res_in_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(res_in_TDATA),
    .vld_in(res_in_TVALID),
    .ack_in(regslice_both_res_in_V_data_V_U_ack_in),
    .data_out(res_in_TDATA_int_regslice),
    .vld_out(res_in_TVALID_int_regslice),
    .ack_out(res_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_res_in_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 8 ))
regslice_both_res_in_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(res_in_TUSER),
    .vld_in(res_in_TVALID),
    .ack_in(regslice_both_res_in_V_user_V_U_ack_in),
    .data_out(res_in_TUSER_int_regslice),
    .vld_out(regslice_both_res_in_V_user_V_U_vld_out),
    .ack_out(res_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_res_in_V_user_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_res_in_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(res_in_TLAST),
    .vld_in(res_in_TVALID),
    .ack_in(regslice_both_res_in_V_last_V_U_ack_in),
    .data_out(res_in_TLAST_int_regslice),
    .vld_out(regslice_both_res_in_V_last_V_U_vld_out),
    .ack_out(res_in_TREADY_int_regslice),
    .apdone_blk(regslice_both_res_in_V_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 256 ))
regslice_both_res_out_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_ddc_fu_123_ap_return),
    .vld_in(res_out_TVALID_int_regslice),
    .ack_in(res_out_TREADY_int_regslice),
    .data_out(res_out_TDATA),
    .vld_out(regslice_both_res_out_V_data_V_U_vld_out),
    .ack_out(res_out_TREADY),
    .apdone_blk(regslice_both_res_out_V_data_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 8 ))
regslice_both_res_out_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_user_V_reg_176_pp0_iter28_reg),
    .vld_in(res_out_TVALID_int_regslice),
    .ack_in(regslice_both_res_out_V_user_V_U_ack_in_dummy),
    .data_out(res_out_TUSER),
    .vld_out(regslice_both_res_out_V_user_V_U_vld_out),
    .ack_out(res_out_TREADY),
    .apdone_blk(regslice_both_res_out_V_user_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_res_out_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(res_out_TLAST_int_regslice),
    .vld_in(res_out_TVALID_int_regslice),
    .ack_in(regslice_both_res_out_V_last_V_U_ack_in_dummy),
    .data_out(res_out_TLAST),
    .vld_out(regslice_both_res_out_V_last_V_U_vld_out),
    .ack_out(res_out_TREADY),
    .apdone_blk(regslice_both_res_out_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_accumulate_fu_130_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_accumulate_fu_130_ap_start_reg <= 1'b1;
        end else if ((grp_accumulate_fu_130_ap_ready == 1'b1)) begin
            grp_accumulate_fu_130_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_get_dds_fu_114_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            grp_get_dds_fu_114_ap_start_reg <= 1'b1;
        end else if ((grp_get_dds_fu_114_ap_ready == 1'b1)) begin
            grp_get_dds_fu_114_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        accg_reg_193 <= grp_accumulate_fu_130_ap_return;
        data_in_data_V_reg_171_pp0_iter10_reg <= data_in_data_V_reg_171_pp0_iter9_reg;
        data_in_data_V_reg_171_pp0_iter11_reg <= data_in_data_V_reg_171_pp0_iter10_reg;
        data_in_data_V_reg_171_pp0_iter12_reg <= data_in_data_V_reg_171_pp0_iter11_reg;
        data_in_data_V_reg_171_pp0_iter13_reg <= data_in_data_V_reg_171_pp0_iter12_reg;
        data_in_data_V_reg_171_pp0_iter14_reg <= data_in_data_V_reg_171_pp0_iter13_reg;
        data_in_data_V_reg_171_pp0_iter15_reg <= data_in_data_V_reg_171_pp0_iter14_reg;
        data_in_data_V_reg_171_pp0_iter16_reg <= data_in_data_V_reg_171_pp0_iter15_reg;
        data_in_data_V_reg_171_pp0_iter17_reg <= data_in_data_V_reg_171_pp0_iter16_reg;
        data_in_data_V_reg_171_pp0_iter18_reg <= data_in_data_V_reg_171_pp0_iter17_reg;
        data_in_data_V_reg_171_pp0_iter19_reg <= data_in_data_V_reg_171_pp0_iter18_reg;
        data_in_data_V_reg_171_pp0_iter2_reg <= data_in_data_V_reg_171_pp0_iter1_reg;
        data_in_data_V_reg_171_pp0_iter3_reg <= data_in_data_V_reg_171_pp0_iter2_reg;
        data_in_data_V_reg_171_pp0_iter4_reg <= data_in_data_V_reg_171_pp0_iter3_reg;
        data_in_data_V_reg_171_pp0_iter5_reg <= data_in_data_V_reg_171_pp0_iter4_reg;
        data_in_data_V_reg_171_pp0_iter6_reg <= data_in_data_V_reg_171_pp0_iter5_reg;
        data_in_data_V_reg_171_pp0_iter7_reg <= data_in_data_V_reg_171_pp0_iter6_reg;
        data_in_data_V_reg_171_pp0_iter8_reg <= data_in_data_V_reg_171_pp0_iter7_reg;
        data_in_data_V_reg_171_pp0_iter9_reg <= data_in_data_V_reg_171_pp0_iter8_reg;
        ddsg_reg_198 <= grp_get_dds_fu_114_ap_return;
        tmp_user_V_reg_176_pp0_iter10_reg <= tmp_user_V_reg_176_pp0_iter9_reg;
        tmp_user_V_reg_176_pp0_iter11_reg <= tmp_user_V_reg_176_pp0_iter10_reg;
        tmp_user_V_reg_176_pp0_iter12_reg <= tmp_user_V_reg_176_pp0_iter11_reg;
        tmp_user_V_reg_176_pp0_iter13_reg <= tmp_user_V_reg_176_pp0_iter12_reg;
        tmp_user_V_reg_176_pp0_iter14_reg <= tmp_user_V_reg_176_pp0_iter13_reg;
        tmp_user_V_reg_176_pp0_iter15_reg <= tmp_user_V_reg_176_pp0_iter14_reg;
        tmp_user_V_reg_176_pp0_iter16_reg <= tmp_user_V_reg_176_pp0_iter15_reg;
        tmp_user_V_reg_176_pp0_iter17_reg <= tmp_user_V_reg_176_pp0_iter16_reg;
        tmp_user_V_reg_176_pp0_iter18_reg <= tmp_user_V_reg_176_pp0_iter17_reg;
        tmp_user_V_reg_176_pp0_iter19_reg <= tmp_user_V_reg_176_pp0_iter18_reg;
        tmp_user_V_reg_176_pp0_iter20_reg <= tmp_user_V_reg_176_pp0_iter19_reg;
        tmp_user_V_reg_176_pp0_iter21_reg <= tmp_user_V_reg_176_pp0_iter20_reg;
        tmp_user_V_reg_176_pp0_iter22_reg <= tmp_user_V_reg_176_pp0_iter21_reg;
        tmp_user_V_reg_176_pp0_iter23_reg <= tmp_user_V_reg_176_pp0_iter22_reg;
        tmp_user_V_reg_176_pp0_iter24_reg <= tmp_user_V_reg_176_pp0_iter23_reg;
        tmp_user_V_reg_176_pp0_iter25_reg <= tmp_user_V_reg_176_pp0_iter24_reg;
        tmp_user_V_reg_176_pp0_iter26_reg <= tmp_user_V_reg_176_pp0_iter25_reg;
        tmp_user_V_reg_176_pp0_iter27_reg <= tmp_user_V_reg_176_pp0_iter26_reg;
        tmp_user_V_reg_176_pp0_iter28_reg <= tmp_user_V_reg_176_pp0_iter27_reg;
        tmp_user_V_reg_176_pp0_iter2_reg <= tmp_user_V_reg_176_pp0_iter1_reg;
        tmp_user_V_reg_176_pp0_iter3_reg <= tmp_user_V_reg_176_pp0_iter2_reg;
        tmp_user_V_reg_176_pp0_iter4_reg <= tmp_user_V_reg_176_pp0_iter3_reg;
        tmp_user_V_reg_176_pp0_iter5_reg <= tmp_user_V_reg_176_pp0_iter4_reg;
        tmp_user_V_reg_176_pp0_iter6_reg <= tmp_user_V_reg_176_pp0_iter5_reg;
        tmp_user_V_reg_176_pp0_iter7_reg <= tmp_user_V_reg_176_pp0_iter6_reg;
        tmp_user_V_reg_176_pp0_iter8_reg <= tmp_user_V_reg_176_pp0_iter7_reg;
        tmp_user_V_reg_176_pp0_iter9_reg <= tmp_user_V_reg_176_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cycle <= add_ln695_fu_153_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_in_data_V_reg_171 <= res_in_TDATA_int_regslice;
        data_in_data_V_reg_171_pp0_iter1_reg <= data_in_data_V_reg_171;
        tmp_user_V_reg_176 <= cycle;
        tmp_user_V_reg_176_pp0_iter1_reg <= tmp_user_V_reg_176;
        tones_load_reg_188 <= tones_q0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (1'b1 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp41) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_accumulate_fu_130_ap_ce = 1'b1;
    end else begin
        grp_accumulate_fu_130_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp59) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_ddc_fu_123_ap_ce = 1'b1;
    end else begin
        grp_ddc_fu_123_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp44) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_get_dds_fu_114_ap_ce = 1'b1;
    end else begin
        grp_get_dds_fu_114_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_in_TDATA_blk_n = res_in_TVALID_int_regslice;
    end else begin
        res_in_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_in_TREADY_int_regslice = 1'b1;
    end else begin
        res_in_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter30 == 1'b1) & (1'b0 == ap_block_pp0_stage0)) | ((ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0)))) begin
        res_out_TDATA_blk_n = res_out_TREADY_int_regslice;
    end else begin
        res_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter29 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_out_TVALID_int_regslice = 1'b1;
    end else begin
        res_out_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tones_ce0 = 1'b1;
    end else begin
        tones_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln695_fu_153_p2 = (cycle + 8'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((res_in_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1)) | ((ap_enable_reg_pp0_iter30 == 1'b1) & (regslice_both_res_out_V_data_V_U_apdone_blk == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((res_out_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b1)) | ((res_in_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1)) | ((ap_enable_reg_pp0_iter30 == 1'b1) & ((res_out_TREADY_int_regslice == 1'b0) | (regslice_both_res_out_V_data_V_U_apdone_blk == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp41 = (((res_out_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b1)) | ((res_in_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1)) | ((ap_enable_reg_pp0_iter30 == 1'b1) & ((res_out_TREADY_int_regslice == 1'b0) | (regslice_both_res_out_V_data_V_U_apdone_blk == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp44 = (((res_out_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b1)) | ((res_in_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1)) | ((ap_enable_reg_pp0_iter30 == 1'b1) & ((res_out_TREADY_int_regslice == 1'b0) | (regslice_both_res_out_V_data_V_U_apdone_blk == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp59 = (((res_out_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b1)) | ((res_in_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1)) | ((ap_enable_reg_pp0_iter30 == 1'b1) & ((res_out_TREADY_int_regslice == 1'b0) | (regslice_both_res_out_V_data_V_U_apdone_blk == 1'b1))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((res_out_TREADY_int_regslice == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b1)) | ((res_in_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1)) | ((ap_enable_reg_pp0_iter30 == 1'b1) & ((res_out_TREADY_int_regslice == 1'b0) | (regslice_both_res_out_V_data_V_U_apdone_blk == 1'b1))));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18_ignore_call23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (res_in_TVALID_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call21 = (res_in_TVALID_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call22 = (res_in_TVALID_int_regslice == 1'b0);
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0_ignore_call23 = (res_in_TVALID_int_regslice == 1'b0);
end

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29_ignore_call23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state31_pp0_stage0_iter30 = (regslice_both_res_out_V_data_V_U_apdone_blk == 1'b1);
end

always @ (*) begin
    ap_block_state31_pp0_stage0_iter30_ignore_call21 = (regslice_both_res_out_V_data_V_U_apdone_blk == 1'b1);
end

always @ (*) begin
    ap_block_state31_pp0_stage0_iter30_ignore_call22 = (regslice_both_res_out_V_data_V_U_apdone_blk == 1'b1);
end

always @ (*) begin
    ap_block_state31_pp0_stage0_iter30_ignore_call23 = (regslice_both_res_out_V_data_V_U_apdone_blk == 1'b1);
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call21 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call22 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call23 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_accumulate_fu_130_ap_start = grp_accumulate_fu_130_ap_start_reg;

assign grp_get_dds_fu_114_ap_start = grp_get_dds_fu_114_ap_start_reg;

assign res_in_TREADY = regslice_both_res_in_V_data_V_U_ack_in;

assign res_out_TLAST_int_regslice = ((tmp_user_V_reg_176_pp0_iter28_reg == 8'd255) ? 1'b1 : 1'b0);

assign res_out_TVALID = regslice_both_res_out_V_data_V_U_vld_out;

assign tones_address0 = zext_ln538_fu_148_p1;

assign zext_ln538_fu_148_p1 = cycle;

endmodule //resonator_dds

// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module resonator_dds_phase_to_sincos_wLUT (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        acc,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [21:0] acc;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] cos_lut_address0;
reg    cos_lut_ce0;
wire   [16:0] cos_lut_q0;
wire   [9:0] cos_lut_address1;
reg    cos_lut_ce1;
wire   [16:0] cos_lut_q1;
wire   [8:0] fine_lut_address0;
reg    fine_lut_ce0;
wire   [15:0] fine_lut_q0;
reg   [8:0] p_Result_s_reg_883;
reg   [8:0] p_Result_s_reg_883_pp0_iter1_reg;
reg   [8:0] p_Result_s_reg_883_pp0_iter2_reg;
reg   [8:0] p_Result_s_reg_883_pp0_iter3_reg;
reg   [1:0] msb_V_reg_888;
reg   [1:0] msb_V_reg_888_pp0_iter1_reg;
reg   [1:0] msb_V_reg_888_pp0_iter2_reg;
reg   [1:0] msb_V_reg_888_pp0_iter3_reg;
reg   [1:0] msb_V_reg_888_pp0_iter4_reg;
wire   [9:0] lsb_V_fu_154_p4;
reg   [9:0] lsb_V_reg_898;
wire   [9:0] sin_adr_V_fu_164_p2;
reg   [9:0] sin_adr_V_reg_904;
wire   [0:0] icmp_ln874_fu_174_p2;
reg   [0:0] icmp_ln874_reg_914;
reg   [0:0] icmp_ln874_reg_914_pp0_iter2_reg;
reg   [0:0] icmp_ln874_reg_914_pp0_iter3_reg;
reg   [0:0] icmp_ln874_reg_914_pp0_iter4_reg;
reg   [16:0] cos_lut_word_V_3_reg_928;
reg   [16:0] sin_lut_word_V_reg_933;
reg   [16:0] sin_lut_word_V_reg_933_pp0_iter3_reg;
reg   [16:0] sin_lut_word_V_reg_933_pp0_iter4_reg;
wire   [17:0] zext_ln703_fu_183_p1;
reg   [17:0] zext_ln703_reg_939;
reg   [17:0] zext_ln703_reg_939_pp0_iter4_reg;
wire   [17:0] r_V_fu_186_p2;
reg   [17:0] r_V_reg_946;
reg   [17:0] r_V_reg_946_pp0_iter4_reg;
wire   [16:0] trunc_ln790_fu_192_p1;
reg   [16:0] trunc_ln790_reg_951;
wire   [17:0] zext_ln703_1_fu_196_p1;
reg   [17:0] zext_ln703_1_reg_956;
reg   [17:0] zext_ln703_1_reg_956_pp0_iter4_reg;
wire   [17:0] r_V_1_fu_199_p2;
reg   [17:0] r_V_1_reg_961;
reg   [17:0] r_V_1_reg_961_pp0_iter4_reg;
wire   [16:0] trunc_ln790_1_fu_205_p1;
reg   [16:0] trunc_ln790_1_reg_966;
wire   [0:0] icmp_ln790_fu_209_p2;
reg   [0:0] icmp_ln790_reg_971;
wire   [0:0] icmp_ln790_1_fu_214_p2;
reg   [0:0] icmp_ln790_1_reg_976;
wire   [0:0] icmp_ln58_1_fu_219_p2;
reg   [0:0] icmp_ln58_1_reg_981;
wire   [17:0] cos_lut_word_V_fu_228_p3;
reg   [17:0] cos_lut_word_V_reg_992;
wire   [17:0] select_ln874_3_fu_304_p3;
reg   [17:0] select_ln874_3_reg_997;
wire   [0:0] and_ln874_4_fu_337_p2;
reg   [0:0] and_ln874_4_reg_1002;
wire  signed [17:0] sin_lut_word_V_4_fu_371_p3;
reg  signed [17:0] sin_lut_word_V_4_reg_1007;
reg  signed [17:0] sin_lut_word_V_4_reg_1007_pp0_iter6_reg;
reg  signed [17:0] sin_lut_word_V_4_reg_1007_pp0_iter7_reg;
reg  signed [17:0] sin_lut_word_V_4_reg_1007_pp0_iter8_reg;
reg  signed [17:0] sin_lut_word_V_4_reg_1007_pp0_iter9_reg;
reg   [15:0] fine_word_V_reg_1013;
wire   [1:0] trunc_ln1192_2_fu_379_p1;
reg   [1:0] trunc_ln1192_2_reg_1018;
reg   [1:0] trunc_ln1192_2_reg_1018_pp0_iter6_reg;
reg   [1:0] trunc_ln1192_2_reg_1018_pp0_iter7_reg;
reg   [1:0] trunc_ln1192_2_reg_1018_pp0_iter8_reg;
reg   [1:0] trunc_ln1192_2_reg_1018_pp0_iter9_reg;
wire  signed [17:0] select_ln874_4_fu_383_p3;
reg  signed [17:0] select_ln874_4_reg_1023;
reg  signed [17:0] select_ln874_4_reg_1023_pp0_iter7_reg;
wire   [33:0] zext_ln1118_fu_391_p1;
wire  signed [43:0] grp_fu_865_p3;
reg  signed [43:0] ret_V_reg_1049;
reg  signed [43:0] ret_V_reg_1049_pp0_iter10_reg;
reg   [0:0] p_Result_10_reg_1056;
reg   [0:0] p_Result_10_reg_1056_pp0_iter10_reg;
reg   [0:0] p_Result_10_reg_1056_pp0_iter11_reg;
reg   [0:0] p_Result_10_reg_1056_pp0_iter12_reg;
wire   [25:0] trunc_ln718_fu_416_p1;
reg   [25:0] trunc_ln718_reg_1064;
reg   [0:0] p_Result_12_reg_1069;
reg   [0:0] p_Result_12_reg_1069_pp0_iter10_reg;
reg   [0:0] p_Result_12_reg_1069_pp0_iter11_reg;
reg   [0:0] p_Result_12_reg_1069_pp0_iter12_reg;
wire  signed [33:0] grp_fu_876_p2;
reg  signed [33:0] r_V_3_reg_1075;
wire   [26:0] trunc_ln1192_fu_426_p1;
reg   [26:0] trunc_ln1192_reg_1081;
wire   [0:0] r_fu_429_p2;
reg   [0:0] r_reg_1086;
wire   [26:0] add_ln1192_1_fu_464_p2;
reg   [26:0] add_ln1192_1_reg_1091;
reg   [26:0] add_ln1192_1_reg_1091_pp0_iter11_reg;
wire   [42:0] add_ln1192_2_fu_469_p2;
reg   [42:0] add_ln1192_2_reg_1096;
reg   [42:0] add_ln1192_2_reg_1096_pp0_iter11_reg;
reg   [0:0] p_Result_14_reg_1102;
reg   [0:0] p_Result_14_reg_1102_pp0_iter11_reg;
reg   [0:0] p_Result_14_reg_1102_pp0_iter12_reg;
reg   [0:0] p_Result_14_reg_1102_pp0_iter13_reg;
wire   [25:0] trunc_ln718_1_fu_483_p1;
reg   [25:0] trunc_ln718_1_reg_1110;
reg   [0:0] p_Result_16_reg_1115;
reg   [0:0] p_Result_16_reg_1115_pp0_iter11_reg;
reg   [0:0] p_Result_16_reg_1115_pp0_iter12_reg;
reg   [0:0] p_Result_16_reg_1115_pp0_iter13_reg;
wire   [15:0] p_Val2_5_fu_533_p2;
reg   [15:0] p_Val2_5_reg_1121;
reg   [15:0] p_Val2_5_reg_1121_pp0_iter12_reg;
reg   [0:0] p_Result_13_reg_1127;
reg   [0:0] p_Result_13_reg_1127_pp0_iter12_reg;
wire   [14:0] trunc_ln790_2_fu_547_p1;
reg   [14:0] trunc_ln790_2_reg_1135;
wire   [0:0] r_1_fu_551_p2;
reg   [0:0] r_1_reg_1140;
wire   [0:0] carry_1_fu_561_p2;
reg   [0:0] carry_1_reg_1145;
wire   [0:0] Range1_all_zeros_fu_566_p2;
reg   [0:0] Range1_all_zeros_reg_1151;
wire   [0:0] icmp_ln790_2_fu_571_p2;
reg   [0:0] icmp_ln790_2_reg_1158;
wire   [15:0] p_Val2_8_fu_614_p2;
reg   [15:0] p_Val2_8_reg_1163;
reg   [15:0] p_Val2_8_reg_1163_pp0_iter13_reg;
reg   [0:0] p_Result_17_reg_1169;
reg   [0:0] p_Result_17_reg_1169_pp0_iter13_reg;
wire   [14:0] trunc_ln790_3_fu_628_p1;
reg   [14:0] trunc_ln790_3_reg_1177;
wire   [15:0] i_fu_727_p3;
reg   [15:0] i_reg_1182;
wire   [0:0] carry_3_fu_740_p2;
reg   [0:0] carry_3_reg_1187;
wire   [0:0] Range1_all_zeros_1_fu_745_p2;
reg   [0:0] Range1_all_zeros_1_reg_1193;
wire   [0:0] icmp_ln790_3_fu_750_p2;
reg   [0:0] icmp_ln790_3_reg_1200;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln538_fu_170_p1;
wire   [63:0] zext_ln538_1_fu_179_p1;
wire   [63:0] zext_ln538_2_fu_224_p1;
wire   [17:0] phitmp3_fu_234_p3;
wire   [16:0] select_ln874_1_fu_247_p3;
wire   [0:0] icmp_ln58_fu_257_p2;
wire   [17:0] select_ln874_fu_240_p3;
wire   [0:0] xor_ln874_fu_270_p2;
wire   [0:0] and_ln874_fu_275_p2;
wire   [17:0] select_ln58_fu_262_p3;
wire   [0:0] icmp_ln58_2_fu_287_p2;
wire   [17:0] zext_ln44_fu_253_p1;
wire   [17:0] select_ln874_2_fu_280_p3;
wire   [0:0] and_ln874_1_fu_300_p2;
wire   [17:0] select_ln58_1_fu_292_p3;
wire   [0:0] icmp_ln58_4_fu_316_p2;
wire   [0:0] icmp_ln58_5_fu_321_p2;
wire   [0:0] icmp_ln58_3_fu_311_p2;
wire   [0:0] and_ln874_3_fu_332_p2;
wire   [0:0] and_ln874_2_fu_326_p2;
wire   [17:0] sin_lut_word_V_1_fu_343_p3;
wire   [17:0] sin_lut_word_V_2_fu_350_p3;
wire   [0:0] or_ln874_fu_365_p2;
wire   [17:0] sin_lut_word_V_3_fu_357_p3;
wire  signed [42:0] lhs_V_fu_398_p3;
wire  signed [42:0] lhs_V_1_fu_434_p3;
wire  signed [43:0] sext_ln1192_fu_441_p1;
wire  signed [43:0] sext_ln703_1_fu_445_p1;
wire   [26:0] trunc_ln1192_1_fu_451_p3;
wire  signed [42:0] sext_ln1192_1_fu_448_p1;
wire   [43:0] ret_V_1_fu_458_p2;
wire   [0:0] p_Result_s_27_fu_504_p3;
wire   [0:0] or_ln412_fu_518_p2;
wire   [0:0] p_Result_11_fu_511_p3;
wire   [0:0] and_ln412_fu_523_p2;
wire   [15:0] p_Val2_4_fu_495_p4;
wire   [15:0] zext_ln415_fu_529_p1;
wire   [0:0] xor_ln416_fu_556_p2;
wire   [0:0] p_Result_6_fu_585_p3;
wire   [0:0] or_ln412_1_fu_599_p2;
wire   [0:0] p_Result_15_fu_592_p3;
wire   [0:0] and_ln412_1_fu_604_p2;
wire   [15:0] p_Val2_7_fu_576_p4;
wire   [15:0] zext_ln415_1_fu_610_p1;
wire   [0:0] xor_ln781_fu_642_p2;
wire   [0:0] deleted_zeros_fu_632_p3;
wire   [0:0] xor_ln785_fu_652_p2;
wire   [0:0] or_ln785_fu_658_p2;
wire   [0:0] deleted_ones_fu_637_p3;
wire   [0:0] and_ln786_fu_668_p2;
wire   [0:0] xor_ln786_fu_673_p2;
wire   [0:0] or_ln781_fu_647_p2;
wire   [0:0] or_ln788_fu_679_p2;
wire   [0:0] and_ln788_fu_684_p2;
wire   [0:0] underflow_fu_690_p2;
wire   [0:0] overflow_fu_663_p2;
wire   [0:0] xor_ln340_fu_701_p2;
wire   [0:0] or_ln340_fu_695_p2;
wire   [0:0] or_ln340_1_fu_707_p2;
wire   [15:0] select_ln340_fu_713_p3;
wire   [15:0] select_ln388_fu_720_p3;
wire   [0:0] xor_ln416_1_fu_735_p2;
wire   [0:0] xor_ln781_1_fu_765_p2;
wire   [0:0] deleted_zeros_1_fu_755_p3;
wire   [0:0] xor_ln785_1_fu_775_p2;
wire   [0:0] or_ln785_1_fu_781_p2;
wire   [0:0] deleted_ones_1_fu_760_p3;
wire   [0:0] and_ln786_1_fu_791_p2;
wire   [0:0] xor_ln786_1_fu_796_p2;
wire   [0:0] or_ln781_1_fu_770_p2;
wire   [0:0] or_ln788_1_fu_802_p2;
wire   [0:0] and_ln788_2_fu_807_p2;
wire   [0:0] underflow_1_fu_813_p2;
wire   [0:0] overflow_1_fu_786_p2;
wire   [0:0] xor_ln340_1_fu_824_p2;
wire   [0:0] or_ln340_2_fu_818_p2;
wire   [0:0] or_ln340_3_fu_830_p2;
wire   [15:0] select_ln340_2_fu_836_p3;
wire   [15:0] select_ln388_1_fu_843_p3;
wire   [15:0] p_Val2_s_fu_850_p3;
wire   [15:0] grp_fu_865_p1;
wire   [15:0] grp_fu_876_p1;
reg    grp_fu_865_ce;
reg    grp_fu_876_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to13;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
end

resonator_dds_phase_to_sincos_wLUT_cos_lut #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
cos_lut_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cos_lut_address0),
    .ce0(cos_lut_ce0),
    .q0(cos_lut_q0),
    .address1(cos_lut_address1),
    .ce1(cos_lut_ce1),
    .q1(cos_lut_q1)
);

resonator_dds_phase_to_sincos_wLUT_fine_lut #(
    .DataWidth( 16 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
fine_lut_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fine_lut_address0),
    .ce0(fine_lut_ce0),
    .q0(fine_lut_q0)
);

resonator_dds_mac_mulsub_18s_16ns_43s_44_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 43 ),
    .dout_WIDTH( 44 ))
mac_mulsub_18s_16ns_43s_44_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sin_lut_word_V_4_reg_1007),
    .din1(grp_fu_865_p1),
    .din2(lhs_V_fu_398_p3),
    .ce(grp_fu_865_ce),
    .dout(grp_fu_865_p3)
);

resonator_dds_mul_mul_18s_16ns_34_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 34 ))
mul_mul_18s_16ns_34_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln874_4_fu_383_p3),
    .din1(grp_fu_876_p1),
    .ce(grp_fu_876_ce),
    .dout(grp_fu_876_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        Range1_all_zeros_1_reg_1193 <= Range1_all_zeros_1_fu_745_p2;
        Range1_all_zeros_reg_1151 <= Range1_all_zeros_fu_566_p2;
        add_ln1192_1_reg_1091 <= add_ln1192_1_fu_464_p2;
        add_ln1192_1_reg_1091_pp0_iter11_reg <= add_ln1192_1_reg_1091;
        add_ln1192_2_reg_1096 <= add_ln1192_2_fu_469_p2;
        add_ln1192_2_reg_1096_pp0_iter11_reg <= add_ln1192_2_reg_1096;
        and_ln874_4_reg_1002 <= and_ln874_4_fu_337_p2;
        carry_1_reg_1145 <= carry_1_fu_561_p2;
        carry_3_reg_1187 <= carry_3_fu_740_p2;
        cos_lut_word_V_reg_992 <= cos_lut_word_V_fu_228_p3;
        fine_word_V_reg_1013 <= fine_lut_q0;
        i_reg_1182 <= i_fu_727_p3;
        icmp_ln58_1_reg_981 <= icmp_ln58_1_fu_219_p2;
        icmp_ln790_1_reg_976 <= icmp_ln790_1_fu_214_p2;
        icmp_ln790_2_reg_1158 <= icmp_ln790_2_fu_571_p2;
        icmp_ln790_3_reg_1200 <= icmp_ln790_3_fu_750_p2;
        icmp_ln790_reg_971 <= icmp_ln790_fu_209_p2;
        icmp_ln874_reg_914_pp0_iter2_reg <= icmp_ln874_reg_914;
        icmp_ln874_reg_914_pp0_iter3_reg <= icmp_ln874_reg_914_pp0_iter2_reg;
        icmp_ln874_reg_914_pp0_iter4_reg <= icmp_ln874_reg_914_pp0_iter3_reg;
        msb_V_reg_888_pp0_iter2_reg <= msb_V_reg_888_pp0_iter1_reg;
        msb_V_reg_888_pp0_iter3_reg <= msb_V_reg_888_pp0_iter2_reg;
        msb_V_reg_888_pp0_iter4_reg <= msb_V_reg_888_pp0_iter3_reg;
        p_Result_10_reg_1056 <= grp_fu_865_p3[32'd43];
        p_Result_10_reg_1056_pp0_iter10_reg <= p_Result_10_reg_1056;
        p_Result_10_reg_1056_pp0_iter11_reg <= p_Result_10_reg_1056_pp0_iter10_reg;
        p_Result_10_reg_1056_pp0_iter12_reg <= p_Result_10_reg_1056_pp0_iter11_reg;
        p_Result_12_reg_1069 <= grp_fu_865_p3[32'd42];
        p_Result_12_reg_1069_pp0_iter10_reg <= p_Result_12_reg_1069;
        p_Result_12_reg_1069_pp0_iter11_reg <= p_Result_12_reg_1069_pp0_iter10_reg;
        p_Result_12_reg_1069_pp0_iter12_reg <= p_Result_12_reg_1069_pp0_iter11_reg;
        p_Result_13_reg_1127 <= p_Val2_5_fu_533_p2[32'd15];
        p_Result_13_reg_1127_pp0_iter12_reg <= p_Result_13_reg_1127;
        p_Result_14_reg_1102 <= ret_V_1_fu_458_p2[32'd43];
        p_Result_14_reg_1102_pp0_iter11_reg <= p_Result_14_reg_1102;
        p_Result_14_reg_1102_pp0_iter12_reg <= p_Result_14_reg_1102_pp0_iter11_reg;
        p_Result_14_reg_1102_pp0_iter13_reg <= p_Result_14_reg_1102_pp0_iter12_reg;
        p_Result_16_reg_1115 <= add_ln1192_2_fu_469_p2[32'd42];
        p_Result_16_reg_1115_pp0_iter11_reg <= p_Result_16_reg_1115;
        p_Result_16_reg_1115_pp0_iter12_reg <= p_Result_16_reg_1115_pp0_iter11_reg;
        p_Result_16_reg_1115_pp0_iter13_reg <= p_Result_16_reg_1115_pp0_iter12_reg;
        p_Result_17_reg_1169 <= p_Val2_8_fu_614_p2[32'd15];
        p_Result_17_reg_1169_pp0_iter13_reg <= p_Result_17_reg_1169;
        p_Result_s_reg_883_pp0_iter2_reg <= p_Result_s_reg_883_pp0_iter1_reg;
        p_Result_s_reg_883_pp0_iter3_reg <= p_Result_s_reg_883_pp0_iter2_reg;
        p_Val2_5_reg_1121 <= p_Val2_5_fu_533_p2;
        p_Val2_5_reg_1121_pp0_iter12_reg <= p_Val2_5_reg_1121;
        p_Val2_8_reg_1163 <= p_Val2_8_fu_614_p2;
        p_Val2_8_reg_1163_pp0_iter13_reg <= p_Val2_8_reg_1163;
        r_1_reg_1140 <= r_1_fu_551_p2;
        r_V_1_reg_961 <= r_V_1_fu_199_p2;
        r_V_1_reg_961_pp0_iter4_reg <= r_V_1_reg_961;
        r_V_3_reg_1075 <= grp_fu_876_p2;
        r_V_reg_946 <= r_V_fu_186_p2;
        r_V_reg_946_pp0_iter4_reg <= r_V_reg_946;
        r_reg_1086 <= r_fu_429_p2;
        ret_V_reg_1049_pp0_iter10_reg <= ret_V_reg_1049;
        select_ln874_3_reg_997 <= select_ln874_3_fu_304_p3;
        select_ln874_4_reg_1023 <= select_ln874_4_fu_383_p3;
        select_ln874_4_reg_1023_pp0_iter7_reg <= select_ln874_4_reg_1023;
        sin_lut_word_V_4_reg_1007 <= sin_lut_word_V_4_fu_371_p3;
        sin_lut_word_V_4_reg_1007_pp0_iter6_reg <= sin_lut_word_V_4_reg_1007;
        sin_lut_word_V_4_reg_1007_pp0_iter7_reg <= sin_lut_word_V_4_reg_1007_pp0_iter6_reg;
        sin_lut_word_V_4_reg_1007_pp0_iter8_reg <= sin_lut_word_V_4_reg_1007_pp0_iter7_reg;
        sin_lut_word_V_4_reg_1007_pp0_iter9_reg <= sin_lut_word_V_4_reg_1007_pp0_iter8_reg;
        sin_lut_word_V_reg_933_pp0_iter3_reg <= sin_lut_word_V_reg_933;
        sin_lut_word_V_reg_933_pp0_iter4_reg <= sin_lut_word_V_reg_933_pp0_iter3_reg;
        trunc_ln1192_2_reg_1018 <= trunc_ln1192_2_fu_379_p1;
        trunc_ln1192_2_reg_1018_pp0_iter6_reg <= trunc_ln1192_2_reg_1018;
        trunc_ln1192_2_reg_1018_pp0_iter7_reg <= trunc_ln1192_2_reg_1018_pp0_iter6_reg;
        trunc_ln1192_2_reg_1018_pp0_iter8_reg <= trunc_ln1192_2_reg_1018_pp0_iter7_reg;
        trunc_ln1192_2_reg_1018_pp0_iter9_reg <= trunc_ln1192_2_reg_1018_pp0_iter8_reg;
        trunc_ln1192_reg_1081 <= trunc_ln1192_fu_426_p1;
        trunc_ln718_1_reg_1110 <= trunc_ln718_1_fu_483_p1;
        trunc_ln718_reg_1064 <= trunc_ln718_fu_416_p1;
        trunc_ln790_1_reg_966 <= trunc_ln790_1_fu_205_p1;
        trunc_ln790_2_reg_1135 <= trunc_ln790_2_fu_547_p1;
        trunc_ln790_3_reg_1177 <= trunc_ln790_3_fu_628_p1;
        trunc_ln790_reg_951 <= trunc_ln790_fu_192_p1;
        zext_ln703_1_reg_956[16 : 0] <= zext_ln703_1_fu_196_p1[16 : 0];
        zext_ln703_1_reg_956_pp0_iter4_reg[16 : 0] <= zext_ln703_1_reg_956[16 : 0];
        zext_ln703_reg_939[16 : 0] <= zext_ln703_fu_183_p1[16 : 0];
        zext_ln703_reg_939_pp0_iter4_reg[16 : 0] <= zext_ln703_reg_939[16 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        cos_lut_word_V_3_reg_928 <= cos_lut_q1;
        sin_lut_word_V_reg_933 <= cos_lut_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln874_reg_914 <= icmp_ln874_fu_174_p2;
        lsb_V_reg_898 <= {{acc[19:10]}};
        msb_V_reg_888 <= {{acc[21:20]}};
        msb_V_reg_888_pp0_iter1_reg <= msb_V_reg_888;
        p_Result_s_reg_883 <= {{acc[9:1]}};
        p_Result_s_reg_883_pp0_iter1_reg <= p_Result_s_reg_883;
        sin_adr_V_reg_904 <= sin_adr_V_fu_164_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        ret_V_reg_1049 <= grp_fu_865_p3;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1)) | ((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to13 = 1'b1;
    end else begin
        ap_idle_pp0_0to13 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to13 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cos_lut_ce0 = 1'b1;
    end else begin
        cos_lut_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cos_lut_ce1 = 1'b1;
    end else begin
        cos_lut_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        fine_lut_ce0 = 1'b1;
    end else begin
        fine_lut_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_865_ce = 1'b1;
    end else begin
        grp_fu_865_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_876_ce = 1'b1;
    end else begin
        grp_fu_876_ce = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Range1_all_zeros_1_fu_745_p2 = (p_Result_14_reg_1102_pp0_iter12_reg ^ 1'd1);

assign Range1_all_zeros_fu_566_p2 = (p_Result_10_reg_1056_pp0_iter11_reg ^ 1'd1);

assign add_ln1192_1_fu_464_p2 = (trunc_ln1192_reg_1081 + trunc_ln1192_1_fu_451_p3);

assign add_ln1192_2_fu_469_p2 = ($signed(sext_ln1192_1_fu_448_p1) + $signed(lhs_V_1_fu_434_p3));

assign and_ln412_1_fu_604_p2 = (p_Result_15_fu_592_p3 & or_ln412_1_fu_599_p2);

assign and_ln412_fu_523_p2 = (p_Result_11_fu_511_p3 & or_ln412_fu_518_p2);

assign and_ln786_1_fu_791_p2 = (p_Result_17_reg_1169_pp0_iter13_reg & deleted_ones_1_fu_760_p3);

assign and_ln786_fu_668_p2 = (p_Result_13_reg_1127_pp0_iter12_reg & deleted_ones_fu_637_p3);

assign and_ln788_2_fu_807_p2 = (or_ln788_1_fu_802_p2 & or_ln781_1_fu_770_p2);

assign and_ln788_fu_684_p2 = (or_ln788_fu_679_p2 & or_ln781_fu_647_p2);

assign and_ln874_1_fu_300_p2 = (icmp_ln874_reg_914_pp0_iter4_reg & icmp_ln58_1_reg_981);

assign and_ln874_2_fu_326_p2 = (icmp_ln58_5_fu_321_p2 & icmp_ln58_4_fu_316_p2);

assign and_ln874_3_fu_332_p2 = (icmp_ln874_reg_914_pp0_iter4_reg & icmp_ln58_3_fu_311_p2);

assign and_ln874_4_fu_337_p2 = (and_ln874_3_fu_332_p2 & and_ln874_2_fu_326_p2);

assign and_ln874_fu_275_p2 = (xor_ln874_fu_270_p2 & icmp_ln58_1_reg_981);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = {{p_Val2_s_fu_850_p3}, {i_reg_1182}};

assign carry_1_fu_561_p2 = (xor_ln416_fu_556_p2 & p_Result_12_reg_1069_pp0_iter11_reg);

assign carry_3_fu_740_p2 = (xor_ln416_1_fu_735_p2 & p_Result_16_reg_1115_pp0_iter12_reg);

assign cos_lut_address0 = zext_ln538_1_fu_179_p1;

assign cos_lut_address1 = zext_ln538_fu_170_p1;

assign cos_lut_word_V_fu_228_p3 = ((icmp_ln790_reg_971[0:0] === 1'b1) ? 18'd131073 : r_V_reg_946_pp0_iter4_reg);

assign deleted_ones_1_fu_760_p3 = ((carry_3_reg_1187[0:0] === 1'b1) ? Range1_all_zeros_1_reg_1193 : p_Result_14_reg_1102_pp0_iter13_reg);

assign deleted_ones_fu_637_p3 = ((carry_1_reg_1145[0:0] === 1'b1) ? Range1_all_zeros_reg_1151 : p_Result_10_reg_1056_pp0_iter12_reg);

assign deleted_zeros_1_fu_755_p3 = ((carry_3_reg_1187[0:0] === 1'b1) ? p_Result_14_reg_1102_pp0_iter13_reg : Range1_all_zeros_1_reg_1193);

assign deleted_zeros_fu_632_p3 = ((carry_1_reg_1145[0:0] === 1'b1) ? p_Result_10_reg_1056_pp0_iter12_reg : Range1_all_zeros_reg_1151);

assign fine_lut_address0 = zext_ln538_2_fu_224_p1;

assign grp_fu_865_p1 = zext_ln1118_fu_391_p1;

assign grp_fu_876_p1 = zext_ln1118_fu_391_p1;

assign i_fu_727_p3 = ((or_ln340_1_fu_707_p2[0:0] === 1'b1) ? select_ln340_fu_713_p3 : select_ln388_fu_720_p3);

assign icmp_ln58_1_fu_219_p2 = ((msb_V_reg_888_pp0_iter3_reg == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln58_2_fu_287_p2 = ((msb_V_reg_888_pp0_iter4_reg == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln58_3_fu_311_p2 = ((msb_V_reg_888_pp0_iter4_reg != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln58_4_fu_316_p2 = ((msb_V_reg_888_pp0_iter4_reg != 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln58_5_fu_321_p2 = ((msb_V_reg_888_pp0_iter4_reg != 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_257_p2 = ((msb_V_reg_888_pp0_iter4_reg == 2'd1) ? 1'b1 : 1'b0);

assign icmp_ln790_1_fu_214_p2 = ((trunc_ln790_1_reg_966 == 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln790_2_fu_571_p2 = ((trunc_ln790_2_reg_1135 == 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln790_3_fu_750_p2 = ((trunc_ln790_3_reg_1177 == 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln790_fu_209_p2 = ((trunc_ln790_reg_951 == 17'd0) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_174_p2 = ((lsb_V_reg_898 == 10'd0) ? 1'b1 : 1'b0);

assign lhs_V_1_fu_434_p3 = {{sin_lut_word_V_4_reg_1007_pp0_iter9_reg}, {25'd0}};

assign lhs_V_fu_398_p3 = {{select_ln874_4_reg_1023_pp0_iter7_reg}, {25'd0}};

assign lsb_V_fu_154_p4 = {{acc[19:10]}};

assign or_ln340_1_fu_707_p2 = (xor_ln340_fu_701_p2 | overflow_fu_663_p2);

assign or_ln340_2_fu_818_p2 = (underflow_1_fu_813_p2 | overflow_1_fu_786_p2);

assign or_ln340_3_fu_830_p2 = (xor_ln340_1_fu_824_p2 | overflow_1_fu_786_p2);

assign or_ln340_fu_695_p2 = (underflow_fu_690_p2 | overflow_fu_663_p2);

assign or_ln412_1_fu_599_p2 = (r_1_reg_1140 | p_Result_6_fu_585_p3);

assign or_ln412_fu_518_p2 = (r_reg_1086 | p_Result_s_27_fu_504_p3);

assign or_ln781_1_fu_770_p2 = (xor_ln781_1_fu_765_p2 | p_Result_17_reg_1169_pp0_iter13_reg);

assign or_ln781_fu_647_p2 = (xor_ln781_fu_642_p2 | p_Result_13_reg_1127_pp0_iter12_reg);

assign or_ln785_1_fu_781_p2 = (xor_ln785_1_fu_775_p2 | p_Result_17_reg_1169_pp0_iter13_reg);

assign or_ln785_fu_658_p2 = (xor_ln785_fu_652_p2 | p_Result_13_reg_1127_pp0_iter12_reg);

assign or_ln788_1_fu_802_p2 = (xor_ln786_1_fu_796_p2 | icmp_ln790_3_reg_1200);

assign or_ln788_fu_679_p2 = (xor_ln786_fu_673_p2 | icmp_ln790_2_reg_1158);

assign or_ln874_fu_365_p2 = (and_ln874_4_fu_337_p2 | and_ln874_1_fu_300_p2);

assign overflow_1_fu_786_p2 = (or_ln785_1_fu_781_p2 & Range1_all_zeros_1_reg_1193);

assign overflow_fu_663_p2 = (or_ln785_fu_658_p2 & Range1_all_zeros_reg_1151);

assign p_Result_11_fu_511_p3 = ret_V_reg_1049_pp0_iter10_reg[32'd26];

assign p_Result_15_fu_592_p3 = add_ln1192_1_reg_1091_pp0_iter11_reg[32'd26];

assign p_Result_6_fu_585_p3 = add_ln1192_2_reg_1096_pp0_iter11_reg[32'd27];

assign p_Result_s_27_fu_504_p3 = ret_V_reg_1049_pp0_iter10_reg[32'd27];

assign p_Val2_4_fu_495_p4 = {{ret_V_reg_1049_pp0_iter10_reg[42:27]}};

assign p_Val2_5_fu_533_p2 = (p_Val2_4_fu_495_p4 + zext_ln415_fu_529_p1);

assign p_Val2_7_fu_576_p4 = {{add_ln1192_2_reg_1096_pp0_iter11_reg[42:27]}};

assign p_Val2_8_fu_614_p2 = (p_Val2_7_fu_576_p4 + zext_ln415_1_fu_610_p1);

assign p_Val2_s_fu_850_p3 = ((or_ln340_3_fu_830_p2[0:0] === 1'b1) ? select_ln340_2_fu_836_p3 : select_ln388_1_fu_843_p3);

assign phitmp3_fu_234_p3 = ((icmp_ln790_1_reg_976[0:0] === 1'b1) ? 18'd131073 : r_V_1_reg_961_pp0_iter4_reg);

assign r_1_fu_551_p2 = ((trunc_ln718_1_reg_1110 != 26'd0) ? 1'b1 : 1'b0);

assign r_V_1_fu_199_p2 = (18'd0 - zext_ln703_1_fu_196_p1);

assign r_V_fu_186_p2 = (18'd0 - zext_ln703_fu_183_p1);

assign r_fu_429_p2 = ((trunc_ln718_reg_1064 != 26'd0) ? 1'b1 : 1'b0);

assign ret_V_1_fu_458_p2 = ($signed(sext_ln1192_fu_441_p1) + $signed(sext_ln703_1_fu_445_p1));

assign select_ln340_2_fu_836_p3 = ((or_ln340_2_fu_818_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_8_reg_1163_pp0_iter13_reg);

assign select_ln340_fu_713_p3 = ((or_ln340_fu_695_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_5_reg_1121_pp0_iter12_reg);

assign select_ln388_1_fu_843_p3 = ((underflow_1_fu_813_p2[0:0] === 1'b1) ? 16'd32769 : p_Val2_8_reg_1163_pp0_iter13_reg);

assign select_ln388_fu_720_p3 = ((underflow_fu_690_p2[0:0] === 1'b1) ? 16'd32769 : p_Val2_5_reg_1121_pp0_iter12_reg);

assign select_ln58_1_fu_292_p3 = ((icmp_ln58_2_fu_287_p2[0:0] === 1'b1) ? zext_ln44_fu_253_p1 : select_ln874_2_fu_280_p3);

assign select_ln58_fu_262_p3 = ((icmp_ln58_fu_257_p2[0:0] === 1'b1) ? select_ln874_fu_240_p3 : cos_lut_word_V_fu_228_p3);

assign select_ln874_1_fu_247_p3 = ((icmp_ln874_reg_914_pp0_iter4_reg[0:0] === 1'b1) ? 17'd0 : sin_lut_word_V_reg_933_pp0_iter4_reg);

assign select_ln874_2_fu_280_p3 = ((and_ln874_fu_275_p2[0:0] === 1'b1) ? zext_ln703_reg_939_pp0_iter4_reg : select_ln58_fu_262_p3);

assign select_ln874_3_fu_304_p3 = ((and_ln874_1_fu_300_p2[0:0] === 1'b1) ? zext_ln703_reg_939_pp0_iter4_reg : select_ln58_1_fu_292_p3);

assign select_ln874_4_fu_383_p3 = ((and_ln874_4_reg_1002[0:0] === 1'b1) ? cos_lut_word_V_reg_992 : select_ln874_3_reg_997);

assign select_ln874_fu_240_p3 = ((icmp_ln874_reg_914_pp0_iter4_reg[0:0] === 1'b1) ? 18'd0 : phitmp3_fu_234_p3);

assign sext_ln1192_1_fu_448_p1 = r_V_3_reg_1075;

assign sext_ln1192_fu_441_p1 = lhs_V_1_fu_434_p3;

assign sext_ln703_1_fu_445_p1 = r_V_3_reg_1075;

assign sin_adr_V_fu_164_p2 = (10'd0 - lsb_V_fu_154_p4);

assign sin_lut_word_V_1_fu_343_p3 = ((icmp_ln58_fu_257_p2[0:0] === 1'b1) ? zext_ln703_reg_939_pp0_iter4_reg : phitmp3_fu_234_p3);

assign sin_lut_word_V_2_fu_350_p3 = ((and_ln874_fu_275_p2[0:0] === 1'b1) ? zext_ln703_1_reg_956_pp0_iter4_reg : sin_lut_word_V_1_fu_343_p3);

assign sin_lut_word_V_3_fu_357_p3 = ((icmp_ln58_2_fu_287_p2[0:0] === 1'b1) ? cos_lut_word_V_fu_228_p3 : sin_lut_word_V_2_fu_350_p3);

assign sin_lut_word_V_4_fu_371_p3 = ((or_ln874_fu_365_p2[0:0] === 1'b1) ? 18'd0 : sin_lut_word_V_3_fu_357_p3);

assign trunc_ln1192_1_fu_451_p3 = {{trunc_ln1192_2_reg_1018_pp0_iter9_reg}, {25'd0}};

assign trunc_ln1192_2_fu_379_p1 = sin_lut_word_V_4_fu_371_p3[1:0];

assign trunc_ln1192_fu_426_p1 = grp_fu_876_p2[26:0];

assign trunc_ln718_1_fu_483_p1 = ret_V_1_fu_458_p2[25:0];

assign trunc_ln718_fu_416_p1 = grp_fu_865_p3[25:0];

assign trunc_ln790_1_fu_205_p1 = r_V_1_fu_199_p2[16:0];

assign trunc_ln790_2_fu_547_p1 = p_Val2_5_fu_533_p2[14:0];

assign trunc_ln790_3_fu_628_p1 = p_Val2_8_fu_614_p2[14:0];

assign trunc_ln790_fu_192_p1 = r_V_fu_186_p2[16:0];

assign underflow_1_fu_813_p2 = (p_Result_14_reg_1102_pp0_iter13_reg & and_ln788_2_fu_807_p2);

assign underflow_fu_690_p2 = (p_Result_10_reg_1056_pp0_iter12_reg & and_ln788_fu_684_p2);

assign xor_ln340_1_fu_824_p2 = (underflow_1_fu_813_p2 ^ 1'd1);

assign xor_ln340_fu_701_p2 = (underflow_fu_690_p2 ^ 1'd1);

assign xor_ln416_1_fu_735_p2 = (p_Result_17_reg_1169 ^ 1'd1);

assign xor_ln416_fu_556_p2 = (p_Result_13_reg_1127 ^ 1'd1);

assign xor_ln781_1_fu_765_p2 = (p_Result_16_reg_1115_pp0_iter13_reg ^ 1'd1);

assign xor_ln781_fu_642_p2 = (p_Result_12_reg_1069_pp0_iter12_reg ^ 1'd1);

assign xor_ln785_1_fu_775_p2 = (deleted_zeros_1_fu_755_p3 ^ 1'd1);

assign xor_ln785_fu_652_p2 = (deleted_zeros_fu_632_p3 ^ 1'd1);

assign xor_ln786_1_fu_796_p2 = (1'd1 ^ and_ln786_1_fu_791_p2);

assign xor_ln786_fu_673_p2 = (1'd1 ^ and_ln786_fu_668_p2);

assign xor_ln874_fu_270_p2 = (icmp_ln874_reg_914_pp0_iter4_reg ^ 1'd1);

assign zext_ln1118_fu_391_p1 = fine_word_V_reg_1013;

assign zext_ln415_1_fu_610_p1 = and_ln412_1_fu_604_p2;

assign zext_ln415_fu_529_p1 = and_ln412_fu_523_p2;

assign zext_ln44_fu_253_p1 = select_ln874_1_fu_247_p3;

assign zext_ln538_1_fu_179_p1 = sin_adr_V_reg_904;

assign zext_ln538_2_fu_224_p1 = p_Result_s_reg_883_pp0_iter3_reg;

assign zext_ln538_fu_170_p1 = lsb_V_reg_898;

assign zext_ln703_1_fu_196_p1 = sin_lut_word_V_reg_933;

assign zext_ln703_fu_183_p1 = cos_lut_word_V_3_reg_928;

always @ (posedge ap_clk) begin
    zext_ln703_reg_939[17] <= 1'b0;
    zext_ln703_reg_939_pp0_iter4_reg[17] <= 1'b0;
    zext_ln703_1_reg_956[17] <= 1'b0;
    zext_ln703_1_reg_956_pp0_iter4_reg[17] <= 1'b0;
end

endmodule //resonator_dds_phase_to_sincos_wLUT

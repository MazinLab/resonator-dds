-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity resonator_dds_get_dds is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    accg : IN STD_LOGIC_VECTOR (175 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (255 downto 0) );
end;


architecture behav of resonator_dds_get_dds is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_6D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101101";
    constant ap_const_lv32_6E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101110";
    constant ap_const_lv32_83 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000011";
    constant ap_const_lv32_84 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000100";
    constant ap_const_lv32_99 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011001";
    constant ap_const_lv32_9A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011010";
    constant ap_const_lv32_AF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010101111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_phase_to_sincos_wLUT_fu_56_ap_start : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_56_ap_done : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_56_ap_idle : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_56_ap_ready : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_56_ap_ce : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_56_acc : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_phase_to_sincos_wLUT_fu_56_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call3 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call3 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call3 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call3 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call3 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call3 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call3 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call3 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call3 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call3 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call3 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp18 : BOOLEAN;
    signal grp_phase_to_sincos_wLUT_fu_65_ap_start : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_65_ap_done : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_65_ap_idle : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_65_ap_ready : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_65_ap_ce : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_65_acc : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_phase_to_sincos_wLUT_fu_65_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call5 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call5 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call5 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call5 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call5 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call5 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call5 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call5 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call5 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call5 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call5 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call5 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call5 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp20 : BOOLEAN;
    signal grp_phase_to_sincos_wLUT_fu_74_ap_start : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_74_ap_done : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_74_ap_idle : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_74_ap_ready : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_74_ap_ce : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_74_acc : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_phase_to_sincos_wLUT_fu_74_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call7 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call7 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call7 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call7 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call7 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call7 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call7 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call7 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call7 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call7 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call7 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call7 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call7 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp22 : BOOLEAN;
    signal grp_phase_to_sincos_wLUT_fu_83_ap_start : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_83_ap_done : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_83_ap_idle : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_83_ap_ready : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_83_ap_ce : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_83_acc : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_phase_to_sincos_wLUT_fu_83_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call9 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call9 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call9 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call9 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call9 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call9 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call9 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call9 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call9 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call9 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call9 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call9 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call9 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call9 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp24 : BOOLEAN;
    signal grp_phase_to_sincos_wLUT_fu_92_ap_start : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_92_ap_done : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_92_ap_idle : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_92_ap_ready : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_92_ap_ce : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_92_acc : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_phase_to_sincos_wLUT_fu_92_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call11 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call11 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call11 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call11 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call11 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call11 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call11 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call11 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call11 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call11 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call11 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call11 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call11 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call11 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp26 : BOOLEAN;
    signal grp_phase_to_sincos_wLUT_fu_101_ap_start : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_101_ap_done : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_101_ap_idle : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_101_ap_ready : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_101_ap_ce : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_101_acc : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_phase_to_sincos_wLUT_fu_101_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call13 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call13 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call13 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call13 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call13 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call13 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call13 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call13 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call13 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call13 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call13 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call13 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call13 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call13 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp28 : BOOLEAN;
    signal grp_phase_to_sincos_wLUT_fu_110_ap_start : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_110_ap_done : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_110_ap_idle : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_110_ap_ready : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_110_ap_ce : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_110_acc : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_phase_to_sincos_wLUT_fu_110_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call15 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call15 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call15 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call15 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call15 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call15 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call15 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call15 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call15 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call15 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call15 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call15 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call15 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call15 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call15 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp30 : BOOLEAN;
    signal grp_phase_to_sincos_wLUT_fu_119_ap_start : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_119_ap_done : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_119_ap_idle : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_119_ap_ready : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_119_ap_ce : STD_LOGIC;
    signal grp_phase_to_sincos_wLUT_fu_119_acc : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_phase_to_sincos_wLUT_fu_119_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call17 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call17 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call17 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call17 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call17 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call17 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call17 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call17 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call17 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call17 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call17 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call17 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call17 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call17 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call17 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp32 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to13 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;

    component resonator_dds_phase_to_sincos_wLUT IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        acc : IN STD_LOGIC_VECTOR (21 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_phase_to_sincos_wLUT_fu_56 : component resonator_dds_phase_to_sincos_wLUT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_phase_to_sincos_wLUT_fu_56_ap_start,
        ap_done => grp_phase_to_sincos_wLUT_fu_56_ap_done,
        ap_idle => grp_phase_to_sincos_wLUT_fu_56_ap_idle,
        ap_ready => grp_phase_to_sincos_wLUT_fu_56_ap_ready,
        ap_ce => grp_phase_to_sincos_wLUT_fu_56_ap_ce,
        acc => grp_phase_to_sincos_wLUT_fu_56_acc,
        ap_return => grp_phase_to_sincos_wLUT_fu_56_ap_return);

    grp_phase_to_sincos_wLUT_fu_65 : component resonator_dds_phase_to_sincos_wLUT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_phase_to_sincos_wLUT_fu_65_ap_start,
        ap_done => grp_phase_to_sincos_wLUT_fu_65_ap_done,
        ap_idle => grp_phase_to_sincos_wLUT_fu_65_ap_idle,
        ap_ready => grp_phase_to_sincos_wLUT_fu_65_ap_ready,
        ap_ce => grp_phase_to_sincos_wLUT_fu_65_ap_ce,
        acc => grp_phase_to_sincos_wLUT_fu_65_acc,
        ap_return => grp_phase_to_sincos_wLUT_fu_65_ap_return);

    grp_phase_to_sincos_wLUT_fu_74 : component resonator_dds_phase_to_sincos_wLUT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_phase_to_sincos_wLUT_fu_74_ap_start,
        ap_done => grp_phase_to_sincos_wLUT_fu_74_ap_done,
        ap_idle => grp_phase_to_sincos_wLUT_fu_74_ap_idle,
        ap_ready => grp_phase_to_sincos_wLUT_fu_74_ap_ready,
        ap_ce => grp_phase_to_sincos_wLUT_fu_74_ap_ce,
        acc => grp_phase_to_sincos_wLUT_fu_74_acc,
        ap_return => grp_phase_to_sincos_wLUT_fu_74_ap_return);

    grp_phase_to_sincos_wLUT_fu_83 : component resonator_dds_phase_to_sincos_wLUT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_phase_to_sincos_wLUT_fu_83_ap_start,
        ap_done => grp_phase_to_sincos_wLUT_fu_83_ap_done,
        ap_idle => grp_phase_to_sincos_wLUT_fu_83_ap_idle,
        ap_ready => grp_phase_to_sincos_wLUT_fu_83_ap_ready,
        ap_ce => grp_phase_to_sincos_wLUT_fu_83_ap_ce,
        acc => grp_phase_to_sincos_wLUT_fu_83_acc,
        ap_return => grp_phase_to_sincos_wLUT_fu_83_ap_return);

    grp_phase_to_sincos_wLUT_fu_92 : component resonator_dds_phase_to_sincos_wLUT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_phase_to_sincos_wLUT_fu_92_ap_start,
        ap_done => grp_phase_to_sincos_wLUT_fu_92_ap_done,
        ap_idle => grp_phase_to_sincos_wLUT_fu_92_ap_idle,
        ap_ready => grp_phase_to_sincos_wLUT_fu_92_ap_ready,
        ap_ce => grp_phase_to_sincos_wLUT_fu_92_ap_ce,
        acc => grp_phase_to_sincos_wLUT_fu_92_acc,
        ap_return => grp_phase_to_sincos_wLUT_fu_92_ap_return);

    grp_phase_to_sincos_wLUT_fu_101 : component resonator_dds_phase_to_sincos_wLUT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_phase_to_sincos_wLUT_fu_101_ap_start,
        ap_done => grp_phase_to_sincos_wLUT_fu_101_ap_done,
        ap_idle => grp_phase_to_sincos_wLUT_fu_101_ap_idle,
        ap_ready => grp_phase_to_sincos_wLUT_fu_101_ap_ready,
        ap_ce => grp_phase_to_sincos_wLUT_fu_101_ap_ce,
        acc => grp_phase_to_sincos_wLUT_fu_101_acc,
        ap_return => grp_phase_to_sincos_wLUT_fu_101_ap_return);

    grp_phase_to_sincos_wLUT_fu_110 : component resonator_dds_phase_to_sincos_wLUT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_phase_to_sincos_wLUT_fu_110_ap_start,
        ap_done => grp_phase_to_sincos_wLUT_fu_110_ap_done,
        ap_idle => grp_phase_to_sincos_wLUT_fu_110_ap_idle,
        ap_ready => grp_phase_to_sincos_wLUT_fu_110_ap_ready,
        ap_ce => grp_phase_to_sincos_wLUT_fu_110_ap_ce,
        acc => grp_phase_to_sincos_wLUT_fu_110_acc,
        ap_return => grp_phase_to_sincos_wLUT_fu_110_ap_return);

    grp_phase_to_sincos_wLUT_fu_119 : component resonator_dds_phase_to_sincos_wLUT
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_phase_to_sincos_wLUT_fu_119_ap_start,
        ap_done => grp_phase_to_sincos_wLUT_fu_119_ap_done,
        ap_idle => grp_phase_to_sincos_wLUT_fu_119_ap_idle,
        ap_ready => grp_phase_to_sincos_wLUT_fu_119_ap_ready,
        ap_ce => grp_phase_to_sincos_wLUT_fu_119_ap_ce,
        acc => grp_phase_to_sincos_wLUT_fu_119_acc,
        ap_return => grp_phase_to_sincos_wLUT_fu_119_ap_return);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp18_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp18 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp20_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp20 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp22_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp22 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp24_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp24 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp26_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp26 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp28_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp28 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp30_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp30 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp32_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp32 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call11_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call11 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call13_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call13 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call15_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call15 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call17_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call17 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call3_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call3 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call5_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call5 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call7_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call7 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call9_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call9 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter14, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14)
    begin
        if (((ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to13_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13)
    begin
        if (((ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to13 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to13 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to13)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to13 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= (((((((grp_phase_to_sincos_wLUT_fu_119_ap_return & grp_phase_to_sincos_wLUT_fu_110_ap_return) & grp_phase_to_sincos_wLUT_fu_101_ap_return) & grp_phase_to_sincos_wLUT_fu_92_ap_return) & grp_phase_to_sincos_wLUT_fu_83_ap_return) & grp_phase_to_sincos_wLUT_fu_74_ap_return) & grp_phase_to_sincos_wLUT_fu_65_ap_return) & grp_phase_to_sincos_wLUT_fu_56_ap_return);
    grp_phase_to_sincos_wLUT_fu_101_acc <= accg(131 downto 110);

    grp_phase_to_sincos_wLUT_fu_101_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp28)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp28) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_phase_to_sincos_wLUT_fu_101_ap_ce <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_101_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_phase_to_sincos_wLUT_fu_101_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_phase_to_sincos_wLUT_fu_101_ap_start <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_101_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_phase_to_sincos_wLUT_fu_110_acc <= accg(153 downto 132);

    grp_phase_to_sincos_wLUT_fu_110_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp30)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp30) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_phase_to_sincos_wLUT_fu_110_ap_ce <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_110_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_phase_to_sincos_wLUT_fu_110_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_phase_to_sincos_wLUT_fu_110_ap_start <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_110_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_phase_to_sincos_wLUT_fu_119_acc <= accg(175 downto 154);

    grp_phase_to_sincos_wLUT_fu_119_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp32)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp32) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_phase_to_sincos_wLUT_fu_119_ap_ce <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_119_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_phase_to_sincos_wLUT_fu_119_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_phase_to_sincos_wLUT_fu_119_ap_start <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_119_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_phase_to_sincos_wLUT_fu_56_acc <= accg(22 - 1 downto 0);

    grp_phase_to_sincos_wLUT_fu_56_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp18)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp18) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_phase_to_sincos_wLUT_fu_56_ap_ce <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_56_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_phase_to_sincos_wLUT_fu_56_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_phase_to_sincos_wLUT_fu_56_ap_start <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_56_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_phase_to_sincos_wLUT_fu_65_acc <= accg(43 downto 22);

    grp_phase_to_sincos_wLUT_fu_65_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp20)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp20) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_phase_to_sincos_wLUT_fu_65_ap_ce <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_65_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_phase_to_sincos_wLUT_fu_65_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_phase_to_sincos_wLUT_fu_65_ap_start <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_65_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_phase_to_sincos_wLUT_fu_74_acc <= accg(65 downto 44);

    grp_phase_to_sincos_wLUT_fu_74_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp22)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp22) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_phase_to_sincos_wLUT_fu_74_ap_ce <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_74_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_phase_to_sincos_wLUT_fu_74_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_phase_to_sincos_wLUT_fu_74_ap_start <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_74_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_phase_to_sincos_wLUT_fu_83_acc <= accg(87 downto 66);

    grp_phase_to_sincos_wLUT_fu_83_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp24)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp24) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_phase_to_sincos_wLUT_fu_83_ap_ce <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_83_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_phase_to_sincos_wLUT_fu_83_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_phase_to_sincos_wLUT_fu_83_ap_start <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_83_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_phase_to_sincos_wLUT_fu_92_acc <= accg(109 downto 88);

    grp_phase_to_sincos_wLUT_fu_92_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001_ignoreCallOp26)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp26) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_phase_to_sincos_wLUT_fu_92_ap_ce <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_92_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_phase_to_sincos_wLUT_fu_92_ap_start_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start = ap_const_logic_1))) then 
            grp_phase_to_sincos_wLUT_fu_92_ap_start <= ap_const_logic_1;
        else 
            grp_phase_to_sincos_wLUT_fu_92_ap_start <= ap_const_logic_0;
        end if; 
    end process;

end behav;

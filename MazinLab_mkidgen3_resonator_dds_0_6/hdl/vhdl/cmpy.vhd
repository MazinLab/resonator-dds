-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity cmpy is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    a_i_V : IN STD_LOGIC_VECTOR (15 downto 0);
    a_q_V : IN STD_LOGIC_VECTOR (15 downto 0);
    b_i_V : IN STD_LOGIC_VECTOR (15 downto 0);
    b_q_V : IN STD_LOGIC_VECTOR (15 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of cmpy is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv16_7FFF : STD_LOGIC_VECTOR (15 downto 0) := "0111111111111111";
    constant ap_const_lv16_8001 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000001";

    signal r_V_fu_76_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal sext_ln1118_fu_80_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_5_fu_84_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_5_reg_459 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1118_1_fu_88_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1118_1_reg_465 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_423_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_9_reg_471 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_429_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_11_reg_476 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_435_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal r_V_12_reg_482 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_441_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_reg_488 : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_reg_488_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_reg_497 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_497_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_497_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1192_fu_105_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of add_ln1192_fu_105_p2 : signal is "no";
    signal add_ln1192_reg_503 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln1192_reg_503_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ret_V_2_fu_109_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_2_reg_511 : STD_LOGIC_VECTOR (32 downto 0);
    signal ret_V_2_reg_511_pp0_iter4_reg : STD_LOGIC_VECTOR (32 downto 0);
    signal p_Result_7_reg_516 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_516_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_7_reg_516_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln412_fu_156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln412_reg_522 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_fu_195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_reg_527 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_17_fu_230_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_17_reg_532 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_17_reg_532_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_6_reg_538 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln790_fu_244_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln790_reg_544 : STD_LOGIC_VECTOR (14 downto 0);
    signal p_Val2_22_fu_273_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_22_reg_549 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Val2_22_reg_549_pp0_iter6_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal p_Result_8_reg_555 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln790_4_fu_287_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln790_4_reg_561 : STD_LOGIC_VECTOR (14 downto 0);
    signal overflow_fu_296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_reg_566 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_fu_311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_reg_572 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_2_fu_321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_2_reg_579 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_4_fu_336_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal underflow_4_reg_585 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal rhs_V_fu_102_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal lhs_V_fu_99_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal trunc_ln412_fu_130_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_123_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_139_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_ln412_2_fu_133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln_fu_148_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln412_1_fu_169_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_162_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_178_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal or_ln412_fu_172_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln412_1_fu_187_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln_fu_201_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_13_fu_214_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_fu_221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_16_fu_210_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln415_fu_226_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_17_fu_257_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_2_fu_264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_21_fu_248_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln415_2_fu_269_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln785_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln790_fu_301_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln783_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln785_2_fu_316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln790_2_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln783_2_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_4_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_355_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_fu_362_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln340_2_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_5_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln340_6_fu_385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_390_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln388_2_fu_397_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_7_fu_368_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln340_8_fu_403_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_423_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_423_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_429_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_435_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_441_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_441_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_423_ce : STD_LOGIC;
    signal grp_fu_429_ce : STD_LOGIC;
    signal grp_fu_435_ce : STD_LOGIC;
    signal grp_fu_441_ce : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;
    signal a_i_V_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal a_q_V_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal b_i_V_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal b_q_V_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_0_int_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_return_1_int_reg : STD_LOGIC_VECTOR (15 downto 0);

    component resonator_dds_mulfYi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component resonator_dds_macg8j IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    resonator_dds_mulfYi_U8 : component resonator_dds_mulfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_423_p0,
        din1 => grp_fu_423_p1,
        ce => grp_fu_423_ce,
        dout => grp_fu_423_p2);

    resonator_dds_mulfYi_U9 : component resonator_dds_mulfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_429_p0,
        din1 => b_q_V_int_reg,
        ce => grp_fu_429_ce,
        dout => grp_fu_429_p2);

    resonator_dds_mulfYi_U10 : component resonator_dds_mulfYi
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_435_p0,
        din1 => a_q_V_int_reg,
        ce => grp_fu_435_ce,
        dout => grp_fu_435_p2);

    resonator_dds_macg8j_U11 : component resonator_dds_macg8j
    generic map (
        ID => 1,
        NUM_STAGE => 3,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_441_p0,
        din1 => grp_fu_441_p1,
        din2 => r_V_9_reg_471,
        ce => grp_fu_441_ce,
        dout => grp_fu_441_p3);





    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                a_i_V_int_reg <= a_i_V;
                a_q_V_int_reg <= a_q_V;
                b_i_V_int_reg <= b_i_V;
                b_q_V_int_reg <= b_q_V;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln1192_reg_503 <= add_ln1192_fu_105_p2;
                add_ln1192_reg_503_pp0_iter4_reg <= add_ln1192_reg_503;
                icmp_ln412_reg_522 <= icmp_ln412_fu_156_p2;
                overflow_2_reg_579 <= overflow_2_fu_321_p2;
                overflow_reg_566 <= overflow_fu_296_p2;
                p_Result_6_reg_538 <= p_Val2_17_fu_230_p2(15 downto 15);
                p_Result_7_reg_516 <= ret_V_2_fu_109_p2(32 downto 32);
                p_Result_7_reg_516_pp0_iter4_reg <= p_Result_7_reg_516;
                p_Result_7_reg_516_pp0_iter5_reg <= p_Result_7_reg_516_pp0_iter4_reg;
                p_Result_8_reg_555 <= p_Val2_22_fu_273_p2(15 downto 15);
                p_Result_s_reg_497 <= grp_fu_441_p3(31 downto 31);
                p_Result_s_reg_497_pp0_iter4_reg <= p_Result_s_reg_497;
                p_Result_s_reg_497_pp0_iter5_reg <= p_Result_s_reg_497_pp0_iter4_reg;
                p_Val2_17_reg_532 <= p_Val2_17_fu_230_p2;
                p_Val2_17_reg_532_pp0_iter6_reg <= p_Val2_17_reg_532;
                p_Val2_22_reg_549 <= p_Val2_22_fu_273_p2;
                p_Val2_22_reg_549_pp0_iter6_reg <= p_Val2_22_reg_549;
                r_V_11_reg_476 <= grp_fu_429_p2;
                r_V_12_reg_482 <= grp_fu_435_p2;
                r_V_5_reg_459 <= r_V_5_fu_84_p1;
                r_V_9_reg_471 <= grp_fu_423_p2;
                r_reg_527 <= r_fu_195_p2;
                ret_V_2_reg_511 <= ret_V_2_fu_109_p2;
                ret_V_2_reg_511_pp0_iter4_reg <= ret_V_2_reg_511;
                ret_V_reg_488 <= grp_fu_441_p3;
                ret_V_reg_488_pp0_iter4_reg <= ret_V_reg_488;
                sext_ln1118_1_reg_465 <= sext_ln1118_1_fu_88_p1;
                trunc_ln790_4_reg_561 <= trunc_ln790_4_fu_287_p1;
                trunc_ln790_reg_544 <= trunc_ln790_fu_244_p1;
                underflow_4_reg_585 <= underflow_4_fu_336_p2;
                underflow_reg_572 <= underflow_fu_311_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_0_int_reg <= select_ln340_7_fu_368_p3;
                ap_return_1_int_reg <= select_ln340_8_fu_403_p3;
            end if;
        end if;
    end process;
    add_ln1192_fu_105_p2 <= std_logic_vector(signed(r_V_11_reg_476) + signed(r_V_12_reg_482));
    and_ln415_2_fu_264_p2 <= (tmp_17_fu_257_p3 and r_reg_527);
    and_ln415_fu_221_p2 <= (tmp_13_fu_214_p3 and icmp_ln412_reg_522);
    and_ln783_2_fu_331_p2 <= (p_Result_8_reg_555 and icmp_ln790_2_fu_326_p2);
    and_ln783_fu_306_p2 <= (p_Result_6_reg_538 and icmp_ln790_fu_301_p2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_0_assign_proc : process(select_ln340_7_fu_368_p3, ap_ce_reg, ap_return_0_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_0 <= ap_return_0_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_0 <= select_ln340_7_fu_368_p3;
        end if; 
    end process;


    ap_return_1_assign_proc : process(select_ln340_8_fu_403_p3, ap_ce_reg, ap_return_1_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return_1 <= ap_return_1_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return_1 <= select_ln340_8_fu_403_p3;
        end if; 
    end process;


    grp_fu_423_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_423_ce <= ap_const_logic_1;
        else 
            grp_fu_423_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_423_p0 <= r_V_fu_76_p1(16 - 1 downto 0);
    grp_fu_423_p1 <= sext_ln1118_fu_80_p1(16 - 1 downto 0);

    grp_fu_429_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_429_ce <= ap_const_logic_1;
        else 
            grp_fu_429_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_429_p0 <= r_V_fu_76_p1(16 - 1 downto 0);

    grp_fu_435_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_435_ce <= ap_const_logic_1;
        else 
            grp_fu_435_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_435_p0 <= sext_ln1118_fu_80_p1(16 - 1 downto 0);

    grp_fu_441_ce_assign_proc : process(ap_block_pp0_stage0_11001, ap_ce_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce_reg))) then 
            grp_fu_441_ce <= ap_const_logic_1;
        else 
            grp_fu_441_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_441_p0 <= r_V_5_reg_459(16 - 1 downto 0);
    grp_fu_441_p1 <= sext_ln1118_1_reg_465(16 - 1 downto 0);
    icmp_ln412_fu_156_p2 <= "0" when (or_ln_fu_148_p3 = ap_const_lv16_0) else "1";
    icmp_ln790_2_fu_326_p2 <= "1" when (trunc_ln790_4_reg_561 = ap_const_lv15_0) else "0";
    icmp_ln790_fu_301_p2 <= "1" when (trunc_ln790_reg_544 = ap_const_lv15_0) else "0";
        lhs_V_fu_99_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_11_reg_476),33));

    or_ln340_4_fu_350_p2 <= (xor_ln340_fu_345_p2 or overflow_reg_566);
    or_ln340_5_fu_376_p2 <= (underflow_4_reg_585 or overflow_2_reg_579);
    or_ln340_6_fu_385_p2 <= (xor_ln340_2_fu_380_p2 or overflow_2_reg_579);
    or_ln340_fu_341_p2 <= (underflow_reg_572 or overflow_reg_566);
    or_ln412_1_fu_187_p3 <= (tmp_3_fu_178_p4 & or_ln412_fu_172_p2);
    or_ln412_2_fu_133_p2 <= (trunc_ln412_fu_130_p1 or tmp_fu_123_p3);
    or_ln412_fu_172_p2 <= (trunc_ln412_1_fu_169_p1 or tmp_16_fu_162_p3);
    or_ln_fu_148_p3 <= (tmp_2_fu_139_p4 & or_ln412_2_fu_133_p2);
    overflow_2_fu_321_p2 <= (xor_ln785_2_fu_316_p2 and p_Result_8_reg_555);
    overflow_fu_296_p2 <= (xor_ln785_fu_291_p2 and p_Result_6_reg_538);
        p_Val2_16_fu_210_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_201_p4),16));

    p_Val2_17_fu_230_p2 <= std_logic_vector(signed(p_Val2_16_fu_210_p1) + signed(zext_ln415_fu_226_p1));
    p_Val2_21_fu_248_p4 <= ret_V_2_reg_511_pp0_iter4_reg(32 downto 17);
    p_Val2_22_fu_273_p2 <= std_logic_vector(unsigned(p_Val2_21_fu_248_p4) + unsigned(zext_ln415_2_fu_269_p1));
        r_V_5_fu_84_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a_q_V_int_reg),32));

        r_V_fu_76_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(a_i_V_int_reg),32));

    r_fu_195_p2 <= "0" when (or_ln412_1_fu_187_p3 = ap_const_lv16_0) else "1";
    ret_V_2_fu_109_p2 <= std_logic_vector(signed(rhs_V_fu_102_p1) + signed(lhs_V_fu_99_p1));
        rhs_V_fu_102_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(r_V_12_reg_482),33));

    select_ln340_6_fu_390_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_5_fu_376_p2(0) = '1') else 
        p_Val2_22_reg_549_pp0_iter6_reg;
    select_ln340_7_fu_368_p3 <= 
        select_ln340_fu_355_p3 when (or_ln340_4_fu_350_p2(0) = '1') else 
        select_ln388_fu_362_p3;
    select_ln340_8_fu_403_p3 <= 
        select_ln340_6_fu_390_p3 when (or_ln340_6_fu_385_p2(0) = '1') else 
        select_ln388_2_fu_397_p3;
    select_ln340_fu_355_p3 <= 
        ap_const_lv16_7FFF when (or_ln340_fu_341_p2(0) = '1') else 
        p_Val2_17_reg_532_pp0_iter6_reg;
    select_ln388_2_fu_397_p3 <= 
        ap_const_lv16_8001 when (underflow_4_reg_585(0) = '1') else 
        p_Val2_22_reg_549_pp0_iter6_reg;
    select_ln388_fu_362_p3 <= 
        ap_const_lv16_8001 when (underflow_reg_572(0) = '1') else 
        p_Val2_17_reg_532_pp0_iter6_reg;
        sext_ln1118_1_fu_88_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_q_V_int_reg),32));

        sext_ln1118_fu_80_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(b_i_V_int_reg),32));

    tmp_13_fu_214_p3 <= ret_V_reg_488_pp0_iter4_reg(16 downto 16);
    tmp_16_fu_162_p3 <= add_ln1192_reg_503(17 downto 17);
    tmp_17_fu_257_p3 <= add_ln1192_reg_503_pp0_iter4_reg(16 downto 16);
    tmp_2_fu_139_p4 <= ret_V_reg_488(15 downto 1);
    tmp_3_fu_178_p4 <= add_ln1192_reg_503(15 downto 1);
    tmp_fu_123_p3 <= ret_V_reg_488(17 downto 17);
    trunc_ln412_1_fu_169_p1 <= add_ln1192_reg_503(1 - 1 downto 0);
    trunc_ln412_fu_130_p1 <= ret_V_reg_488(1 - 1 downto 0);
    trunc_ln790_4_fu_287_p1 <= p_Val2_22_fu_273_p2(15 - 1 downto 0);
    trunc_ln790_fu_244_p1 <= p_Val2_17_fu_230_p2(15 - 1 downto 0);
    trunc_ln_fu_201_p4 <= ret_V_reg_488_pp0_iter4_reg(31 downto 17);
    underflow_4_fu_336_p2 <= (p_Result_7_reg_516_pp0_iter5_reg and and_ln783_2_fu_331_p2);
    underflow_fu_311_p2 <= (p_Result_s_reg_497_pp0_iter5_reg and and_ln783_fu_306_p2);
    xor_ln340_2_fu_380_p2 <= (underflow_4_reg_585 xor ap_const_lv1_1);
    xor_ln340_fu_345_p2 <= (underflow_reg_572 xor ap_const_lv1_1);
    xor_ln785_2_fu_316_p2 <= (p_Result_7_reg_516_pp0_iter5_reg xor ap_const_lv1_1);
    xor_ln785_fu_291_p2 <= (p_Result_s_reg_497_pp0_iter5_reg xor ap_const_lv1_1);
    zext_ln415_2_fu_269_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_2_fu_264_p2),16));
    zext_ln415_fu_226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_fu_221_p2),16));
end behav;

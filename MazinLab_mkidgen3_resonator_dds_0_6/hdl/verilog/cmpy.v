// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cmpy (
        ap_clk,
        ap_rst,
        a_i_V,
        a_q_V,
        b_i_V,
        b_q_V,
        ap_return_0,
        ap_return_1,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] a_i_V;
input  [15:0] a_q_V;
input  [15:0] b_i_V;
input  [15:0] b_q_V;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
input   ap_ce;

reg[15:0] ap_return_0;
reg[15:0] ap_return_1;

wire  signed [31:0] r_V_fu_76_p1;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
wire  signed [31:0] sext_ln1118_fu_80_p1;
wire  signed [31:0] r_V_5_fu_84_p1;
reg  signed [31:0] r_V_5_reg_459;
wire  signed [31:0] sext_ln1118_1_fu_88_p1;
reg  signed [31:0] sext_ln1118_1_reg_465;
wire  signed [31:0] grp_fu_423_p2;
reg  signed [31:0] r_V_9_reg_471;
wire  signed [31:0] grp_fu_429_p2;
reg  signed [31:0] r_V_11_reg_476;
wire  signed [31:0] grp_fu_435_p2;
reg  signed [31:0] r_V_12_reg_482;
wire  signed [31:0] grp_fu_441_p3;
reg  signed [31:0] ret_V_reg_488;
reg  signed [31:0] ret_V_reg_488_pp0_iter4_reg;
reg   [0:0] p_Result_s_reg_497;
reg   [0:0] p_Result_s_reg_497_pp0_iter4_reg;
reg   [0:0] p_Result_s_reg_497_pp0_iter5_reg;
(* use_dsp48 = "no" *) wire   [31:0] add_ln1192_fu_105_p2;
reg   [31:0] add_ln1192_reg_503;
reg   [31:0] add_ln1192_reg_503_pp0_iter4_reg;
wire   [32:0] ret_V_2_fu_109_p2;
reg   [32:0] ret_V_2_reg_511;
reg   [32:0] ret_V_2_reg_511_pp0_iter4_reg;
reg   [0:0] p_Result_7_reg_516;
reg   [0:0] p_Result_7_reg_516_pp0_iter4_reg;
reg   [0:0] p_Result_7_reg_516_pp0_iter5_reg;
wire   [0:0] icmp_ln412_fu_156_p2;
reg   [0:0] icmp_ln412_reg_522;
wire   [0:0] r_fu_195_p2;
reg   [0:0] r_reg_527;
wire   [15:0] p_Val2_17_fu_230_p2;
reg   [15:0] p_Val2_17_reg_532;
reg   [15:0] p_Val2_17_reg_532_pp0_iter6_reg;
reg   [0:0] p_Result_6_reg_538;
wire   [14:0] trunc_ln790_fu_244_p1;
reg   [14:0] trunc_ln790_reg_544;
wire   [15:0] p_Val2_22_fu_273_p2;
reg   [15:0] p_Val2_22_reg_549;
reg   [15:0] p_Val2_22_reg_549_pp0_iter6_reg;
reg   [0:0] p_Result_8_reg_555;
wire   [14:0] trunc_ln790_4_fu_287_p1;
reg   [14:0] trunc_ln790_4_reg_561;
wire   [0:0] overflow_fu_296_p2;
reg   [0:0] overflow_reg_566;
wire   [0:0] underflow_fu_311_p2;
reg   [0:0] underflow_reg_572;
wire   [0:0] overflow_2_fu_321_p2;
reg   [0:0] overflow_2_reg_579;
wire   [0:0] underflow_4_fu_336_p2;
reg   [0:0] underflow_4_reg_585;
wire    ap_block_pp0_stage0;
wire  signed [32:0] rhs_V_fu_102_p1;
wire  signed [32:0] lhs_V_fu_99_p1;
wire   [0:0] trunc_ln412_fu_130_p1;
wire   [0:0] tmp_fu_123_p3;
wire   [14:0] tmp_2_fu_139_p4;
wire   [0:0] or_ln412_2_fu_133_p2;
wire   [15:0] or_ln_fu_148_p3;
wire   [0:0] trunc_ln412_1_fu_169_p1;
wire   [0:0] tmp_16_fu_162_p3;
wire   [14:0] tmp_3_fu_178_p4;
wire   [0:0] or_ln412_fu_172_p2;
wire   [15:0] or_ln412_1_fu_187_p3;
wire   [14:0] trunc_ln_fu_201_p4;
wire   [0:0] tmp_13_fu_214_p3;
wire   [0:0] and_ln415_fu_221_p2;
wire  signed [15:0] p_Val2_16_fu_210_p1;
wire   [15:0] zext_ln415_fu_226_p1;
wire   [0:0] tmp_17_fu_257_p3;
wire   [0:0] and_ln415_2_fu_264_p2;
wire   [15:0] p_Val2_21_fu_248_p4;
wire   [15:0] zext_ln415_2_fu_269_p1;
wire   [0:0] xor_ln785_fu_291_p2;
wire   [0:0] icmp_ln790_fu_301_p2;
wire   [0:0] and_ln783_fu_306_p2;
wire   [0:0] xor_ln785_2_fu_316_p2;
wire   [0:0] icmp_ln790_2_fu_326_p2;
wire   [0:0] and_ln783_2_fu_331_p2;
wire   [0:0] xor_ln340_fu_345_p2;
wire   [0:0] or_ln340_fu_341_p2;
wire   [0:0] or_ln340_4_fu_350_p2;
wire   [15:0] select_ln340_fu_355_p3;
wire   [15:0] select_ln388_fu_362_p3;
wire   [0:0] xor_ln340_2_fu_380_p2;
wire   [0:0] or_ln340_5_fu_376_p2;
wire   [0:0] or_ln340_6_fu_385_p2;
wire   [15:0] select_ln340_6_fu_390_p3;
wire   [15:0] select_ln388_2_fu_397_p3;
wire   [15:0] select_ln340_7_fu_368_p3;
wire   [15:0] select_ln340_8_fu_403_p3;
wire  signed [15:0] grp_fu_423_p0;
wire  signed [15:0] grp_fu_423_p1;
wire  signed [15:0] grp_fu_429_p0;
wire  signed [15:0] grp_fu_435_p0;
wire  signed [15:0] grp_fu_441_p0;
wire  signed [15:0] grp_fu_441_p1;
reg    grp_fu_423_ce;
reg    grp_fu_429_ce;
reg    grp_fu_435_ce;
reg    grp_fu_441_ce;
reg    ap_ce_reg;
reg   [15:0] a_i_V_int_reg;
reg  signed [15:0] a_q_V_int_reg;
reg   [15:0] b_i_V_int_reg;
reg  signed [15:0] b_q_V_int_reg;
reg   [15:0] ap_return_0_int_reg;
reg   [15:0] ap_return_1_int_reg;

resonator_dds_mulfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
resonator_dds_mulfYi_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_423_p0),
    .din1(grp_fu_423_p1),
    .ce(grp_fu_423_ce),
    .dout(grp_fu_423_p2)
);

resonator_dds_mulfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
resonator_dds_mulfYi_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_429_p0),
    .din1(b_q_V_int_reg),
    .ce(grp_fu_429_ce),
    .dout(grp_fu_429_p2)
);

resonator_dds_mulfYi #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
resonator_dds_mulfYi_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_435_p0),
    .din1(a_q_V_int_reg),
    .ce(grp_fu_435_ce),
    .dout(grp_fu_435_p2)
);

resonator_dds_macg8j #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
resonator_dds_macg8j_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_441_p0),
    .din1(grp_fu_441_p1),
    .din2(r_V_9_reg_471),
    .ce(grp_fu_441_ce),
    .dout(grp_fu_441_p3)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        a_i_V_int_reg <= a_i_V;
        a_q_V_int_reg <= a_q_V;
        b_i_V_int_reg <= b_i_V;
        b_q_V_int_reg <= b_q_V;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1192_reg_503 <= add_ln1192_fu_105_p2;
        add_ln1192_reg_503_pp0_iter4_reg <= add_ln1192_reg_503;
        icmp_ln412_reg_522 <= icmp_ln412_fu_156_p2;
        overflow_2_reg_579 <= overflow_2_fu_321_p2;
        overflow_reg_566 <= overflow_fu_296_p2;
        p_Result_6_reg_538 <= p_Val2_17_fu_230_p2[32'd15];
        p_Result_7_reg_516 <= ret_V_2_fu_109_p2[32'd32];
        p_Result_7_reg_516_pp0_iter4_reg <= p_Result_7_reg_516;
        p_Result_7_reg_516_pp0_iter5_reg <= p_Result_7_reg_516_pp0_iter4_reg;
        p_Result_8_reg_555 <= p_Val2_22_fu_273_p2[32'd15];
        p_Result_s_reg_497 <= grp_fu_441_p3[32'd31];
        p_Result_s_reg_497_pp0_iter4_reg <= p_Result_s_reg_497;
        p_Result_s_reg_497_pp0_iter5_reg <= p_Result_s_reg_497_pp0_iter4_reg;
        p_Val2_17_reg_532 <= p_Val2_17_fu_230_p2;
        p_Val2_17_reg_532_pp0_iter6_reg <= p_Val2_17_reg_532;
        p_Val2_22_reg_549 <= p_Val2_22_fu_273_p2;
        p_Val2_22_reg_549_pp0_iter6_reg <= p_Val2_22_reg_549;
        r_V_11_reg_476 <= grp_fu_429_p2;
        r_V_12_reg_482 <= grp_fu_435_p2;
        r_V_5_reg_459 <= r_V_5_fu_84_p1;
        r_V_9_reg_471 <= grp_fu_423_p2;
        r_reg_527 <= r_fu_195_p2;
        ret_V_2_reg_511 <= ret_V_2_fu_109_p2;
        ret_V_2_reg_511_pp0_iter4_reg <= ret_V_2_reg_511;
        ret_V_reg_488 <= grp_fu_441_p3;
        ret_V_reg_488_pp0_iter4_reg <= ret_V_reg_488;
        sext_ln1118_1_reg_465 <= sext_ln1118_1_fu_88_p1;
        trunc_ln790_4_reg_561 <= trunc_ln790_4_fu_287_p1;
        trunc_ln790_reg_544 <= trunc_ln790_fu_244_p1;
        underflow_4_reg_585 <= underflow_4_fu_336_p2;
        underflow_reg_572 <= underflow_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= select_ln340_7_fu_368_p3;
        ap_return_1_int_reg <= select_ln340_8_fu_403_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = select_ln340_7_fu_368_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = select_ln340_8_fu_403_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_423_ce = 1'b1;
    end else begin
        grp_fu_423_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_429_ce = 1'b1;
    end else begin
        grp_fu_429_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_435_ce = 1'b1;
    end else begin
        grp_fu_435_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_441_ce = 1'b1;
    end else begin
        grp_fu_441_ce = 1'b0;
    end
end

assign add_ln1192_fu_105_p2 = ($signed(r_V_11_reg_476) + $signed(r_V_12_reg_482));

assign and_ln415_2_fu_264_p2 = (tmp_17_fu_257_p3 & r_reg_527);

assign and_ln415_fu_221_p2 = (tmp_13_fu_214_p3 & icmp_ln412_reg_522);

assign and_ln783_2_fu_331_p2 = (p_Result_8_reg_555 & icmp_ln790_2_fu_326_p2);

assign and_ln783_fu_306_p2 = (p_Result_6_reg_538 & icmp_ln790_fu_301_p2);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign grp_fu_423_p0 = r_V_fu_76_p1;

assign grp_fu_423_p1 = sext_ln1118_fu_80_p1;

assign grp_fu_429_p0 = r_V_fu_76_p1;

assign grp_fu_435_p0 = sext_ln1118_fu_80_p1;

assign grp_fu_441_p0 = r_V_5_reg_459;

assign grp_fu_441_p1 = sext_ln1118_1_reg_465;

assign icmp_ln412_fu_156_p2 = ((or_ln_fu_148_p3 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln790_2_fu_326_p2 = ((trunc_ln790_4_reg_561 == 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln790_fu_301_p2 = ((trunc_ln790_reg_544 == 15'd0) ? 1'b1 : 1'b0);

assign lhs_V_fu_99_p1 = r_V_11_reg_476;

assign or_ln340_4_fu_350_p2 = (xor_ln340_fu_345_p2 | overflow_reg_566);

assign or_ln340_5_fu_376_p2 = (underflow_4_reg_585 | overflow_2_reg_579);

assign or_ln340_6_fu_385_p2 = (xor_ln340_2_fu_380_p2 | overflow_2_reg_579);

assign or_ln340_fu_341_p2 = (underflow_reg_572 | overflow_reg_566);

assign or_ln412_1_fu_187_p3 = {{tmp_3_fu_178_p4}, {or_ln412_fu_172_p2}};

assign or_ln412_2_fu_133_p2 = (trunc_ln412_fu_130_p1 | tmp_fu_123_p3);

assign or_ln412_fu_172_p2 = (trunc_ln412_1_fu_169_p1 | tmp_16_fu_162_p3);

assign or_ln_fu_148_p3 = {{tmp_2_fu_139_p4}, {or_ln412_2_fu_133_p2}};

assign overflow_2_fu_321_p2 = (xor_ln785_2_fu_316_p2 & p_Result_8_reg_555);

assign overflow_fu_296_p2 = (xor_ln785_fu_291_p2 & p_Result_6_reg_538);

assign p_Val2_16_fu_210_p1 = $signed(trunc_ln_fu_201_p4);

assign p_Val2_17_fu_230_p2 = ($signed(p_Val2_16_fu_210_p1) + $signed(zext_ln415_fu_226_p1));

assign p_Val2_21_fu_248_p4 = {{ret_V_2_reg_511_pp0_iter4_reg[32:17]}};

assign p_Val2_22_fu_273_p2 = (p_Val2_21_fu_248_p4 + zext_ln415_2_fu_269_p1);

assign r_V_5_fu_84_p1 = a_q_V_int_reg;

assign r_V_fu_76_p1 = $signed(a_i_V_int_reg);

assign r_fu_195_p2 = ((or_ln412_1_fu_187_p3 != 16'd0) ? 1'b1 : 1'b0);

assign ret_V_2_fu_109_p2 = ($signed(rhs_V_fu_102_p1) + $signed(lhs_V_fu_99_p1));

assign rhs_V_fu_102_p1 = r_V_12_reg_482;

assign select_ln340_6_fu_390_p3 = ((or_ln340_5_fu_376_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_22_reg_549_pp0_iter6_reg);

assign select_ln340_7_fu_368_p3 = ((or_ln340_4_fu_350_p2[0:0] === 1'b1) ? select_ln340_fu_355_p3 : select_ln388_fu_362_p3);

assign select_ln340_8_fu_403_p3 = ((or_ln340_6_fu_385_p2[0:0] === 1'b1) ? select_ln340_6_fu_390_p3 : select_ln388_2_fu_397_p3);

assign select_ln340_fu_355_p3 = ((or_ln340_fu_341_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_17_reg_532_pp0_iter6_reg);

assign select_ln388_2_fu_397_p3 = ((underflow_4_reg_585[0:0] === 1'b1) ? 16'd32769 : p_Val2_22_reg_549_pp0_iter6_reg);

assign select_ln388_fu_362_p3 = ((underflow_reg_572[0:0] === 1'b1) ? 16'd32769 : p_Val2_17_reg_532_pp0_iter6_reg);

assign sext_ln1118_1_fu_88_p1 = b_q_V_int_reg;

assign sext_ln1118_fu_80_p1 = $signed(b_i_V_int_reg);

assign tmp_13_fu_214_p3 = ret_V_reg_488_pp0_iter4_reg[32'd16];

assign tmp_16_fu_162_p3 = add_ln1192_reg_503[32'd17];

assign tmp_17_fu_257_p3 = add_ln1192_reg_503_pp0_iter4_reg[32'd16];

assign tmp_2_fu_139_p4 = {{ret_V_reg_488[15:1]}};

assign tmp_3_fu_178_p4 = {{add_ln1192_reg_503[15:1]}};

assign tmp_fu_123_p3 = ret_V_reg_488[32'd17];

assign trunc_ln412_1_fu_169_p1 = add_ln1192_reg_503[0:0];

assign trunc_ln412_fu_130_p1 = ret_V_reg_488[0:0];

assign trunc_ln790_4_fu_287_p1 = p_Val2_22_fu_273_p2[14:0];

assign trunc_ln790_fu_244_p1 = p_Val2_17_fu_230_p2[14:0];

assign trunc_ln_fu_201_p4 = {{ret_V_reg_488_pp0_iter4_reg[31:17]}};

assign underflow_4_fu_336_p2 = (p_Result_7_reg_516_pp0_iter5_reg & and_ln783_2_fu_331_p2);

assign underflow_fu_311_p2 = (p_Result_s_reg_497_pp0_iter5_reg & and_ln783_fu_306_p2);

assign xor_ln340_2_fu_380_p2 = (underflow_4_reg_585 ^ 1'd1);

assign xor_ln340_fu_345_p2 = (underflow_reg_572 ^ 1'd1);

assign xor_ln785_2_fu_316_p2 = (p_Result_7_reg_516_pp0_iter5_reg ^ 1'd1);

assign xor_ln785_fu_291_p2 = (p_Result_s_reg_497_pp0_iter5_reg ^ 1'd1);

assign zext_ln415_2_fu_269_p1 = and_ln415_2_fu_264_p2;

assign zext_ln415_fu_226_p1 = and_ln415_fu_221_p2;

endmodule //cmpy

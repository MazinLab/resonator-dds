-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity resonator_dds is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    res_in_TDATA : IN STD_LOGIC_VECTOR (255 downto 0);
    res_in_TVALID : IN STD_LOGIC;
    res_in_TREADY : OUT STD_LOGIC;
    res_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    res_out_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    res_out_TVALID : OUT STD_LOGIC;
    res_out_TREADY : IN STD_LOGIC;
    res_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    res_out_TUSER : OUT STD_LOGIC_VECTOR (7 downto 0);
    toneinc_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    toneinc_V_ce0 : OUT STD_LOGIC;
    toneinc_V_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
    phase0_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    phase0_V_ce0 : OUT STD_LOGIC;
    phase0_V_q0 : IN STD_LOGIC_VECTOR (127 downto 0) );
end;


architecture behav of resonator_dds is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "resonator_dds,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=1.818000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.818000,HLS_SYN_LAT=31,HLS_SYN_TPT=1,HLS_SYN_MEM=21,HLS_SYN_DSP=40,HLS_SYN_FF=25651,HLS_SYN_LUT=17283,HLS_VERSION=2019_2_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal grp_fetch_tones_fu_205_res_in_TDATA_blk_n : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter29 : BOOLEAN;
    signal grp_downconvert_fu_105_res_out_TDATA_blk_n : STD_LOGIC;
    signal ap_block_state31_pp0_stage0_iter30 : BOOLEAN;
    signal regslice_both_res_out_data_iq_U_apdone_blk : STD_LOGIC;
    signal ap_block_state32_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal group_V : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal res_in_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal res_out_TDATA_blk_n : STD_LOGIC;
    signal t_V_reg_598 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_reg_598_pp0_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal resdat_last_V_reg_606 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_8_reg_611 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_08_1_reg_616 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_08_2_reg_621 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_08_3_reg_626 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_08_4_reg_631 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_08_5_reg_636 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_08_6_reg_641 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_08_7_reg_646 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_9_reg_651 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_19_1_reg_656 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_19_2_reg_661 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_19_3_reg_666 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_19_4_reg_671 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_19_5_reg_676 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_19_6_reg_681 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_19_7_reg_686 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_reg_691 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_1_reg_696 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_2_reg_701 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_3_reg_706 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_4_reg_711 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_5_reg_716 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_6_reg_721 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_0_7_reg_726 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_1_reg_731 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_1_1_reg_736 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_1_2_reg_741 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_1_3_reg_746 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_1_4_reg_751 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_1_5_reg_756 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_1_6_reg_761 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_0_1_7_reg_766 : STD_LOGIC_VECTOR (15 downto 0);
    signal resdatB_last_V_reg_771 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_s_reg_776 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_1_reg_781 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_2_reg_786 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_3_reg_791 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_4_reg_796 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_5_reg_801 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_6_reg_806 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_7_reg_811 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_12_reg_816 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_04_0_1_reg_821 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_04_0_2_reg_826 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_04_0_3_reg_831 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_04_0_4_reg_836 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_04_0_5_reg_841 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_04_0_6_reg_846 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_04_0_7_reg_851 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_04_1_reg_856 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_04_1_1_reg_861 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_04_1_2_reg_866 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_04_1_3_reg_871 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_04_1_4_reg_876 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_04_1_5_reg_881 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_04_1_6_reg_886 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_04_1_7_reg_891 : STD_LOGIC_VECTOR (15 downto 0);
    signal resdatC_last_V_reg_896 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_10_reg_901 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_016_1_reg_906 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_016_2_reg_911 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_016_3_reg_916 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_016_4_reg_921 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_016_5_reg_926 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_016_6_reg_931 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_016_7_reg_936 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_11_reg_941 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_117_1_reg_946 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_117_2_reg_951 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_117_3_reg_956 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_117_4_reg_961 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_117_5_reg_966 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_117_6_reg_971 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_117_7_reg_976 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_reg_981 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_0_1_reg_986 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_0_2_reg_991 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_0_3_reg_996 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_0_4_reg_1001 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_0_5_reg_1006 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_0_6_reg_1011 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_0_7_reg_1016 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_1_reg_1021 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_1_1_reg_1026 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_1_2_reg_1031 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_1_3_reg_1036 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_1_4_reg_1041 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_1_5_reg_1046 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_1_6_reg_1051 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_06_1_7_reg_1056 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_aphase_to_sincos_fu_72_ap_start : STD_LOGIC;
    signal grp_aphase_to_sincos_fu_72_ap_done : STD_LOGIC;
    signal grp_aphase_to_sincos_fu_72_ap_idle : STD_LOGIC;
    signal grp_aphase_to_sincos_fu_72_ap_ready : STD_LOGIC;
    signal grp_aphase_to_sincos_fu_72_ap_ce : STD_LOGIC;
    signal grp_aphase_to_sincos_fu_72_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_27 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_28 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_29 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_30 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_31 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_aphase_to_sincos_fu_72_ap_return_32 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call74 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call74 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call74 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call74 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call74 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call74 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call74 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call74 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call74 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call74 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call74 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call74 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call74 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call74 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call74 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call74 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16_ignore_call74 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17_ignore_call74 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18_ignore_call74 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19_ignore_call74 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20_ignore_call74 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21_ignore_call74 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22_ignore_call74 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23_ignore_call74 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter24_ignore_call74 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter25_ignore_call74 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter26_ignore_call74 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter27_ignore_call74 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter28_ignore_call74 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter29_ignore_call74 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter30_ignore_call74 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter31_ignore_call74 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp99 : BOOLEAN;
    signal grp_downconvert_fu_105_ap_start : STD_LOGIC;
    signal grp_downconvert_fu_105_ap_done : STD_LOGIC;
    signal grp_downconvert_fu_105_ap_idle : STD_LOGIC;
    signal grp_downconvert_fu_105_ap_ready : STD_LOGIC;
    signal grp_downconvert_fu_105_res_out_TREADY : STD_LOGIC;
    signal grp_downconvert_fu_105_ap_ce : STD_LOGIC;
    signal grp_downconvert_fu_105_res_out_TDATA : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_downconvert_fu_105_res_out_TVALID : STD_LOGIC;
    signal grp_downconvert_fu_105_res_out_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_downconvert_fu_105_res_out_TUSER : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call108 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call108 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call108 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call108 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call108 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call108 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call108 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call108 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call108 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call108 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call108 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call108 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call108 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call108 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call108 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call108 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16_ignore_call108 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17_ignore_call108 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18_ignore_call108 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19_ignore_call108 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20_ignore_call108 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21_ignore_call108 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22_ignore_call108 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23_ignore_call108 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter24_ignore_call108 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter25_ignore_call108 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter26_ignore_call108 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter27_ignore_call108 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter28_ignore_call108 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter29_ignore_call108 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter30_ignore_call108 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter31_ignore_call108 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp146 : BOOLEAN;
    signal grp_increment_phases_fu_149_ap_start : STD_LOGIC;
    signal grp_increment_phases_fu_149_ap_done : STD_LOGIC;
    signal grp_increment_phases_fu_149_ap_idle : STD_LOGIC;
    signal grp_increment_phases_fu_149_ap_ready : STD_LOGIC;
    signal grp_increment_phases_fu_149_ap_ce : STD_LOGIC;
    signal grp_increment_phases_fu_149_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_increment_phases_fu_149_ap_return_1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_increment_phases_fu_149_ap_return_2 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_increment_phases_fu_149_ap_return_3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_increment_phases_fu_149_ap_return_4 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_increment_phases_fu_149_ap_return_5 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_increment_phases_fu_149_ap_return_6 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_increment_phases_fu_149_ap_return_7 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_increment_phases_fu_149_ap_return_8 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_increment_phases_fu_149_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_increment_phases_fu_149_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_increment_phases_fu_149_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_increment_phases_fu_149_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_increment_phases_fu_149_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_increment_phases_fu_149_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_increment_phases_fu_149_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_increment_phases_fu_149_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_increment_phases_fu_149_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_increment_phases_fu_149_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_increment_phases_fu_149_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_increment_phases_fu_149_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_increment_phases_fu_149_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_increment_phases_fu_149_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_increment_phases_fu_149_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_increment_phases_fu_149_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call48 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call48 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call48 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call48 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call48 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call48 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call48 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call48 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call48 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call48 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call48 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call48 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call48 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call48 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call48 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call48 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16_ignore_call48 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17_ignore_call48 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18_ignore_call48 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19_ignore_call48 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20_ignore_call48 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21_ignore_call48 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22_ignore_call48 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23_ignore_call48 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter24_ignore_call48 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter25_ignore_call48 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter26_ignore_call48 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter27_ignore_call48 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter28_ignore_call48 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter29_ignore_call48 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter30_ignore_call48 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter31_ignore_call48 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp71 : BOOLEAN;
    signal grp_fetch_tones_fu_205_ap_start : STD_LOGIC;
    signal grp_fetch_tones_fu_205_ap_done : STD_LOGIC;
    signal grp_fetch_tones_fu_205_ap_idle : STD_LOGIC;
    signal grp_fetch_tones_fu_205_ap_ready : STD_LOGIC;
    signal grp_fetch_tones_fu_205_ap_ce : STD_LOGIC;
    signal grp_fetch_tones_fu_205_res_in_TREADY : STD_LOGIC;
    signal grp_fetch_tones_fu_205_toneinc_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fetch_tones_fu_205_toneinc_V_ce0 : STD_LOGIC;
    signal grp_fetch_tones_fu_205_phase0_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fetch_tones_fu_205_phase0_V_ce0 : STD_LOGIC;
    signal grp_fetch_tones_fu_205_ap_return_0 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_5 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_6 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_7 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_8 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_9 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_10 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_11 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_12 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_13 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_14 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_15 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_16 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_17 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_18 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_19 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_20 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_21 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_22 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_23 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_24 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_25 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_26 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_27 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_28 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_29 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_30 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_31 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fetch_tones_fu_205_ap_return_32 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1_pp0_stage0_iter0_ignore_call14 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1_ignore_call14 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2_ignore_call14 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3_ignore_call14 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4_ignore_call14 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5_ignore_call14 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter6_ignore_call14 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter7_ignore_call14 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter8_ignore_call14 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter9_ignore_call14 : BOOLEAN;
    signal ap_block_state11_pp0_stage0_iter10_ignore_call14 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter11_ignore_call14 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter12_ignore_call14 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter13_ignore_call14 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter14_ignore_call14 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter15_ignore_call14 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter16_ignore_call14 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter17_ignore_call14 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter18_ignore_call14 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter19_ignore_call14 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter20_ignore_call14 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter21_ignore_call14 : BOOLEAN;
    signal ap_block_state23_pp0_stage0_iter22_ignore_call14 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter23_ignore_call14 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter24_ignore_call14 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter25_ignore_call14 : BOOLEAN;
    signal ap_block_state27_pp0_stage0_iter26_ignore_call14 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter27_ignore_call14 : BOOLEAN;
    signal ap_block_state29_pp0_stage0_iter28_ignore_call14 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter29_ignore_call14 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter30_ignore_call14 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter31_ignore_call14 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp34 : BOOLEAN;
    signal grp_aphase_to_sincos_fu_72_ap_start_reg : STD_LOGIC := '0';
    signal grp_downconvert_fu_105_ap_start_reg : STD_LOGIC := '0';
    signal grp_increment_phases_fu_149_ap_start_reg : STD_LOGIC := '0';
    signal grp_fetch_tones_fu_205_ap_start_reg : STD_LOGIC := '0';
    signal add_ln700_fu_355_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_allocacmp_t_V : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to30 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_res_in_data_iq_U_apdone_blk : STD_LOGIC;
    signal res_in_TDATA_int : STD_LOGIC_VECTOR (255 downto 0);
    signal res_in_TVALID_int : STD_LOGIC;
    signal res_in_TREADY_int : STD_LOGIC;
    signal regslice_both_res_in_data_iq_U_ack_in : STD_LOGIC;
    signal regslice_both_res_in_last_V_U_apdone_blk : STD_LOGIC;
    signal res_in_TLAST_int : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_res_in_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_res_in_last_V_U_ack_in : STD_LOGIC;
    signal res_out_TREADY_int : STD_LOGIC;
    signal regslice_both_res_out_data_iq_U_vld_out : STD_LOGIC;
    signal regslice_both_res_out_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_out_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_res_out_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_res_out_user_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_res_out_user_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_res_out_user_V_U_vld_out : STD_LOGIC;

    component aphase_to_sincos IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (21 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (21 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (21 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (21 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (21 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (21 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (21 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (21 downto 0);
        p_read54 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read55 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read56 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read57 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read58 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read59 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read60 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read61 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read62 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read63 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read64 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read65 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read66 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read67 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read68 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read69 : IN STD_LOGIC_VECTOR (15 downto 0);
        dummyout_last_V_writ : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component downconvert IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        res_out_TREADY : IN STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (15 downto 0);
        resdat_last_V : IN STD_LOGIC_VECTOR (0 downto 0);
        p_read16 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read17 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read18 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read19 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read20 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read21 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read22 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read23 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read24 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read25 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read26 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read27 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read28 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read29 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read30 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read31 : IN STD_LOGIC_VECTOR (15 downto 0);
        res_out_TDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
        res_out_TVALID : OUT STD_LOGIC;
        res_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        res_out_TUSER : OUT STD_LOGIC_VECTOR (7 downto 0);
        group_V_4 : IN STD_LOGIC_VECTOR (7 downto 0);
        res_out_TDATA_blk_n : OUT STD_LOGIC );
    end component;


    component increment_phases IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        group_V_2 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read2 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read3 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read12 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read13 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read14 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read15 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read38 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read39 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read40 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read41 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read42 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read43 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read44 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read45 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read46 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read47 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read48 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read49 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read50 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read51 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read52 : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read53 : IN STD_LOGIC_VECTOR (15 downto 0);
        dummyout_last_V_writ : IN STD_LOGIC_VECTOR (0 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (21 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (21 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (21 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (21 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (21 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (21 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (21 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (21 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component fetch_tones IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        res_in_TVALID : IN STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        res_in_TDATA : IN STD_LOGIC_VECTOR (255 downto 0);
        res_in_TREADY : OUT STD_LOGIC;
        res_in_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        toneinc_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        toneinc_V_ce0 : OUT STD_LOGIC;
        toneinc_V_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        phase0_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        phase0_V_ce0 : OUT STD_LOGIC;
        phase0_V_q0 : IN STD_LOGIC_VECTOR (127 downto 0);
        p_group_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (0 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_4 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_5 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_6 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_7 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_8 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_9 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_10 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_11 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_12 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_13 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_14 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_15 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_16 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_17 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_18 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_19 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_20 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_21 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_22 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_23 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_24 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_25 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_26 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_27 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_28 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_29 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_30 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_31 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_32 : OUT STD_LOGIC_VECTOR (15 downto 0);
        res_in_TDATA_blk_n : OUT STD_LOGIC );
    end component;


    component regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_aphase_to_sincos_fu_72 : component aphase_to_sincos
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_aphase_to_sincos_fu_72_ap_start,
        ap_done => grp_aphase_to_sincos_fu_72_ap_done,
        ap_idle => grp_aphase_to_sincos_fu_72_ap_idle,
        ap_ready => grp_aphase_to_sincos_fu_72_ap_ready,
        ap_ce => grp_aphase_to_sincos_fu_72_ap_ce,
        p_read => p_s_reg_776,
        p_read1 => p_1_reg_781,
        p_read2 => p_2_reg_786,
        p_read3 => p_3_reg_791,
        p_read4 => p_4_reg_796,
        p_read5 => p_5_reg_801,
        p_read6 => p_6_reg_806,
        p_read7 => p_7_reg_811,
        p_read54 => p_12_reg_816,
        p_read55 => p_04_0_1_reg_821,
        p_read56 => p_04_0_2_reg_826,
        p_read57 => p_04_0_3_reg_831,
        p_read58 => p_04_0_4_reg_836,
        p_read59 => p_04_0_5_reg_841,
        p_read60 => p_04_0_6_reg_846,
        p_read61 => p_04_0_7_reg_851,
        p_read62 => p_04_1_reg_856,
        p_read63 => p_04_1_1_reg_861,
        p_read64 => p_04_1_2_reg_866,
        p_read65 => p_04_1_3_reg_871,
        p_read66 => p_04_1_4_reg_876,
        p_read67 => p_04_1_5_reg_881,
        p_read68 => p_04_1_6_reg_886,
        p_read69 => p_04_1_7_reg_891,
        dummyout_last_V_writ => resdatB_last_V_reg_771,
        ap_return_0 => grp_aphase_to_sincos_fu_72_ap_return_0,
        ap_return_1 => grp_aphase_to_sincos_fu_72_ap_return_1,
        ap_return_2 => grp_aphase_to_sincos_fu_72_ap_return_2,
        ap_return_3 => grp_aphase_to_sincos_fu_72_ap_return_3,
        ap_return_4 => grp_aphase_to_sincos_fu_72_ap_return_4,
        ap_return_5 => grp_aphase_to_sincos_fu_72_ap_return_5,
        ap_return_6 => grp_aphase_to_sincos_fu_72_ap_return_6,
        ap_return_7 => grp_aphase_to_sincos_fu_72_ap_return_7,
        ap_return_8 => grp_aphase_to_sincos_fu_72_ap_return_8,
        ap_return_9 => grp_aphase_to_sincos_fu_72_ap_return_9,
        ap_return_10 => grp_aphase_to_sincos_fu_72_ap_return_10,
        ap_return_11 => grp_aphase_to_sincos_fu_72_ap_return_11,
        ap_return_12 => grp_aphase_to_sincos_fu_72_ap_return_12,
        ap_return_13 => grp_aphase_to_sincos_fu_72_ap_return_13,
        ap_return_14 => grp_aphase_to_sincos_fu_72_ap_return_14,
        ap_return_15 => grp_aphase_to_sincos_fu_72_ap_return_15,
        ap_return_16 => grp_aphase_to_sincos_fu_72_ap_return_16,
        ap_return_17 => grp_aphase_to_sincos_fu_72_ap_return_17,
        ap_return_18 => grp_aphase_to_sincos_fu_72_ap_return_18,
        ap_return_19 => grp_aphase_to_sincos_fu_72_ap_return_19,
        ap_return_20 => grp_aphase_to_sincos_fu_72_ap_return_20,
        ap_return_21 => grp_aphase_to_sincos_fu_72_ap_return_21,
        ap_return_22 => grp_aphase_to_sincos_fu_72_ap_return_22,
        ap_return_23 => grp_aphase_to_sincos_fu_72_ap_return_23,
        ap_return_24 => grp_aphase_to_sincos_fu_72_ap_return_24,
        ap_return_25 => grp_aphase_to_sincos_fu_72_ap_return_25,
        ap_return_26 => grp_aphase_to_sincos_fu_72_ap_return_26,
        ap_return_27 => grp_aphase_to_sincos_fu_72_ap_return_27,
        ap_return_28 => grp_aphase_to_sincos_fu_72_ap_return_28,
        ap_return_29 => grp_aphase_to_sincos_fu_72_ap_return_29,
        ap_return_30 => grp_aphase_to_sincos_fu_72_ap_return_30,
        ap_return_31 => grp_aphase_to_sincos_fu_72_ap_return_31,
        ap_return_32 => grp_aphase_to_sincos_fu_72_ap_return_32);

    grp_downconvert_fu_105 : component downconvert
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_downconvert_fu_105_ap_start,
        ap_done => grp_downconvert_fu_105_ap_done,
        ap_idle => grp_downconvert_fu_105_ap_idle,
        ap_ready => grp_downconvert_fu_105_ap_ready,
        res_out_TREADY => grp_downconvert_fu_105_res_out_TREADY,
        ap_ce => grp_downconvert_fu_105_ap_ce,
        p_read => p_06_reg_981,
        p_read1 => p_06_0_1_reg_986,
        p_read2 => p_06_0_2_reg_991,
        p_read3 => p_06_0_3_reg_996,
        p_read4 => p_06_0_4_reg_1001,
        p_read5 => p_06_0_5_reg_1006,
        p_read6 => p_06_0_6_reg_1011,
        p_read7 => p_06_0_7_reg_1016,
        p_read8 => p_06_1_reg_1021,
        p_read9 => p_06_1_1_reg_1026,
        p_read10 => p_06_1_2_reg_1031,
        p_read11 => p_06_1_3_reg_1036,
        p_read12 => p_06_1_4_reg_1041,
        p_read13 => p_06_1_5_reg_1046,
        p_read14 => p_06_1_6_reg_1051,
        p_read15 => p_06_1_7_reg_1056,
        resdat_last_V => resdatC_last_V_reg_896,
        p_read16 => p_10_reg_901,
        p_read17 => p_016_1_reg_906,
        p_read18 => p_016_2_reg_911,
        p_read19 => p_016_3_reg_916,
        p_read20 => p_016_4_reg_921,
        p_read21 => p_016_5_reg_926,
        p_read22 => p_016_6_reg_931,
        p_read23 => p_016_7_reg_936,
        p_read24 => p_11_reg_941,
        p_read25 => p_117_1_reg_946,
        p_read26 => p_117_2_reg_951,
        p_read27 => p_117_3_reg_956,
        p_read28 => p_117_4_reg_961,
        p_read29 => p_117_5_reg_966,
        p_read30 => p_117_6_reg_971,
        p_read31 => p_117_7_reg_976,
        res_out_TDATA => grp_downconvert_fu_105_res_out_TDATA,
        res_out_TVALID => grp_downconvert_fu_105_res_out_TVALID,
        res_out_TLAST => grp_downconvert_fu_105_res_out_TLAST,
        res_out_TUSER => grp_downconvert_fu_105_res_out_TUSER,
        group_V_4 => t_V_reg_598_pp0_iter19_reg,
        res_out_TDATA_blk_n => grp_downconvert_fu_105_res_out_TDATA_blk_n);

    grp_increment_phases_fu_149 : component increment_phases
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_increment_phases_fu_149_ap_start,
        ap_done => grp_increment_phases_fu_149_ap_done,
        ap_idle => grp_increment_phases_fu_149_ap_idle,
        ap_ready => grp_increment_phases_fu_149_ap_ready,
        ap_ce => grp_increment_phases_fu_149_ap_ce,
        group_V_2 => t_V_reg_598_pp0_iter2_reg,
        p_read => p_8_reg_611,
        p_read1 => p_08_1_reg_616,
        p_read2 => p_08_2_reg_621,
        p_read3 => p_08_3_reg_626,
        p_read4 => p_08_4_reg_631,
        p_read5 => p_08_5_reg_636,
        p_read6 => p_08_6_reg_641,
        p_read7 => p_08_7_reg_646,
        p_read8 => p_9_reg_651,
        p_read9 => p_19_1_reg_656,
        p_read10 => p_19_2_reg_661,
        p_read11 => p_19_3_reg_666,
        p_read12 => p_19_4_reg_671,
        p_read13 => p_19_5_reg_676,
        p_read14 => p_19_6_reg_681,
        p_read15 => p_19_7_reg_686,
        p_read38 => p_0_reg_691,
        p_read39 => p_0_0_1_reg_696,
        p_read40 => p_0_0_2_reg_701,
        p_read41 => p_0_0_3_reg_706,
        p_read42 => p_0_0_4_reg_711,
        p_read43 => p_0_0_5_reg_716,
        p_read44 => p_0_0_6_reg_721,
        p_read45 => p_0_0_7_reg_726,
        p_read46 => p_0_1_reg_731,
        p_read47 => p_0_1_1_reg_736,
        p_read48 => p_0_1_2_reg_741,
        p_read49 => p_0_1_3_reg_746,
        p_read50 => p_0_1_4_reg_751,
        p_read51 => p_0_1_5_reg_756,
        p_read52 => p_0_1_6_reg_761,
        p_read53 => p_0_1_7_reg_766,
        dummyout_last_V_writ => resdat_last_V_reg_606,
        ap_return_0 => grp_increment_phases_fu_149_ap_return_0,
        ap_return_1 => grp_increment_phases_fu_149_ap_return_1,
        ap_return_2 => grp_increment_phases_fu_149_ap_return_2,
        ap_return_3 => grp_increment_phases_fu_149_ap_return_3,
        ap_return_4 => grp_increment_phases_fu_149_ap_return_4,
        ap_return_5 => grp_increment_phases_fu_149_ap_return_5,
        ap_return_6 => grp_increment_phases_fu_149_ap_return_6,
        ap_return_7 => grp_increment_phases_fu_149_ap_return_7,
        ap_return_8 => grp_increment_phases_fu_149_ap_return_8,
        ap_return_9 => grp_increment_phases_fu_149_ap_return_9,
        ap_return_10 => grp_increment_phases_fu_149_ap_return_10,
        ap_return_11 => grp_increment_phases_fu_149_ap_return_11,
        ap_return_12 => grp_increment_phases_fu_149_ap_return_12,
        ap_return_13 => grp_increment_phases_fu_149_ap_return_13,
        ap_return_14 => grp_increment_phases_fu_149_ap_return_14,
        ap_return_15 => grp_increment_phases_fu_149_ap_return_15,
        ap_return_16 => grp_increment_phases_fu_149_ap_return_16,
        ap_return_17 => grp_increment_phases_fu_149_ap_return_17,
        ap_return_18 => grp_increment_phases_fu_149_ap_return_18,
        ap_return_19 => grp_increment_phases_fu_149_ap_return_19,
        ap_return_20 => grp_increment_phases_fu_149_ap_return_20,
        ap_return_21 => grp_increment_phases_fu_149_ap_return_21,
        ap_return_22 => grp_increment_phases_fu_149_ap_return_22,
        ap_return_23 => grp_increment_phases_fu_149_ap_return_23,
        ap_return_24 => grp_increment_phases_fu_149_ap_return_24);

    grp_fetch_tones_fu_205 : component fetch_tones
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_fetch_tones_fu_205_ap_start,
        ap_done => grp_fetch_tones_fu_205_ap_done,
        ap_idle => grp_fetch_tones_fu_205_ap_idle,
        ap_ready => grp_fetch_tones_fu_205_ap_ready,
        res_in_TVALID => res_in_TVALID_int,
        ap_ce => grp_fetch_tones_fu_205_ap_ce,
        res_in_TDATA => res_in_TDATA_int,
        res_in_TREADY => grp_fetch_tones_fu_205_res_in_TREADY,
        res_in_TLAST => res_in_TLAST_int,
        toneinc_V_address0 => grp_fetch_tones_fu_205_toneinc_V_address0,
        toneinc_V_ce0 => grp_fetch_tones_fu_205_toneinc_V_ce0,
        toneinc_V_q0 => toneinc_V_q0,
        phase0_V_address0 => grp_fetch_tones_fu_205_phase0_V_address0,
        phase0_V_ce0 => grp_fetch_tones_fu_205_phase0_V_ce0,
        phase0_V_q0 => phase0_V_q0,
        p_group_V => ap_sig_allocacmp_t_V,
        ap_return_0 => grp_fetch_tones_fu_205_ap_return_0,
        ap_return_1 => grp_fetch_tones_fu_205_ap_return_1,
        ap_return_2 => grp_fetch_tones_fu_205_ap_return_2,
        ap_return_3 => grp_fetch_tones_fu_205_ap_return_3,
        ap_return_4 => grp_fetch_tones_fu_205_ap_return_4,
        ap_return_5 => grp_fetch_tones_fu_205_ap_return_5,
        ap_return_6 => grp_fetch_tones_fu_205_ap_return_6,
        ap_return_7 => grp_fetch_tones_fu_205_ap_return_7,
        ap_return_8 => grp_fetch_tones_fu_205_ap_return_8,
        ap_return_9 => grp_fetch_tones_fu_205_ap_return_9,
        ap_return_10 => grp_fetch_tones_fu_205_ap_return_10,
        ap_return_11 => grp_fetch_tones_fu_205_ap_return_11,
        ap_return_12 => grp_fetch_tones_fu_205_ap_return_12,
        ap_return_13 => grp_fetch_tones_fu_205_ap_return_13,
        ap_return_14 => grp_fetch_tones_fu_205_ap_return_14,
        ap_return_15 => grp_fetch_tones_fu_205_ap_return_15,
        ap_return_16 => grp_fetch_tones_fu_205_ap_return_16,
        ap_return_17 => grp_fetch_tones_fu_205_ap_return_17,
        ap_return_18 => grp_fetch_tones_fu_205_ap_return_18,
        ap_return_19 => grp_fetch_tones_fu_205_ap_return_19,
        ap_return_20 => grp_fetch_tones_fu_205_ap_return_20,
        ap_return_21 => grp_fetch_tones_fu_205_ap_return_21,
        ap_return_22 => grp_fetch_tones_fu_205_ap_return_22,
        ap_return_23 => grp_fetch_tones_fu_205_ap_return_23,
        ap_return_24 => grp_fetch_tones_fu_205_ap_return_24,
        ap_return_25 => grp_fetch_tones_fu_205_ap_return_25,
        ap_return_26 => grp_fetch_tones_fu_205_ap_return_26,
        ap_return_27 => grp_fetch_tones_fu_205_ap_return_27,
        ap_return_28 => grp_fetch_tones_fu_205_ap_return_28,
        ap_return_29 => grp_fetch_tones_fu_205_ap_return_29,
        ap_return_30 => grp_fetch_tones_fu_205_ap_return_30,
        ap_return_31 => grp_fetch_tones_fu_205_ap_return_31,
        ap_return_32 => grp_fetch_tones_fu_205_ap_return_32,
        res_in_TDATA_blk_n => grp_fetch_tones_fu_205_res_in_TDATA_blk_n);

    regslice_both_res_in_data_iq_U : component regslice_both
    generic map (
        DataWidth => 256)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => res_in_TDATA,
        vld_in => res_in_TVALID,
        ack_in => regslice_both_res_in_data_iq_U_ack_in,
        data_out => res_in_TDATA_int,
        vld_out => res_in_TVALID_int,
        ack_out => res_in_TREADY_int,
        apdone_blk => regslice_both_res_in_data_iq_U_apdone_blk);

    regslice_both_res_in_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => res_in_TLAST,
        vld_in => res_in_TVALID,
        ack_in => regslice_both_res_in_last_V_U_ack_in,
        data_out => res_in_TLAST_int,
        vld_out => regslice_both_res_in_last_V_U_vld_out,
        ack_out => res_in_TREADY_int,
        apdone_blk => regslice_both_res_in_last_V_U_apdone_blk);

    regslice_both_res_out_data_iq_U : component regslice_both
    generic map (
        DataWidth => 256)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_downconvert_fu_105_res_out_TDATA,
        vld_in => grp_downconvert_fu_105_res_out_TVALID,
        ack_in => res_out_TREADY_int,
        data_out => res_out_TDATA,
        vld_out => regslice_both_res_out_data_iq_U_vld_out,
        ack_out => res_out_TREADY,
        apdone_blk => regslice_both_res_out_data_iq_U_apdone_blk);

    regslice_both_res_out_last_V_U : component regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_downconvert_fu_105_res_out_TLAST,
        vld_in => grp_downconvert_fu_105_res_out_TVALID,
        ack_in => regslice_both_res_out_last_V_U_ack_in_dummy,
        data_out => res_out_TLAST,
        vld_out => regslice_both_res_out_last_V_U_vld_out,
        ack_out => res_out_TREADY,
        apdone_blk => regslice_both_res_out_last_V_U_apdone_blk);

    regslice_both_res_out_user_V_U : component regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => grp_downconvert_fu_105_res_out_TUSER,
        vld_in => grp_downconvert_fu_105_res_out_TVALID,
        ack_in => regslice_both_res_out_user_V_U_ack_in_dummy,
        data_out => res_out_TUSER,
        vld_out => regslice_both_res_out_user_V_U_vld_out,
        ack_out => res_out_TREADY,
        apdone_blk => regslice_both_res_out_user_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    grp_aphase_to_sincos_fu_72_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_aphase_to_sincos_fu_72_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_aphase_to_sincos_fu_72_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_aphase_to_sincos_fu_72_ap_ready = ap_const_logic_1)) then 
                    grp_aphase_to_sincos_fu_72_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_downconvert_fu_105_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_downconvert_fu_105_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_downconvert_fu_105_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_downconvert_fu_105_ap_ready = ap_const_logic_1)) then 
                    grp_downconvert_fu_105_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_fetch_tones_fu_205_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_fetch_tones_fu_205_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_fetch_tones_fu_205_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_fetch_tones_fu_205_ap_ready = ap_const_logic_1)) then 
                    grp_fetch_tones_fu_205_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_increment_phases_fu_149_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_increment_phases_fu_149_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    grp_increment_phases_fu_149_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_increment_phases_fu_149_ap_ready = ap_const_logic_1)) then 
                    grp_increment_phases_fu_149_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                group_V <= add_ln700_fu_355_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                p_016_1_reg_906 <= grp_aphase_to_sincos_fu_72_ap_return_2;
                p_016_2_reg_911 <= grp_aphase_to_sincos_fu_72_ap_return_3;
                p_016_3_reg_916 <= grp_aphase_to_sincos_fu_72_ap_return_4;
                p_016_4_reg_921 <= grp_aphase_to_sincos_fu_72_ap_return_5;
                p_016_5_reg_926 <= grp_aphase_to_sincos_fu_72_ap_return_6;
                p_016_6_reg_931 <= grp_aphase_to_sincos_fu_72_ap_return_7;
                p_016_7_reg_936 <= grp_aphase_to_sincos_fu_72_ap_return_8;
                p_04_0_1_reg_821 <= grp_increment_phases_fu_149_ap_return_10;
                p_04_0_2_reg_826 <= grp_increment_phases_fu_149_ap_return_11;
                p_04_0_3_reg_831 <= grp_increment_phases_fu_149_ap_return_12;
                p_04_0_4_reg_836 <= grp_increment_phases_fu_149_ap_return_13;
                p_04_0_5_reg_841 <= grp_increment_phases_fu_149_ap_return_14;
                p_04_0_6_reg_846 <= grp_increment_phases_fu_149_ap_return_15;
                p_04_0_7_reg_851 <= grp_increment_phases_fu_149_ap_return_16;
                p_04_1_1_reg_861 <= grp_increment_phases_fu_149_ap_return_18;
                p_04_1_2_reg_866 <= grp_increment_phases_fu_149_ap_return_19;
                p_04_1_3_reg_871 <= grp_increment_phases_fu_149_ap_return_20;
                p_04_1_4_reg_876 <= grp_increment_phases_fu_149_ap_return_21;
                p_04_1_5_reg_881 <= grp_increment_phases_fu_149_ap_return_22;
                p_04_1_6_reg_886 <= grp_increment_phases_fu_149_ap_return_23;
                p_04_1_7_reg_891 <= grp_increment_phases_fu_149_ap_return_24;
                p_04_1_reg_856 <= grp_increment_phases_fu_149_ap_return_17;
                p_06_0_1_reg_986 <= grp_aphase_to_sincos_fu_72_ap_return_18;
                p_06_0_2_reg_991 <= grp_aphase_to_sincos_fu_72_ap_return_19;
                p_06_0_3_reg_996 <= grp_aphase_to_sincos_fu_72_ap_return_20;
                p_06_0_4_reg_1001 <= grp_aphase_to_sincos_fu_72_ap_return_21;
                p_06_0_5_reg_1006 <= grp_aphase_to_sincos_fu_72_ap_return_22;
                p_06_0_6_reg_1011 <= grp_aphase_to_sincos_fu_72_ap_return_23;
                p_06_0_7_reg_1016 <= grp_aphase_to_sincos_fu_72_ap_return_24;
                p_06_1_1_reg_1026 <= grp_aphase_to_sincos_fu_72_ap_return_26;
                p_06_1_2_reg_1031 <= grp_aphase_to_sincos_fu_72_ap_return_27;
                p_06_1_3_reg_1036 <= grp_aphase_to_sincos_fu_72_ap_return_28;
                p_06_1_4_reg_1041 <= grp_aphase_to_sincos_fu_72_ap_return_29;
                p_06_1_5_reg_1046 <= grp_aphase_to_sincos_fu_72_ap_return_30;
                p_06_1_6_reg_1051 <= grp_aphase_to_sincos_fu_72_ap_return_31;
                p_06_1_7_reg_1056 <= grp_aphase_to_sincos_fu_72_ap_return_32;
                p_06_1_reg_1021 <= grp_aphase_to_sincos_fu_72_ap_return_25;
                p_06_reg_981 <= grp_aphase_to_sincos_fu_72_ap_return_17;
                p_08_1_reg_616 <= grp_fetch_tones_fu_205_ap_return_2;
                p_08_2_reg_621 <= grp_fetch_tones_fu_205_ap_return_3;
                p_08_3_reg_626 <= grp_fetch_tones_fu_205_ap_return_4;
                p_08_4_reg_631 <= grp_fetch_tones_fu_205_ap_return_5;
                p_08_5_reg_636 <= grp_fetch_tones_fu_205_ap_return_6;
                p_08_6_reg_641 <= grp_fetch_tones_fu_205_ap_return_7;
                p_08_7_reg_646 <= grp_fetch_tones_fu_205_ap_return_8;
                p_0_0_1_reg_696 <= grp_fetch_tones_fu_205_ap_return_18;
                p_0_0_2_reg_701 <= grp_fetch_tones_fu_205_ap_return_19;
                p_0_0_3_reg_706 <= grp_fetch_tones_fu_205_ap_return_20;
                p_0_0_4_reg_711 <= grp_fetch_tones_fu_205_ap_return_21;
                p_0_0_5_reg_716 <= grp_fetch_tones_fu_205_ap_return_22;
                p_0_0_6_reg_721 <= grp_fetch_tones_fu_205_ap_return_23;
                p_0_0_7_reg_726 <= grp_fetch_tones_fu_205_ap_return_24;
                p_0_1_1_reg_736 <= grp_fetch_tones_fu_205_ap_return_26;
                p_0_1_2_reg_741 <= grp_fetch_tones_fu_205_ap_return_27;
                p_0_1_3_reg_746 <= grp_fetch_tones_fu_205_ap_return_28;
                p_0_1_4_reg_751 <= grp_fetch_tones_fu_205_ap_return_29;
                p_0_1_5_reg_756 <= grp_fetch_tones_fu_205_ap_return_30;
                p_0_1_6_reg_761 <= grp_fetch_tones_fu_205_ap_return_31;
                p_0_1_7_reg_766 <= grp_fetch_tones_fu_205_ap_return_32;
                p_0_1_reg_731 <= grp_fetch_tones_fu_205_ap_return_25;
                p_0_reg_691 <= grp_fetch_tones_fu_205_ap_return_17;
                p_10_reg_901 <= grp_aphase_to_sincos_fu_72_ap_return_1;
                p_117_1_reg_946 <= grp_aphase_to_sincos_fu_72_ap_return_10;
                p_117_2_reg_951 <= grp_aphase_to_sincos_fu_72_ap_return_11;
                p_117_3_reg_956 <= grp_aphase_to_sincos_fu_72_ap_return_12;
                p_117_4_reg_961 <= grp_aphase_to_sincos_fu_72_ap_return_13;
                p_117_5_reg_966 <= grp_aphase_to_sincos_fu_72_ap_return_14;
                p_117_6_reg_971 <= grp_aphase_to_sincos_fu_72_ap_return_15;
                p_117_7_reg_976 <= grp_aphase_to_sincos_fu_72_ap_return_16;
                p_11_reg_941 <= grp_aphase_to_sincos_fu_72_ap_return_9;
                p_12_reg_816 <= grp_increment_phases_fu_149_ap_return_9;
                p_19_1_reg_656 <= grp_fetch_tones_fu_205_ap_return_10;
                p_19_2_reg_661 <= grp_fetch_tones_fu_205_ap_return_11;
                p_19_3_reg_666 <= grp_fetch_tones_fu_205_ap_return_12;
                p_19_4_reg_671 <= grp_fetch_tones_fu_205_ap_return_13;
                p_19_5_reg_676 <= grp_fetch_tones_fu_205_ap_return_14;
                p_19_6_reg_681 <= grp_fetch_tones_fu_205_ap_return_15;
                p_19_7_reg_686 <= grp_fetch_tones_fu_205_ap_return_16;
                p_1_reg_781 <= grp_increment_phases_fu_149_ap_return_2;
                p_2_reg_786 <= grp_increment_phases_fu_149_ap_return_3;
                p_3_reg_791 <= grp_increment_phases_fu_149_ap_return_4;
                p_4_reg_796 <= grp_increment_phases_fu_149_ap_return_5;
                p_5_reg_801 <= grp_increment_phases_fu_149_ap_return_6;
                p_6_reg_806 <= grp_increment_phases_fu_149_ap_return_7;
                p_7_reg_811 <= grp_increment_phases_fu_149_ap_return_8;
                p_8_reg_611 <= grp_fetch_tones_fu_205_ap_return_1;
                p_9_reg_651 <= grp_fetch_tones_fu_205_ap_return_9;
                p_s_reg_776 <= grp_increment_phases_fu_149_ap_return_1;
                resdatB_last_V_reg_771 <= grp_increment_phases_fu_149_ap_return_0;
                resdatC_last_V_reg_896 <= grp_aphase_to_sincos_fu_72_ap_return_0;
                resdat_last_V_reg_606 <= grp_fetch_tones_fu_205_ap_return_0;
                t_V_reg_598_pp0_iter10_reg <= t_V_reg_598_pp0_iter9_reg;
                t_V_reg_598_pp0_iter11_reg <= t_V_reg_598_pp0_iter10_reg;
                t_V_reg_598_pp0_iter12_reg <= t_V_reg_598_pp0_iter11_reg;
                t_V_reg_598_pp0_iter13_reg <= t_V_reg_598_pp0_iter12_reg;
                t_V_reg_598_pp0_iter14_reg <= t_V_reg_598_pp0_iter13_reg;
                t_V_reg_598_pp0_iter15_reg <= t_V_reg_598_pp0_iter14_reg;
                t_V_reg_598_pp0_iter16_reg <= t_V_reg_598_pp0_iter15_reg;
                t_V_reg_598_pp0_iter17_reg <= t_V_reg_598_pp0_iter16_reg;
                t_V_reg_598_pp0_iter18_reg <= t_V_reg_598_pp0_iter17_reg;
                t_V_reg_598_pp0_iter19_reg <= t_V_reg_598_pp0_iter18_reg;
                t_V_reg_598_pp0_iter2_reg <= t_V_reg_598;
                t_V_reg_598_pp0_iter3_reg <= t_V_reg_598_pp0_iter2_reg;
                t_V_reg_598_pp0_iter4_reg <= t_V_reg_598_pp0_iter3_reg;
                t_V_reg_598_pp0_iter5_reg <= t_V_reg_598_pp0_iter4_reg;
                t_V_reg_598_pp0_iter6_reg <= t_V_reg_598_pp0_iter5_reg;
                t_V_reg_598_pp0_iter7_reg <= t_V_reg_598_pp0_iter6_reg;
                t_V_reg_598_pp0_iter8_reg <= t_V_reg_598_pp0_iter7_reg;
                t_V_reg_598_pp0_iter9_reg <= t_V_reg_598_pp0_iter8_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                t_V_reg_598 <= ap_sig_allocacmp_t_V;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln700_fu_355_p2 <= std_logic_vector(unsigned(t_V_reg_598) + unsigned(ap_const_lv8_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, grp_fetch_tones_fu_205_res_in_TDATA_blk_n, grp_downconvert_fu_105_res_out_TDATA_blk_n, regslice_both_res_out_data_iq_U_apdone_blk)
    begin
                ap_block_pp0_stage0_11001 <= (((regslice_both_res_out_data_iq_U_apdone_blk = ap_const_logic_1) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1)) or ((grp_downconvert_fu_105_res_out_TDATA_blk_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1)) or ((grp_fetch_tones_fu_205_res_in_TDATA_blk_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp146_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter31, grp_fetch_tones_fu_205_res_in_TDATA_blk_n, regslice_both_res_out_data_iq_U_apdone_blk)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp146 <= (((regslice_both_res_out_data_iq_U_apdone_blk = ap_const_logic_1) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1)) or ((grp_fetch_tones_fu_205_res_in_TDATA_blk_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp34_assign_proc : process(ap_start, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, grp_downconvert_fu_105_res_out_TDATA_blk_n, regslice_both_res_out_data_iq_U_apdone_blk)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp34 <= (((regslice_both_res_out_data_iq_U_apdone_blk = ap_const_logic_1) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1)) or ((grp_downconvert_fu_105_res_out_TDATA_blk_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1)) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp71_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, grp_fetch_tones_fu_205_res_in_TDATA_blk_n, grp_downconvert_fu_105_res_out_TDATA_blk_n, regslice_both_res_out_data_iq_U_apdone_blk)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp71 <= (((regslice_both_res_out_data_iq_U_apdone_blk = ap_const_logic_1) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1)) or ((grp_downconvert_fu_105_res_out_TDATA_blk_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1)) or ((grp_fetch_tones_fu_205_res_in_TDATA_blk_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp99_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, grp_fetch_tones_fu_205_res_in_TDATA_blk_n, grp_downconvert_fu_105_res_out_TDATA_blk_n, regslice_both_res_out_data_iq_U_apdone_blk)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp99 <= (((regslice_both_res_out_data_iq_U_apdone_blk = ap_const_logic_1) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1)) or ((grp_downconvert_fu_105_res_out_TDATA_blk_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1)) or ((grp_fetch_tones_fu_205_res_in_TDATA_blk_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, grp_fetch_tones_fu_205_res_in_TDATA_blk_n, grp_downconvert_fu_105_res_out_TDATA_blk_n, regslice_both_res_out_data_iq_U_apdone_blk)
    begin
                ap_block_pp0_stage0_subdone <= (((regslice_both_res_out_data_iq_U_apdone_blk = ap_const_logic_1) and (ap_enable_reg_pp0_iter31 = ap_const_logic_1)) or ((grp_downconvert_fu_105_res_out_TDATA_blk_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1)) or ((grp_fetch_tones_fu_205_res_in_TDATA_blk_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;

        ap_block_state10_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter9_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage0_iter10_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter11_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter12_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter13_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter14_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter15_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter16_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter17_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter18_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call108_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call108 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call14_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call14 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call48_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call48 <= (ap_start = ap_const_logic_0);
    end process;


    ap_block_state1_pp0_stage0_iter0_ignore_call74_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0_ignore_call74 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state20_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter19_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage0_iter20_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter21_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage0_iter22_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter23_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter24_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter24_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter24_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter24_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter25_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter25_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter25_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter25_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter26_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter26_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter26_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage0_iter26_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter27_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter27_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter27_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter27_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter28_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter28_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter28_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage0_iter28_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(grp_fetch_tones_fu_205_res_in_TDATA_blk_n)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (grp_fetch_tones_fu_205_res_in_TDATA_blk_n = ap_const_logic_0);
    end process;


    ap_block_state2_pp0_stage0_iter1_ignore_call108_assign_proc : process(grp_fetch_tones_fu_205_res_in_TDATA_blk_n)
    begin
                ap_block_state2_pp0_stage0_iter1_ignore_call108 <= (grp_fetch_tones_fu_205_res_in_TDATA_blk_n = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_ignore_call48_assign_proc : process(grp_fetch_tones_fu_205_res_in_TDATA_blk_n)
    begin
                ap_block_state2_pp0_stage0_iter1_ignore_call48 <= (grp_fetch_tones_fu_205_res_in_TDATA_blk_n = ap_const_logic_0);
    end process;


    ap_block_state2_pp0_stage0_iter1_ignore_call74_assign_proc : process(grp_fetch_tones_fu_205_res_in_TDATA_blk_n)
    begin
                ap_block_state2_pp0_stage0_iter1_ignore_call74 <= (grp_fetch_tones_fu_205_res_in_TDATA_blk_n = ap_const_logic_0);
    end process;

        ap_block_state30_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter29_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter29_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter29_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter29_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state31_pp0_stage0_iter30_assign_proc : process(grp_downconvert_fu_105_res_out_TDATA_blk_n)
    begin
                ap_block_state31_pp0_stage0_iter30 <= (grp_downconvert_fu_105_res_out_TDATA_blk_n = ap_const_logic_0);
    end process;

        ap_block_state31_pp0_stage0_iter30_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state31_pp0_stage0_iter30_ignore_call14_assign_proc : process(grp_downconvert_fu_105_res_out_TDATA_blk_n)
    begin
                ap_block_state31_pp0_stage0_iter30_ignore_call14 <= (grp_downconvert_fu_105_res_out_TDATA_blk_n = ap_const_logic_0);
    end process;


    ap_block_state31_pp0_stage0_iter30_ignore_call48_assign_proc : process(grp_downconvert_fu_105_res_out_TDATA_blk_n)
    begin
                ap_block_state31_pp0_stage0_iter30_ignore_call48 <= (grp_downconvert_fu_105_res_out_TDATA_blk_n = ap_const_logic_0);
    end process;


    ap_block_state31_pp0_stage0_iter30_ignore_call74_assign_proc : process(grp_downconvert_fu_105_res_out_TDATA_blk_n)
    begin
                ap_block_state31_pp0_stage0_iter30_ignore_call74 <= (grp_downconvert_fu_105_res_out_TDATA_blk_n = ap_const_logic_0);
    end process;


    ap_block_state32_pp0_stage0_iter31_assign_proc : process(regslice_both_res_out_data_iq_U_apdone_blk)
    begin
                ap_block_state32_pp0_stage0_iter31 <= (regslice_both_res_out_data_iq_U_apdone_blk = ap_const_logic_1);
    end process;


    ap_block_state32_pp0_stage0_iter31_ignore_call108_assign_proc : process(regslice_both_res_out_data_iq_U_apdone_blk)
    begin
                ap_block_state32_pp0_stage0_iter31_ignore_call108 <= (regslice_both_res_out_data_iq_U_apdone_blk = ap_const_logic_1);
    end process;


    ap_block_state32_pp0_stage0_iter31_ignore_call14_assign_proc : process(regslice_both_res_out_data_iq_U_apdone_blk)
    begin
                ap_block_state32_pp0_stage0_iter31_ignore_call14 <= (regslice_both_res_out_data_iq_U_apdone_blk = ap_const_logic_1);
    end process;


    ap_block_state32_pp0_stage0_iter31_ignore_call48_assign_proc : process(regslice_both_res_out_data_iq_U_apdone_blk)
    begin
                ap_block_state32_pp0_stage0_iter31_ignore_call48 <= (regslice_both_res_out_data_iq_U_apdone_blk = ap_const_logic_1);
    end process;


    ap_block_state32_pp0_stage0_iter31_ignore_call74_assign_proc : process(regslice_both_res_out_data_iq_U_apdone_blk)
    begin
                ap_block_state32_pp0_stage0_iter31_ignore_call74 <= (regslice_both_res_out_data_iq_U_apdone_blk = ap_const_logic_1);
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter6_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter7_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call108 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter8_ignore_call74 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter31, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter31 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_idle_pp0 = ap_const_logic_1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to30_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30)
    begin
        if (((ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0))) then 
            ap_idle_pp0_0to30 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to30 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to30)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to30 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_t_V_assign_proc : process(ap_enable_reg_pp0_iter2, group_V, ap_block_pp0_stage0, add_ln700_fu_355_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_sig_allocacmp_t_V <= add_ln700_fu_355_p2;
        else 
            ap_sig_allocacmp_t_V <= group_V;
        end if; 
    end process;


    grp_aphase_to_sincos_fu_72_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp99)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp99) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_aphase_to_sincos_fu_72_ap_ce <= ap_const_logic_1;
        else 
            grp_aphase_to_sincos_fu_72_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_aphase_to_sincos_fu_72_ap_start <= grp_aphase_to_sincos_fu_72_ap_start_reg;

    grp_downconvert_fu_105_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp146)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp146) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_downconvert_fu_105_ap_ce <= ap_const_logic_1;
        else 
            grp_downconvert_fu_105_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_downconvert_fu_105_ap_start <= grp_downconvert_fu_105_ap_start_reg;
    grp_downconvert_fu_105_res_out_TREADY <= (res_out_TREADY_int and ap_CS_fsm_pp0_stage0);

    grp_fetch_tones_fu_205_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp34)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp34) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fetch_tones_fu_205_ap_ce <= ap_const_logic_1;
        else 
            grp_fetch_tones_fu_205_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fetch_tones_fu_205_ap_start <= grp_fetch_tones_fu_205_ap_start_reg;

    grp_increment_phases_fu_149_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001_ignoreCallOp71)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp71) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_increment_phases_fu_149_ap_ce <= ap_const_logic_1;
        else 
            grp_increment_phases_fu_149_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_increment_phases_fu_149_ap_start <= grp_increment_phases_fu_149_ap_start_reg;
    phase0_V_address0 <= grp_fetch_tones_fu_205_phase0_V_address0;
    phase0_V_ce0 <= grp_fetch_tones_fu_205_phase0_V_ce0;

    res_in_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, grp_fetch_tones_fu_205_res_in_TDATA_blk_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_in_TDATA_blk_n <= grp_fetch_tones_fu_205_res_in_TDATA_blk_n;
        else 
            res_in_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    res_in_TREADY_assign_proc : process(res_in_TVALID, regslice_both_res_in_data_iq_U_ack_in)
    begin
        if (((regslice_both_res_in_data_iq_U_ack_in = ap_const_logic_1) and (res_in_TVALID = ap_const_logic_1))) then 
            res_in_TREADY <= ap_const_logic_1;
        else 
            res_in_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    res_in_TREADY_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, grp_fetch_tones_fu_205_res_in_TREADY)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            res_in_TREADY_int <= grp_fetch_tones_fu_205_res_in_TREADY;
        else 
            res_in_TREADY_int <= ap_const_logic_0;
        end if; 
    end process;


    res_out_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter30, grp_downconvert_fu_105_res_out_TDATA_blk_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_1))) then 
            res_out_TDATA_blk_n <= grp_downconvert_fu_105_res_out_TDATA_blk_n;
        else 
            res_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_out_TVALID <= regslice_both_res_out_data_iq_U_vld_out;
    toneinc_V_address0 <= grp_fetch_tones_fu_205_toneinc_V_address0;
    toneinc_V_ce0 <= grp_fetch_tones_fu_205_toneinc_V_ce0;
end behav;

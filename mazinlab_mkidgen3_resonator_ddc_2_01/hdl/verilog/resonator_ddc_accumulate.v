// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module resonator_ddc_accumulate (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        groupin,
        tones_address0,
        tones_ce0,
        tones_q0,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [7:0] groupin;
output  [7:0] tones_address0;
output   tones_ce0;
input  [255:0] tones_q0;
output  [167:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg tones_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
reg   [167:0] acc_V;
wire   [7:0] accumulator_V_address0;
reg    accumulator_V_ce0;
reg    accumulator_V_we0;
wire   [7:0] accumulator_V_address1;
reg    accumulator_V_ce1;
wire   [167:0] accumulator_V_q1;
reg   [7:0] groupin_read_reg_600;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] add_ln223_fu_184_p2;
reg   [7:0] add_ln223_reg_615;
reg   [20:0] p_Result_s_reg_620;
wire   [20:0] trunc_ln674_fu_199_p1;
reg   [20:0] trunc_ln674_reg_625;
wire   [10:0] trunc_ln1245_fu_203_p1;
reg   [10:0] trunc_ln1245_reg_631;
reg   [20:0] p_Result_132_1_reg_636;
reg   [20:0] p_Result_134_1_reg_641;
reg   [10:0] tmp_s_reg_647;
reg   [20:0] p_Result_132_2_reg_652;
reg   [20:0] p_Result_134_2_reg_657;
reg   [10:0] tmp_102_reg_663;
reg   [20:0] p_Result_132_3_reg_668;
reg   [20:0] p_Result_134_3_reg_673;
reg   [10:0] tmp_103_reg_679;
reg   [20:0] p_Result_132_4_reg_684;
reg   [20:0] p_Result_134_4_reg_689;
reg   [10:0] tmp_104_reg_695;
reg   [20:0] p_Result_132_5_reg_700;
reg   [20:0] p_Result_134_5_reg_705;
reg   [10:0] tmp_105_reg_711;
reg   [20:0] p_Result_132_6_reg_716;
reg   [20:0] p_Result_134_6_reg_721;
reg   [10:0] tmp_106_reg_727;
reg   [20:0] p_Result_132_7_reg_732;
reg   [20:0] p_Result_134_7_reg_737;
reg   [10:0] tmp_107_reg_743;
wire   [63:0] zext_ln573_fu_178_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln573_3_fu_417_p1;
wire   [167:0] p_Result_130_7_fu_574_p9;
wire   [20:0] shl_ln_fu_430_p3;
wire   [20:0] shl_ln1245_1_fu_446_p3;
wire   [20:0] shl_ln1245_2_fu_462_p3;
wire   [20:0] shl_ln1245_3_fu_478_p3;
wire   [20:0] shl_ln1245_4_fu_494_p3;
wire   [20:0] shl_ln1245_5_fu_510_p3;
wire   [20:0] shl_ln1245_6_fu_526_p3;
wire   [20:0] add_ln712_14_fu_538_p2;
wire   [20:0] add_ln712_12_fu_522_p2;
wire   [20:0] add_ln712_10_fu_506_p2;
wire   [20:0] add_ln712_8_fu_490_p2;
wire   [20:0] add_ln712_6_fu_474_p2;
wire   [20:0] add_ln712_4_fu_458_p2;
wire   [20:0] add_ln712_2_fu_442_p2;
wire   [20:0] add_ln712_fu_426_p2;
wire   [20:0] shl_ln1245_7_fu_562_p3;
wire   [20:0] add_ln712_15_fu_569_p2;
wire   [20:0] add_ln712_13_fu_533_p2;
wire   [20:0] add_ln712_11_fu_517_p2;
wire   [20:0] add_ln712_9_fu_501_p2;
wire   [20:0] add_ln712_7_fu_485_p2;
wire   [20:0] add_ln712_5_fu_469_p2;
wire   [20:0] add_ln712_3_fu_453_p2;
wire   [20:0] add_ln712_1_fu_437_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 acc_V = 168'd0;
end

resonator_ddc_accumulate_accumulator_V #(
    .DataWidth( 168 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
accumulator_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(accumulator_V_address0),
    .ce0(accumulator_V_ce0),
    .we0(accumulator_V_we0),
    .d0(acc_V),
    .address1(accumulator_V_address1),
    .ce1(accumulator_V_ce1),
    .q1(accumulator_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        acc_V <= p_Result_130_7_fu_574_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln223_reg_615 <= add_ln223_fu_184_p2;
        groupin_read_reg_600 <= groupin;
        p_Result_132_1_reg_636 <= {{tones_q0[129:109]}};
        p_Result_132_2_reg_652 <= {{tones_q0[150:130]}};
        p_Result_132_3_reg_668 <= {{tones_q0[171:151]}};
        p_Result_132_4_reg_684 <= {{tones_q0[192:172]}};
        p_Result_132_5_reg_700 <= {{tones_q0[213:193]}};
        p_Result_132_6_reg_716 <= {{tones_q0[234:214]}};
        p_Result_132_7_reg_732 <= {{tones_q0[255:235]}};
        p_Result_134_1_reg_641 <= {{accumulator_V_q1[41:21]}};
        p_Result_134_2_reg_657 <= {{accumulator_V_q1[62:42]}};
        p_Result_134_3_reg_673 <= {{accumulator_V_q1[83:63]}};
        p_Result_134_4_reg_689 <= {{accumulator_V_q1[104:84]}};
        p_Result_134_5_reg_705 <= {{accumulator_V_q1[125:105]}};
        p_Result_134_6_reg_721 <= {{accumulator_V_q1[146:126]}};
        p_Result_134_7_reg_737 <= {{accumulator_V_q1[167:147]}};
        p_Result_s_reg_620 <= {{tones_q0[108:88]}};
        tmp_102_reg_663 <= {{tones_q0[32:22]}};
        tmp_103_reg_679 <= {{tones_q0[43:33]}};
        tmp_104_reg_695 <= {{tones_q0[54:44]}};
        tmp_105_reg_711 <= {{tones_q0[65:55]}};
        tmp_106_reg_727 <= {{tones_q0[76:66]}};
        tmp_107_reg_743 <= {{tones_q0[87:77]}};
        tmp_s_reg_647 <= {{tones_q0[21:11]}};
        trunc_ln1245_reg_631 <= trunc_ln1245_fu_203_p1;
        trunc_ln674_reg_625 <= trunc_ln674_fu_199_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        accumulator_V_ce0 = 1'b1;
    end else begin
        accumulator_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        accumulator_V_ce1 = 1'b1;
    end else begin
        accumulator_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_ce))) begin
        accumulator_V_we0 = 1'b1;
    end else begin
        accumulator_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tones_ce0 = 1'b1;
    end else begin
        tones_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accumulator_V_address0 = zext_ln573_3_fu_417_p1;

assign accumulator_V_address1 = zext_ln573_fu_178_p1;

assign add_ln223_fu_184_p2 = ($signed(groupin_read_reg_600) + $signed(8'd255));

assign add_ln712_10_fu_506_p2 = (p_Result_134_5_reg_705 + p_Result_132_5_reg_700);

assign add_ln712_11_fu_517_p2 = (p_Result_134_5_reg_705 + shl_ln1245_5_fu_510_p3);

assign add_ln712_12_fu_522_p2 = (p_Result_134_6_reg_721 + p_Result_132_6_reg_716);

assign add_ln712_13_fu_533_p2 = (p_Result_134_6_reg_721 + shl_ln1245_6_fu_526_p3);

assign add_ln712_14_fu_538_p2 = (p_Result_134_7_reg_737 + p_Result_132_7_reg_732);

assign add_ln712_15_fu_569_p2 = (p_Result_134_7_reg_737 + shl_ln1245_7_fu_562_p3);

assign add_ln712_1_fu_437_p2 = (trunc_ln674_reg_625 + shl_ln_fu_430_p3);

assign add_ln712_2_fu_442_p2 = (p_Result_134_1_reg_641 + p_Result_132_1_reg_636);

assign add_ln712_3_fu_453_p2 = (p_Result_134_1_reg_641 + shl_ln1245_1_fu_446_p3);

assign add_ln712_4_fu_458_p2 = (p_Result_134_2_reg_657 + p_Result_132_2_reg_652);

assign add_ln712_5_fu_469_p2 = (p_Result_134_2_reg_657 + shl_ln1245_2_fu_462_p3);

assign add_ln712_6_fu_474_p2 = (p_Result_134_3_reg_673 + p_Result_132_3_reg_668);

assign add_ln712_7_fu_485_p2 = (p_Result_134_3_reg_673 + shl_ln1245_3_fu_478_p3);

assign add_ln712_8_fu_490_p2 = (p_Result_134_4_reg_689 + p_Result_132_4_reg_684);

assign add_ln712_9_fu_501_p2 = (p_Result_134_4_reg_689 + shl_ln1245_4_fu_494_p3);

assign add_ln712_fu_426_p2 = (trunc_ln674_reg_625 + p_Result_s_reg_620);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return = {{{{{{{{add_ln712_14_fu_538_p2}, {add_ln712_12_fu_522_p2}}, {add_ln712_10_fu_506_p2}}, {add_ln712_8_fu_490_p2}}, {add_ln712_6_fu_474_p2}}, {add_ln712_4_fu_458_p2}}, {add_ln712_2_fu_442_p2}}, {add_ln712_fu_426_p2}};

assign p_Result_130_7_fu_574_p9 = {{{{{{{{add_ln712_15_fu_569_p2}, {add_ln712_13_fu_533_p2}}, {add_ln712_11_fu_517_p2}}, {add_ln712_9_fu_501_p2}}, {add_ln712_7_fu_485_p2}}, {add_ln712_5_fu_469_p2}}, {add_ln712_3_fu_453_p2}}, {add_ln712_1_fu_437_p2}};

assign shl_ln1245_1_fu_446_p3 = {{tmp_s_reg_647}, {10'd0}};

assign shl_ln1245_2_fu_462_p3 = {{tmp_102_reg_663}, {10'd0}};

assign shl_ln1245_3_fu_478_p3 = {{tmp_103_reg_679}, {10'd0}};

assign shl_ln1245_4_fu_494_p3 = {{tmp_104_reg_695}, {10'd0}};

assign shl_ln1245_5_fu_510_p3 = {{tmp_105_reg_711}, {10'd0}};

assign shl_ln1245_6_fu_526_p3 = {{tmp_106_reg_727}, {10'd0}};

assign shl_ln1245_7_fu_562_p3 = {{tmp_107_reg_743}, {10'd0}};

assign shl_ln_fu_430_p3 = {{trunc_ln1245_reg_631}, {10'd0}};

assign tones_address0 = zext_ln573_fu_178_p1;

assign trunc_ln1245_fu_203_p1 = tones_q0[10:0];

assign trunc_ln674_fu_199_p1 = accumulator_V_q1[20:0];

assign zext_ln573_3_fu_417_p1 = add_ln223_reg_615;

assign zext_ln573_fu_178_p1 = groupin;

endmodule //resonator_ddc_accumulate

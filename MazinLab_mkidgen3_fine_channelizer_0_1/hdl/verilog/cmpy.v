// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module cmpy (
        ap_clk,
        ap_rst,
        ar_V_read,
        ai_V_read,
        br_V_read,
        bi_V_read,
        ap_return_0,
        ap_return_1,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] ar_V_read;
input  [15:0] ai_V_read;
input  [15:0] br_V_read;
input  [15:0] bi_V_read;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
input   ap_ce;

reg[15:0] ap_return_0;
reg[15:0] ap_return_1;

wire  signed [31:0] sext_ln1116_fu_68_p1;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_11001;
wire  signed [31:0] sext_ln1118_fu_72_p1;
wire  signed [31:0] sext_ln1118_1_fu_76_p1;
reg  signed [31:0] sext_ln1118_1_reg_613;
wire  signed [31:0] sext_ln1116_1_fu_80_p1;
reg  signed [31:0] sext_ln1116_1_reg_619;
wire  signed [31:0] grp_fu_574_p2;
reg  signed [31:0] p_Val2_s_reg_625;
wire  signed [31:0] grp_fu_580_p2;
reg  signed [31:0] p_Val2_6_reg_630;
wire  signed [31:0] grp_fu_586_p2;
reg  signed [31:0] p_Val2_5_reg_636;
wire  signed [31:0] grp_fu_592_p3;
reg  signed [31:0] ret_V_reg_642;
reg  signed [31:0] ret_V_reg_642_pp0_iter4_reg;
reg   [0:0] p_Result_s_reg_650;
reg   [0:0] p_Result_s_reg_650_pp0_iter4_reg;
reg   [0:0] p_Result_s_reg_650_pp0_iter5_reg;
wire   [13:0] trunc_ln718_fu_91_p1;
reg   [13:0] trunc_ln718_reg_656;
reg   [0:0] p_Result_1_reg_661;
reg   [0:0] p_Result_1_reg_661_pp0_iter4_reg;
reg   [0:0] Range2_all_ones_1_reg_667;
reg   [0:0] Range2_all_ones_1_reg_667_pp0_iter4_reg;
reg   [0:0] Range2_all_ones_1_reg_667_pp0_iter5_reg;
(* use_dsp48 = "no" *) wire   [31:0] add_ln1192_fu_114_p2;
reg   [31:0] add_ln1192_reg_674;
reg   [31:0] add_ln1192_reg_674_pp0_iter4_reg;
wire   [32:0] ret_V_1_fu_118_p2;
reg   [32:0] ret_V_1_reg_683;
reg   [32:0] ret_V_1_reg_683_pp0_iter4_reg;
reg   [0:0] p_Result_4_reg_688;
reg   [0:0] p_Result_4_reg_688_pp0_iter4_reg;
reg   [0:0] p_Result_4_reg_688_pp0_iter5_reg;
wire   [13:0] trunc_ln718_1_fu_132_p1;
reg   [13:0] trunc_ln718_1_reg_694;
reg   [1:0] p_Result_3_reg_699;
reg   [1:0] p_Result_3_reg_699_pp0_iter4_reg;
wire   [0:0] r_1_fu_146_p2;
reg   [0:0] r_1_reg_705;
wire   [0:0] r_2_fu_151_p2;
reg   [0:0] r_2_reg_710;
wire   [15:0] p_Val2_4_fu_194_p2;
reg   [15:0] p_Val2_4_reg_715;
wire   [0:0] carry_1_fu_214_p2;
reg   [0:0] carry_1_reg_721;
wire   [0:0] p_Result_2_fu_219_p3;
reg   [0:0] p_Result_2_reg_727;
wire   [0:0] and_ln786_fu_262_p2;
reg   [0:0] and_ln786_reg_732;
wire   [15:0] p_Val2_9_fu_313_p2;
reg   [15:0] p_Val2_9_reg_738;
wire   [0:0] carry_3_fu_333_p2;
reg   [0:0] carry_3_reg_744;
wire   [0:0] p_Result_6_fu_339_p3;
reg   [0:0] p_Result_6_reg_750;
wire   [0:0] Range1_all_ones_1_fu_354_p2;
reg   [0:0] Range1_all_ones_1_reg_755;
wire   [0:0] Range1_all_zeros_fu_359_p2;
reg   [0:0] Range1_all_zeros_reg_761;
wire   [0:0] and_ln786_2_fu_391_p2;
reg   [0:0] and_ln786_2_reg_766;
wire    ap_block_pp0_stage0;
wire  signed [32:0] lhs_V_fu_108_p1;
wire  signed [32:0] rhs_V_fu_111_p1;
wire   [0:0] tmp_fu_165_p3;
wire   [0:0] tmp_72_fu_177_p3;
wire   [0:0] r_fu_172_p2;
wire   [0:0] and_ln415_fu_184_p2;
wire   [15:0] p_Val2_3_fu_156_p4;
wire   [15:0] zext_ln415_fu_190_p1;
wire   [0:0] tmp_73_fu_200_p3;
wire   [0:0] xor_ln416_1_fu_208_p2;
wire   [0:0] tmp_76_fu_227_p3;
wire   [0:0] xor_ln416_2_fu_240_p2;
wire   [0:0] or_ln416_1_fu_245_p2;
wire   [0:0] xor_ln779_fu_234_p2;
wire   [0:0] or_ln416_fu_251_p2;
wire   [0:0] deleted_ones_fu_257_p2;
wire   [0:0] tmp_78_fu_277_p3;
wire   [0:0] tmp_80_fu_296_p3;
wire   [0:0] or_ln412_fu_291_p2;
wire   [0:0] and_ln415_1_fu_303_p2;
wire   [15:0] p_Val2_8_fu_268_p4;
wire   [15:0] zext_ln415_1_fu_309_p1;
wire   [0:0] tmp_81_fu_319_p3;
wire   [0:0] p_Result_5_fu_284_p3;
wire   [0:0] xor_ln416_fu_327_p2;
wire   [0:0] tmp_84_fu_364_p3;
wire   [0:0] Range2_all_ones_fu_347_p3;
wire   [0:0] xor_ln779_1_fu_371_p2;
wire   [0:0] and_ln779_fu_377_p2;
wire   [0:0] deleted_ones_1_fu_383_p3;
wire   [0:0] xor_ln785_fu_401_p2;
wire   [0:0] or_ln785_fu_405_p2;
wire   [0:0] xor_ln785_1_fu_410_p2;
wire   [0:0] and_ln781_fu_397_p2;
wire   [0:0] or_ln786_fu_421_p2;
wire   [0:0] xor_ln786_fu_426_p2;
wire   [0:0] underflow_fu_432_p2;
wire   [0:0] overflow_fu_415_p2;
wire   [0:0] or_ln340_17_fu_443_p2;
wire   [0:0] or_ln340_fu_437_p2;
wire   [0:0] or_ln340_13_fu_448_p2;
wire   [15:0] select_ln340_fu_454_p3;
wire   [15:0] select_ln388_fu_461_p3;
wire   [0:0] deleted_zeros_fu_476_p3;
wire   [0:0] xor_ln785_2_fu_485_p2;
wire   [0:0] or_ln785_1_fu_491_p2;
wire   [0:0] xor_ln785_3_fu_496_p2;
wire   [0:0] and_ln781_1_fu_481_p2;
wire   [0:0] or_ln786_1_fu_507_p2;
wire   [0:0] xor_ln786_16_fu_512_p2;
wire   [0:0] underflow_1_fu_518_p2;
wire   [0:0] overflow_1_fu_501_p2;
wire   [0:0] or_ln340_18_fu_529_p2;
wire   [0:0] or_ln340_15_fu_523_p2;
wire   [0:0] or_ln340_16_fu_534_p2;
wire   [15:0] select_ln340_4_fu_540_p3;
wire   [15:0] select_ln388_4_fu_547_p3;
wire   [15:0] select_ln340_32_fu_468_p3;
wire   [15:0] select_ln340_33_fu_554_p3;
wire  signed [15:0] grp_fu_574_p0;
wire  signed [15:0] grp_fu_574_p1;
wire  signed [15:0] grp_fu_580_p0;
wire  signed [15:0] grp_fu_586_p1;
wire  signed [15:0] grp_fu_592_p0;
wire  signed [15:0] grp_fu_592_p1;
reg    grp_fu_574_ce;
reg    grp_fu_580_ce;
reg    grp_fu_586_ce;
reg    grp_fu_592_ce;
reg    ap_ce_reg;
reg   [15:0] ar_V_read_int_reg;
reg  signed [15:0] ai_V_read_int_reg;
reg   [15:0] br_V_read_int_reg;
reg  signed [15:0] bi_V_read_int_reg;
reg   [15:0] ap_return_0_int_reg;
reg   [15:0] ap_return_1_int_reg;

fine_channelizer_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
fine_channelizer_bkb_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_574_p0),
    .din1(grp_fu_574_p1),
    .ce(grp_fu_574_ce),
    .dout(grp_fu_574_p2)
);

fine_channelizer_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
fine_channelizer_bkb_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_580_p0),
    .din1(bi_V_read_int_reg),
    .ce(grp_fu_580_ce),
    .dout(grp_fu_580_p2)
);

fine_channelizer_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
fine_channelizer_bkb_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ai_V_read_int_reg),
    .din1(grp_fu_586_p1),
    .ce(grp_fu_586_ce),
    .dout(grp_fu_586_p2)
);

fine_channelizer_cud #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fine_channelizer_cud_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_592_p0),
    .din1(grp_fu_592_p1),
    .din2(p_Val2_s_reg_625),
    .ce(grp_fu_592_ce),
    .dout(grp_fu_592_p3)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        Range1_all_ones_1_reg_755 <= Range1_all_ones_1_fu_354_p2;
        Range1_all_zeros_reg_761 <= Range1_all_zeros_fu_359_p2;
        Range2_all_ones_1_reg_667 <= grp_fu_592_p3[32'd31];
        Range2_all_ones_1_reg_667_pp0_iter4_reg <= Range2_all_ones_1_reg_667;
        Range2_all_ones_1_reg_667_pp0_iter5_reg <= Range2_all_ones_1_reg_667_pp0_iter4_reg;
        add_ln1192_reg_674 <= add_ln1192_fu_114_p2;
        add_ln1192_reg_674_pp0_iter4_reg <= add_ln1192_reg_674;
        and_ln786_2_reg_766 <= and_ln786_2_fu_391_p2;
        and_ln786_reg_732 <= and_ln786_fu_262_p2;
        carry_1_reg_721 <= carry_1_fu_214_p2;
        carry_3_reg_744 <= carry_3_fu_333_p2;
        p_Result_1_reg_661 <= grp_fu_592_p3[32'd30];
        p_Result_1_reg_661_pp0_iter4_reg <= p_Result_1_reg_661;
        p_Result_2_reg_727 <= p_Val2_4_fu_194_p2[32'd15];
        p_Result_3_reg_699 <= {{ret_V_1_fu_118_p2[32:31]}};
        p_Result_3_reg_699_pp0_iter4_reg <= p_Result_3_reg_699;
        p_Result_4_reg_688 <= ret_V_1_fu_118_p2[32'd32];
        p_Result_4_reg_688_pp0_iter4_reg <= p_Result_4_reg_688;
        p_Result_4_reg_688_pp0_iter5_reg <= p_Result_4_reg_688_pp0_iter4_reg;
        p_Result_6_reg_750 <= p_Val2_9_fu_313_p2[32'd15];
        p_Result_s_reg_650 <= grp_fu_592_p3[32'd31];
        p_Result_s_reg_650_pp0_iter4_reg <= p_Result_s_reg_650;
        p_Result_s_reg_650_pp0_iter5_reg <= p_Result_s_reg_650_pp0_iter4_reg;
        p_Val2_4_reg_715 <= p_Val2_4_fu_194_p2;
        p_Val2_5_reg_636 <= grp_fu_586_p2;
        p_Val2_6_reg_630 <= grp_fu_580_p2;
        p_Val2_9_reg_738 <= p_Val2_9_fu_313_p2;
        p_Val2_s_reg_625 <= grp_fu_574_p2;
        r_1_reg_705 <= r_1_fu_146_p2;
        r_2_reg_710 <= r_2_fu_151_p2;
        ret_V_1_reg_683 <= ret_V_1_fu_118_p2;
        ret_V_1_reg_683_pp0_iter4_reg <= ret_V_1_reg_683;
        ret_V_reg_642 <= grp_fu_592_p3;
        ret_V_reg_642_pp0_iter4_reg <= ret_V_reg_642;
        sext_ln1116_1_reg_619 <= sext_ln1116_1_fu_80_p1;
        sext_ln1118_1_reg_613 <= sext_ln1118_1_fu_76_p1;
        trunc_ln718_1_reg_694 <= trunc_ln718_1_fu_132_p1;
        trunc_ln718_reg_656 <= trunc_ln718_fu_91_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        ai_V_read_int_reg <= ai_V_read;
        ar_V_read_int_reg <= ar_V_read;
        bi_V_read_int_reg <= bi_V_read;
        br_V_read_int_reg <= br_V_read;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= select_ln340_32_fu_468_p3;
        ap_return_1_int_reg <= select_ln340_33_fu_554_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = select_ln340_32_fu_468_p3;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = select_ln340_33_fu_554_p3;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_574_ce = 1'b1;
    end else begin
        grp_fu_574_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_580_ce = 1'b1;
    end else begin
        grp_fu_580_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_586_ce = 1'b1;
    end else begin
        grp_fu_586_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_592_ce = 1'b1;
    end else begin
        grp_fu_592_ce = 1'b0;
    end
end

assign Range1_all_ones_1_fu_354_p2 = ((p_Result_3_reg_699_pp0_iter4_reg == 2'd3) ? 1'b1 : 1'b0);

assign Range1_all_zeros_fu_359_p2 = ((p_Result_3_reg_699_pp0_iter4_reg == 2'd0) ? 1'b1 : 1'b0);

assign Range2_all_ones_fu_347_p3 = ret_V_1_reg_683_pp0_iter4_reg[32'd32];

assign add_ln1192_fu_114_p2 = ($signed(p_Val2_6_reg_630) + $signed(p_Val2_5_reg_636));

assign and_ln415_1_fu_303_p2 = (tmp_80_fu_296_p3 & or_ln412_fu_291_p2);

assign and_ln415_fu_184_p2 = (tmp_72_fu_177_p3 & r_fu_172_p2);

assign and_ln779_fu_377_p2 = (xor_ln779_1_fu_371_p2 & Range2_all_ones_fu_347_p3);

assign and_ln781_1_fu_481_p2 = (carry_3_reg_744 & Range1_all_ones_1_reg_755);

assign and_ln781_fu_397_p2 = (carry_1_reg_721 & Range2_all_ones_1_reg_667_pp0_iter5_reg);

assign and_ln786_2_fu_391_p2 = (p_Result_6_fu_339_p3 & deleted_ones_1_fu_383_p3);

assign and_ln786_fu_262_p2 = (p_Result_2_fu_219_p3 & deleted_ones_fu_257_p2);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign carry_1_fu_214_p2 = (xor_ln416_1_fu_208_p2 & p_Result_1_reg_661_pp0_iter4_reg);

assign carry_3_fu_333_p2 = (xor_ln416_fu_327_p2 & p_Result_5_fu_284_p3);

assign deleted_ones_1_fu_383_p3 = ((carry_3_fu_333_p2[0:0] === 1'b1) ? and_ln779_fu_377_p2 : Range1_all_ones_1_fu_354_p2);

assign deleted_ones_fu_257_p2 = (or_ln416_fu_251_p2 & Range2_all_ones_1_reg_667_pp0_iter4_reg);

assign deleted_zeros_fu_476_p3 = ((carry_3_reg_744[0:0] === 1'b1) ? Range1_all_ones_1_reg_755 : Range1_all_zeros_reg_761);

assign grp_fu_574_p0 = sext_ln1116_fu_68_p1;

assign grp_fu_574_p1 = sext_ln1118_fu_72_p1;

assign grp_fu_580_p0 = sext_ln1116_fu_68_p1;

assign grp_fu_586_p1 = sext_ln1118_fu_72_p1;

assign grp_fu_592_p0 = sext_ln1116_1_reg_619;

assign grp_fu_592_p1 = sext_ln1118_1_reg_613;

assign lhs_V_fu_108_p1 = p_Val2_5_reg_636;

assign or_ln340_13_fu_448_p2 = (or_ln340_17_fu_443_p2 | and_ln781_fu_397_p2);

assign or_ln340_15_fu_523_p2 = (underflow_1_fu_518_p2 | overflow_1_fu_501_p2);

assign or_ln340_16_fu_534_p2 = (or_ln340_18_fu_529_p2 | and_ln781_1_fu_481_p2);

assign or_ln340_17_fu_443_p2 = (xor_ln785_1_fu_410_p2 | and_ln786_reg_732);

assign or_ln340_18_fu_529_p2 = (xor_ln785_3_fu_496_p2 | and_ln786_2_reg_766);

assign or_ln340_fu_437_p2 = (underflow_fu_432_p2 | overflow_fu_415_p2);

assign or_ln412_fu_291_p2 = (tmp_78_fu_277_p3 | r_2_reg_710);

assign or_ln416_1_fu_245_p2 = (xor_ln416_2_fu_240_p2 | tmp_73_fu_200_p3);

assign or_ln416_fu_251_p2 = (xor_ln779_fu_234_p2 | or_ln416_1_fu_245_p2);

assign or_ln785_1_fu_491_p2 = (xor_ln785_2_fu_485_p2 | p_Result_6_reg_750);

assign or_ln785_fu_405_p2 = (xor_ln785_fu_401_p2 | p_Result_2_reg_727);

assign or_ln786_1_fu_507_p2 = (and_ln786_2_reg_766 | and_ln781_1_fu_481_p2);

assign or_ln786_fu_421_p2 = (and_ln786_reg_732 | and_ln781_fu_397_p2);

assign overflow_1_fu_501_p2 = (xor_ln785_3_fu_496_p2 & or_ln785_1_fu_491_p2);

assign overflow_fu_415_p2 = (xor_ln785_1_fu_410_p2 & or_ln785_fu_405_p2);

assign p_Result_2_fu_219_p3 = p_Val2_4_fu_194_p2[32'd15];

assign p_Result_5_fu_284_p3 = add_ln1192_reg_674_pp0_iter4_reg[32'd30];

assign p_Result_6_fu_339_p3 = p_Val2_9_fu_313_p2[32'd15];

assign p_Val2_3_fu_156_p4 = {{ret_V_reg_642_pp0_iter4_reg[30:15]}};

assign p_Val2_4_fu_194_p2 = (p_Val2_3_fu_156_p4 + zext_ln415_fu_190_p1);

assign p_Val2_8_fu_268_p4 = {{add_ln1192_reg_674_pp0_iter4_reg[30:15]}};

assign p_Val2_9_fu_313_p2 = (p_Val2_8_fu_268_p4 + zext_ln415_1_fu_309_p1);

assign r_1_fu_146_p2 = ((trunc_ln718_reg_656 != 14'd0) ? 1'b1 : 1'b0);

assign r_2_fu_151_p2 = ((trunc_ln718_1_reg_694 != 14'd0) ? 1'b1 : 1'b0);

assign r_fu_172_p2 = (tmp_fu_165_p3 | r_1_reg_705);

assign ret_V_1_fu_118_p2 = ($signed(lhs_V_fu_108_p1) + $signed(rhs_V_fu_111_p1));

assign rhs_V_fu_111_p1 = p_Val2_6_reg_630;

assign select_ln340_32_fu_468_p3 = ((or_ln340_13_fu_448_p2[0:0] === 1'b1) ? select_ln340_fu_454_p3 : select_ln388_fu_461_p3);

assign select_ln340_33_fu_554_p3 = ((or_ln340_16_fu_534_p2[0:0] === 1'b1) ? select_ln340_4_fu_540_p3 : select_ln388_4_fu_547_p3);

assign select_ln340_4_fu_540_p3 = ((or_ln340_15_fu_523_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_9_reg_738);

assign select_ln340_fu_454_p3 = ((or_ln340_fu_437_p2[0:0] === 1'b1) ? 16'd32767 : p_Val2_4_reg_715);

assign select_ln388_4_fu_547_p3 = ((underflow_1_fu_518_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_9_reg_738);

assign select_ln388_fu_461_p3 = ((underflow_fu_432_p2[0:0] === 1'b1) ? 16'd32768 : p_Val2_4_reg_715);

assign sext_ln1116_1_fu_80_p1 = ai_V_read_int_reg;

assign sext_ln1116_fu_68_p1 = $signed(ar_V_read_int_reg);

assign sext_ln1118_1_fu_76_p1 = bi_V_read_int_reg;

assign sext_ln1118_fu_72_p1 = $signed(br_V_read_int_reg);

assign tmp_72_fu_177_p3 = ret_V_reg_642_pp0_iter4_reg[32'd14];

assign tmp_73_fu_200_p3 = p_Val2_4_fu_194_p2[32'd15];

assign tmp_76_fu_227_p3 = ret_V_reg_642_pp0_iter4_reg[32'd31];

assign tmp_78_fu_277_p3 = add_ln1192_reg_674_pp0_iter4_reg[32'd15];

assign tmp_80_fu_296_p3 = add_ln1192_reg_674_pp0_iter4_reg[32'd14];

assign tmp_81_fu_319_p3 = p_Val2_9_fu_313_p2[32'd15];

assign tmp_84_fu_364_p3 = add_ln1192_reg_674_pp0_iter4_reg[32'd31];

assign tmp_fu_165_p3 = ret_V_reg_642_pp0_iter4_reg[32'd15];

assign trunc_ln718_1_fu_132_p1 = add_ln1192_fu_114_p2[13:0];

assign trunc_ln718_fu_91_p1 = grp_fu_592_p3[13:0];

assign underflow_1_fu_518_p2 = (xor_ln786_16_fu_512_p2 & p_Result_4_reg_688_pp0_iter5_reg);

assign underflow_fu_432_p2 = (xor_ln786_fu_426_p2 & p_Result_s_reg_650_pp0_iter5_reg);

assign xor_ln416_1_fu_208_p2 = (tmp_73_fu_200_p3 ^ 1'd1);

assign xor_ln416_2_fu_240_p2 = (p_Result_1_reg_661_pp0_iter4_reg ^ 1'd1);

assign xor_ln416_fu_327_p2 = (tmp_81_fu_319_p3 ^ 1'd1);

assign xor_ln779_1_fu_371_p2 = (tmp_84_fu_364_p3 ^ 1'd1);

assign xor_ln779_fu_234_p2 = (tmp_76_fu_227_p3 ^ 1'd1);

assign xor_ln785_1_fu_410_p2 = (p_Result_s_reg_650_pp0_iter5_reg ^ 1'd1);

assign xor_ln785_2_fu_485_p2 = (deleted_zeros_fu_476_p3 ^ 1'd1);

assign xor_ln785_3_fu_496_p2 = (p_Result_4_reg_688_pp0_iter5_reg ^ 1'd1);

assign xor_ln785_fu_401_p2 = (carry_1_reg_721 ^ Range2_all_ones_1_reg_667_pp0_iter5_reg);

assign xor_ln786_16_fu_512_p2 = (or_ln786_1_fu_507_p2 ^ 1'd1);

assign xor_ln786_fu_426_p2 = (or_ln786_fu_421_p2 ^ 1'd1);

assign zext_ln415_1_fu_309_p1 = and_ln415_1_fu_303_p2;

assign zext_ln415_fu_190_p1 = and_ln415_fu_184_p2;

endmodule //cmpy
